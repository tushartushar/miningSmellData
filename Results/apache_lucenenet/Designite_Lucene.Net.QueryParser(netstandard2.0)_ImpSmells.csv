Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The method has 209 lines of code.
Long Method,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The method has 610 lines of code.
Long Method,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The method has 164 lines of code.
Long Method,Lucene.Net.QueryParsers.ComplexPhrase,ComplexPhraseQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\ComplexPhrase\ComplexPhraseQueryParser.cs,Rewrite,The method has 100 lines of code.
Long Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The method has 214 lines of code.
Long Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The method has 248 lines of code.
Long Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The method has 313 lines of code.
Long Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The method has 142 lines of code.
Long Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has 283 lines of code.
Long Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The method has 352 lines of code.
Complex Method,Lucene.Net.QueryParsers.Classic,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\ParseException.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Classic,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\ParseException.cs,AddEscapes,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Clause,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,Cyclomatic complexity of the method is 31
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Jj_scan_token,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Jj_add_error_token,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,GenerateParseException,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,AddClause,Cyclomatic complexity of the method is 11
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,DiscardEscapeChar,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,GetNextToken,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Classic,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\TokenMgrError.cs,AddEscapes,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.ComplexPhrase,ComplexPhraseQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\ComplexPhrase\ComplexPhraseQueryParser.cs,Rewrite,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.ComplexPhrase,ComplexPhraseQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\ComplexPhrase\ComplexPhraseQueryParser.cs,Equals,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Flexible.Core.Util,QueryNodeOperation,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Util\QueryNodeOperation.cs,LogicalAnd,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,EscapeQuerySyntax,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\EscapeQuerySyntaxImpl.cs,ReplaceIgnoreCase,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,EscapeQuerySyntax,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\EscapeQuerySyntaxImpl.cs,DiscardEscapeChar,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\ParseException.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\ParseException.cs,AddEscapes,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,Cyclomatic complexity of the method is 30
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,Cyclomatic complexity of the method is 34
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_scan_token,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_add_error_token,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,GenerateParseException,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,GetNextToken,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\TokenMgrError.cs,AddEscapes,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,Cyclomatic complexity of the method is 29
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,GroupQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\GroupQueryNodeProcessor.cs,ApplyModifier,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,NumericQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\NumericQueryNodeProcessor.cs,PostProcessNode,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,NumericRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\NumericRangeQueryNodeProcessor.cs,PostProcessNode,Cyclomatic complexity of the method is 18
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard.Processors,WildcardQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\WildcardQueryNodeProcessor.cs,IsPrefixWildcard,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,ParseSubQuery,Cyclomatic complexity of the method is 11
Complex Method,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,ConsumeSubQuery,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,ConsumePhrase,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,ConsumeToken,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\ParseException.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\ParseException.cs,AddEscapes,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,PrefixOperatorQuery,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,SimpleTerm,Cyclomatic complexity of the method is 17
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,Jj_scan_token,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,Jj_add_error_token,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,GenerateParseException,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,GetNextToken,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.QueryParsers.Surround.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\TokenMgrError.cs,AddEscapes,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.QueryParsers.Surround.Query,SrndPrefixQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\SrndPrefixQuery.cs,VisitMatchingTerms,Cyclomatic complexity of the method is 8
Long Parameter List,Lucene.Net.QueryParsers.Classic,MultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\MultiFieldQueryParser.cs,GetRangeQuery,The method has 5 parameters. Parameters: field' part1' part2' startInclusive' endInclusive
Long Parameter List,Lucene.Net.QueryParsers.Classic,MultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\MultiFieldQueryParser.cs,Parse,The method has 5 parameters. Parameters: matchVersion' query' fields' flags' analyzer
Long Parameter List,Lucene.Net.QueryParsers.Classic,MultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\MultiFieldQueryParser.cs,Parse,The method has 5 parameters. Parameters: matchVersion' queries' fields' flags' analyzer
Long Parameter List,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetRangeQuery,The method has 5 parameters. Parameters: field' part1' part2' startInclusive' endInclusive
Long Parameter List,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,NewRangeQuery,The method has 5 parameters. Parameters: field' part1' part2' startInclusive' endInclusive
Long Parameter List,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,HandleBareTokenQuery,The method has 7 parameters. Parameters: qfield' term' fuzzySlop' prefix' wildcard' fuzzy' regexp
Long Parameter List,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjCanMove_0,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjCanMove_1,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjCanMove_2,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Classic,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\TokenMgrError.cs,LexicalError,The method has 6 parameters. Parameters: eofSeen' lexState' errorLine' errorColumn' errorAfter' curChar
Long Parameter List,Lucene.Net.QueryParsers.Classic,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\TokenMgrError.cs,TokenMgrError,The method has 7 parameters. Parameters: eofSeen' lexState' errorLine' errorColumn' errorAfter' curChar' reason
Long Parameter List,Lucene.Net.QueryParsers.ComplexPhrase,ComplexPhraseQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\ComplexPhrase\ComplexPhraseQueryParser.cs,GetRangeQuery,The method has 5 parameters. Parameters: field' part1' part2' startInclusive' endInclusive
Long Parameter List,Lucene.Net.QueryParsers.ComplexPhrase,ComplexPhraseQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\ComplexPhrase\ComplexPhraseQueryParser.cs,NewRangeQuery,The method has 5 parameters. Parameters: field' part1' part2' startInclusive' endInclusive
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Core.Nodes,FuzzyQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\FuzzyQueryNode.cs,FuzzyQueryNode,The method has 5 parameters. Parameters: field' term' minSimilarity' begin' end
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Core.Nodes,FuzzyQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\FuzzyQueryNode.cs,FuzzyQueryNode,The method has 5 parameters. Parameters: field' term' minSimilarity' begin' end
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Core.Nodes,FuzzyQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\FuzzyQueryNode.cs,FuzzyQueryNode,The method has 5 parameters. Parameters: field' term' minSimilarity' begin' end
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Core.Nodes,ProximityQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\ProximityQueryNode.cs,ProximityQueryNode,The method has 5 parameters. Parameters: clauses' field' type' distance' inorder
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,NumericRangeQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\NumericRangeQueryNode.cs,NumericRangeQueryNode,The method has 5 parameters. Parameters: lower' upper' lowerInclusive' upperInclusive' numericConfig
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,NumericRangeQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\NumericRangeQueryNode.cs,SetBounds,The method has 5 parameters. Parameters: lower' upper' lowerInclusive' upperInclusive' numericConfig
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjCanMove_0,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjCanMove_1,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjCanMove_2,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\TokenMgrError.cs,LexicalError,The method has 6 parameters. Parameters: eofSeen' lexState' errorLine' errorColumn' errorAfter' curChar
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\TokenMgrError.cs,TokenMgrError,The method has 7 parameters. Parameters: eofSeen' lexState' errorLine' errorColumn' errorAfter' curChar' reason
Long Parameter List,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjCanMove_0,The method has 5 parameters. Parameters: hiByte' i1' i2' l1' l2
Long Parameter List,Lucene.Net.QueryParsers.Surround.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\TokenMgrError.cs,LexicalError,The method has 6 parameters. Parameters: eofSeen' lexState' errorLine' errorColumn' errorAfter' curChar
Long Parameter List,Lucene.Net.QueryParsers.Surround.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\TokenMgrError.cs,TokenMgrError,The method has 7 parameters. Parameters: EOFSeen' lexState' errorLine' errorColumn' errorAfter' curChar' reason
Long Parameter List,Lucene.Net.QueryParsers.Surround.Query,DistanceQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\DistanceQuery.cs,DistanceQuery,The method has 5 parameters. Parameters: queries' infix' opDistance' opName' ordered
Long Identifier,Lucene.Net.QueryParsers.Ext,Extensions,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Ext\Extensions.cs,,The length of the parameter DEFAULT_EXTENSION_FIELD_DELIMITER is 33.
Long Identifier,Lucene.Net.QueryParsers.Flexible.Core.Messages,QueryParserMessages,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Messages\QueryParserMessages.cs,,The length of the parameter INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION is 40.
Long Identifier,Lucene.Net.QueryParsers.Flexible.Core.Messages,QueryParserMessages,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Messages\QueryParserMessages.cs,,The length of the parameter INVALID_SYNTAX_ESCAPE_CHARACTER is 31.
Long Identifier,Lucene.Net.QueryParsers.Flexible.Core.Messages,QueryParserMessages,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Messages\QueryParserMessages.cs,,The length of the parameter INVALID_SYNTAX_ESCAPE_NONE_HEX_UNICODE is 38.
Long Identifier,Lucene.Net.QueryParsers.Flexible.Core.Messages,QueryParserMessages,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Messages\QueryParserMessages.cs,,The length of the parameter NUMBER_CLASS_NOT_SUPPORTED_BY_NUMERIC_RANGE_QUERY is 49.
Long Identifier,Lucene.Net.QueryParsers.Xml.Builders,LikeThisQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\LikeThisQueryBuilder.cs,,The length of the parameter DEFAULT_PERCENT_TERMS_TO_MATCH is 30.
Long Statement,Lucene.Net.QueryParsers.Analyzing,AnalyzingQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Analyzing\AnalyzingQueryParser.cs,GetWildcardQuery,The length of the statement  "            if (!AllowLeadingWildcard && (termStr.StartsWith("*"' StringComparison.Ordinal) || termStr.StartsWith("?"' StringComparison.Ordinal))) " is 134.
Long Statement,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The length of the statement  "                    q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc); " is 143.
Long Statement,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetRangeQuery,The length of the statement  "            DateTime d2 = DateTime.MaxValue; // We really don't care what we set this to' but we need something or the compiler will complain below " is 135.
Long Statement,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetWildcardQuery,The length of the statement  "            if (!AllowLeadingWildcard && (termStr.StartsWith("*"' StringComparison.Ordinal) || termStr.StartsWith("?"' StringComparison.Ordinal))) " is 134.
Long Statement,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,SwitchTo,The length of the statement  "				throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged."' TokenMgrError.INVALID_LEXICAL_STATE); " is 139.
Long Statement,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,GetNextToken,The length of the statement  "				throw new TokenMgrError(EOFSeen' curLexState' error_line' error_column' error_after' m_curChar' TokenMgrError.LEXICAL_ERROR); " is 125.
Long Statement,Lucene.Net.QueryParsers.Flexible.Core.Nodes,FieldQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\FieldQueryNode.cs,GetTermEscaped,The length of the statement  "            return escaper.Escape(this.m_text' CultureInfo.InvariantCulture /*Locale.getDefault()*/' EscapeQuerySyntaxType.NORMAL).ToString(); " is 130.
Long Statement,Lucene.Net.QueryParsers.Flexible.Core.Nodes,FieldQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\FieldQueryNode.cs,GetTermEscapeQuoted,The length of the statement  "            return escaper.Escape(this.m_text' CultureInfo.InvariantCulture /*Locale.getDefault()*/' EscapeQuerySyntaxType.STRING).ToString(); " is 130.
Long Statement,Lucene.Net.QueryParsers.Flexible.Messages,Message,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Messages\MessageImpl.cs,GetArguments,The length of the statement  "            return (object[])this.arguments.Clone(); // LUCENENET specific: These are obviously not meant to be written to' so cloning the result " is 133.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Builders,PrefixWildcardQueryNodeBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Builders\PrefixWildcardQueryNodeBuilder.cs,Build,The length of the statement  "            MultiTermQuery.RewriteMethod method = (MultiTermQuery.RewriteMethod)queryNode.GetTag(MultiTermRewriteMethodProcessor.TAG_ID); " is 125.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Builders,WildcardQueryNodeBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Builders\WildcardQueryNodeBuilder.cs,Build,The length of the statement  "            MultiTermQuery.RewriteMethod method = (MultiTermQuery.RewriteMethod)queryNode.GetTag(MultiTermRewriteMethodProcessor.TAG_ID); " is 125.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Config,NumberDateFormat,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\NumberDateFormat.cs,Format,The length of the statement  "            return new DateTime(EPOCH).AddMilliseconds(Convert.ToInt64(number' CultureInfo.InvariantCulture)).ToString(GetDateFormat()' this.locale); " is 137.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Config,NumberDateFormat,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\NumberDateFormat.cs,GetDateFormat,The length of the statement  "                    timePattern = locale.DateTimeFormat.LongTimePattern.Replace("z"' "").Trim() + " z"; // LUCENENET TODO: Time zone info not being added to match behavior of Java' but Java doc is unclear on what the difference is between this and LONG " is 232.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The length of the statement  "                    q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1); " is 169.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_la1_init_0,The length of the statement  "            jj_la1_0 = new uint[] { 0x300' 0x300' 0x1c00' 0x1c00' 0x1ec03c00' 0x200' 0x100' 0x18000' 0x1e0000' 0x10c00000' 0x1f8000' 0x18000' 0x200000' 0x1ec02000' 0x1ec02000' 0x12800000' 0x1000000' 0x1000000' 0x200000' 0xc000000' 0x0' 0x20000000' 0x0' 0xc0000000' 0x200000' 0x1000000' 0x200000' 0x1ec00000' }; " is 298.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_la1_init_1,The length of the statement  "            jj_la1_1 = new int[] { 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x0' 0x3' 0x0' 0x3' 0x0' 0x0' 0x0' 0x0' 0x0' }; " is 165.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,SwitchTo,The length of the statement  "                throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged."' TokenMgrError.INVALID_LEXICAL_STATE); " is 139.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,GetNextToken,The length of the statement  "                throw new TokenMgrError(EOFSeen' curLexState' error_line' error_column' error_after' m_curChar' TokenMgrError.LEXICAL_ERROR); " is 125.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,The length of the statement  "                    DateTime d2 = DateTime.MaxValue; // We really don't care what we set this to' but we need something or the compiler will complain below " is 135.
Long Statement,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,SwitchTo,The length of the statement  "                throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged."' TokenMgrError.INVALID_LEXICAL_STATE); " is 139.
Long Statement,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,GetNextToken,The length of the statement  "                throw new TokenMgrError(EOFSeen' curLexState' error_line' error_column' error_after' m_curChar' TokenMgrError.LEXICAL_ERROR); " is 125.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeFilterBuilder.cs,GetFilter,The length of the statement  "                        .ToInt32(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToInt32(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 124.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeFilterBuilder.cs,GetFilter,The length of the statement  "                        .ToInt64(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToInt64(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 124.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeFilterBuilder.cs,GetFilter,The length of the statement  "                        .ToDouble(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToDouble(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 126.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeFilterBuilder.cs,GetFilter,The length of the statement  "                        .ToSingle(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToSingle(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 126.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeQueryBuilder.cs,GetQuery,The length of the statement  "                        .ToInt32(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToInt32(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 124.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeQueryBuilder.cs,GetQuery,The length of the statement  "                        .ToInt64(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToInt64(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 124.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeQueryBuilder.cs,GetQuery,The length of the statement  "                        .ToDouble(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToDouble(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 126.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,NumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\NumericRangeQueryBuilder.cs,GetQuery,The length of the statement  "                        .ToSingle(lowerTerm' CultureInfo.InvariantCulture)' Convert.ToSingle(upperTerm' CultureInfo.InvariantCulture)' lowerInclusive' " is 126.
Long Statement,Lucene.Net.QueryParsers.Xml,DOMUtils,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\DOMUtils.cs,GetAttribute,The length of the statement  "            return (result == null) || ("".Equals(result' StringComparison.Ordinal)) ? deflt : Convert.ToSingle(result' CultureInfo.InvariantCulture); " is 138.
Long Statement,Lucene.Net.QueryParsers.Xml,DOMUtils,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\DOMUtils.cs,GetAttribute,The length of the statement  "            return (result == null) || ("".Equals(result' StringComparison.Ordinal)) ? deflt : Convert.ToInt32(result' CultureInfo.InvariantCulture); " is 137.
Long Statement,Lucene.Net.QueryParsers.Xml,DOMUtils,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\DOMUtils.cs,GetAttribute,The length of the statement  "            return (result == null) || ("".Equals(result' StringComparison.Ordinal)) ? deflt : Convert.ToBoolean(result' CultureInfo.InvariantCulture); " is 139.
Complex Conditional,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,Escape,The conditional expression  "c == '\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')' || c == ':'                    || c == '^' || c == '[' || c == ']' || c == '\"' || c == '{' || c == '}' || c == '~'                    || c == '*' || c == '?' || c == '|' || c == '&' || c == '/'"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Flexible.Core.Processors,NoChildOptimizationQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Processors\NoChildOptimizationQueryNodeProcessor.cs,PostProcessNode,The conditional expression  "node is BooleanQueryNode || node is BoostQueryNode                  || node is TokenizedPhraseQueryNode                  || node is ModifierQueryNode"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Flexible.Standard,QueryParserUtil,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\QueryParserUtil.cs,Escape,The conditional expression  "c == '\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'                      || c == ':' || c == '^' || c == '[' || c == ']' || c == '\"'                      || c == '{' || c == '}' || c == '~' || c == '*' || c == '?'                      || c == '|' || c == '&' || c == '/'"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Flexible.Standard.Config,NumericConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\NumericConfig.cs,Equals,The conditional expression  "this.precisionStep == other.precisionStep                      && this.type == other.type                      && (this.format == other.format || (this.format.Equals(other.format)))"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,AbstractRangeQueryNode<T>,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\AbstractRangeQueryNode.cs,SetBounds,The conditional expression  "(upperField != null || lowerField != null)                      && ((upperField != null && !upperField.Equals(lowerField' StringComparison.Ordinal)) || !lowerField                          .Equals(upperField' StringComparison.Ordinal))"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The conditional expression  "node is ITextableQueryNode                  && !(node is WildcardQueryNode)                  && !(node is FuzzyQueryNode)                  && !(node is RegexpQueryNode)                  && !(node.Parent is IRangeQueryNode)"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Flexible.Standard.Processors,LowercaseExpandedTermsQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\LowercaseExpandedTermsQueryNodeProcessor.cs,PostProcessNode,The conditional expression  "node is WildcardQueryNode                  || node is FuzzyQueryNode                  || (node is FieldQueryNode && node.Parent is IRangeQueryNode)                  || node is RegexpQueryNode"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,ParseSubQuery,The conditional expression  "(state.Data[state.Index] == ' '                    || state.Data[state.Index] == '\t'                    || state.Data[state.Index] == '\n'                    || state.Data[state.Index] == '\r') && (m_flags & Operator.WHITESPACE_OPERATOR) != 0"  is complex.
Complex Conditional,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,TokenFinished,The conditional expression  "(state.Data[state.Index] == '"' && (m_flags & Operator.PHRASE_OPERATOR) != 0)                  || (state.Data[state.Index] == '|' && (m_flags & Operator.OR_OPERATOR) != 0)                  || (state.Data[state.Index] == '+' && (m_flags & Operator.AND_OPERATOR) != 0)                  || (state.Data[state.Index] == '(' && (m_flags & Operator.PRECEDENCE_OPERATORS) != 0)                  || (state.Data[state.Index] == ')' && (m_flags & Operator.PRECEDENCE_OPERATORS) != 0)                  || ((state.Data[state.Index] == ' '                  || state.Data[state.Index] == '\t'                  || state.Data[state.Index] == '\n'                  || state.Data[state.Index] == '\r') && (m_flags & Operator.WHITESPACE_OPERATOR) != 0)"  is complex.
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,QueryParser,The constructor "QueryParser" calls a virtual method "Init".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,QueryParserTokenManager,The constructor "QueryParserTokenManager" calls a virtual method "SwitchTo".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,BooleanQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\BooleanQueryNode.cs,BooleanQueryNode,The constructor "BooleanQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,BoostQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\BoostQueryNode.cs,BoostQueryNode,The constructor "BoostQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,GroupQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\GroupQueryNode.cs,GroupQueryNode,The constructor "GroupQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,ModifierQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\ModifierQueryNode.cs,ModifierQueryNode,The constructor "ModifierQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,PhraseSlopQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\PhraseSlopQueryNode.cs,PhraseSlopQueryNode,The constructor "PhraseSlopQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,SlopQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\SlopQueryNode.cs,SlopQueryNode,The constructor "SlopQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Core.Nodes,TokenizedPhraseQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\TokenizedPhraseQueryNode.cs,TokenizedPhraseQueryNode,The constructor "TokenizedPhraseQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Precedence.Processors,PrecedenceQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Precedence\Processors\PrecedenceQueryNodeProcessorPipeline.cs,PrecedenceQueryNodeProcessorPipeline,The constructor "PrecedenceQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "AddFieldConfigListener".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "AddFieldConfigListener".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "AddFieldConfigListener".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Config,StandardQueryConfigHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\StandardQueryConfigHandler.cs,StandardQueryConfigHandler,The constructor "StandardQueryConfigHandler" calls a virtual method "Set".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,AbstractRangeQueryNode<T>,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\AbstractRangeQueryNode.cs,AbstractRangeQueryNode,The constructor "AbstractRangeQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,MultiPhraseQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\MultiPhraseQueryNode.cs,MultiPhraseQueryNode,The constructor "MultiPhraseQueryNode" calls a virtual method "Allocate".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,NumericRangeQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\NumericRangeQueryNode.cs,NumericRangeQueryNode,The constructor "NumericRangeQueryNode" calls a virtual method "SetBounds".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Flexible.Standard.Processors,StandardQueryNodeProcessorPipeline,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\StandardQueryNodeProcessorPipeline.cs,StandardQueryNodeProcessorPipeline,The constructor "StandardQueryNodeProcessorPipeline" calls a virtual method "Add".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Surround.Query,ComposedQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\ComposedQuery.cs,ComposedQuery,The constructor "ComposedQuery" calls a virtual method "Recompose".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Surround.Query,SrndTruncQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\SrndTruncQuery.cs,SrndTruncQuery,The constructor "SrndTruncQuery" calls a virtual method "TruncatedToPrefixAndPattern".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CoreParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CoreParser.cs,CoreParser,The constructor "CoreParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CorePlusExtensionsParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CorePlusExtensionsParser.cs,CorePlusExtensionsParser,The constructor "CorePlusExtensionsParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CorePlusExtensionsParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CorePlusExtensionsParser.cs,CorePlusExtensionsParser,The constructor "CorePlusExtensionsParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CorePlusExtensionsParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CorePlusExtensionsParser.cs,CorePlusExtensionsParser,The constructor "CorePlusExtensionsParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CorePlusExtensionsParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CorePlusExtensionsParser.cs,CorePlusExtensionsParser,The constructor "CorePlusExtensionsParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CorePlusExtensionsParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CorePlusExtensionsParser.cs,CorePlusExtensionsParser,The constructor "CorePlusExtensionsParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,CorePlusExtensionsParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\CorePlusExtensionsParser.cs,CorePlusExtensionsParser,The constructor "CorePlusExtensionsParser" calls a virtual method "AddBuilder".
Virtual Method Call from Constructor,Lucene.Net.QueryParsers.Xml,QueryTemplateManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\QueryTemplateManager.cs,QueryTemplateManager,The constructor "QueryTemplateManager" calls a virtual method "AddDefaultQueryTemplate".
Empty Catch Block,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Jj_rescan_token,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,HandleBareFuzzy,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,HandleQuotedTerm,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,HandleBoost,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Messages,NLS,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Messages\NLS.cs,InitializeMessages,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Messages,NLS,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Messages\NLS.cs,GetResourceBundleObject,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Messages,NLS,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Messages\NLS.cs,ValidateMessage,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Messages,NLS,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Messages\NLS.cs,ValidateMessage,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Parser,FastCharStream,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\FastCharStream.cs,Done,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_rescan_token,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AnalyzerQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AnalyzerQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,Jj_rescan_token,The method has an empty catch block.
Magic Number,Lucene.Net.QueryParsers.Analyzing,AnalyzingQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Analyzing\AnalyzingQueryParser.cs,GetWildcardQuery,The following statement contains a magic number: sb.Append(wildcardMatcher.Groups[2]);
Magic Number,Lucene.Net.QueryParsers.Classic,FastCharStream,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\FastCharStream.cs,Refill,The following statement contains a magic number: buffer = new char[2048];
Magic Number,Lucene.Net.QueryParsers.Classic,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])  				{  					  					case (char) (0):   						continue;  					  					case '\b':   						retval.Append("\\b");  						continue;  					  					case '\t':   						retval.Append("\\t");  						continue;  					  					case '\n':   						retval.Append("\\n");  						continue;  					  					case '\f':   						retval.Append("\\f");  						continue;  					  					case '\r':   						retval.Append("\\r");  						continue;  					  					case '\"':   						retval.Append("\\\"");  						continue;  					  					case '\'':   						retval.Append("\\\'");  						continue;  					  					case '\\':   						retval.Append("\\\\");  						continue;  					  					default:   						if ((ch = str[i]) < 0x20 || ch > 0x7e)  						{  							string s = "0000" + Convert.ToString(ch' 16);  							retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));  						}  						else  						{  							retval.Append(ch);  						}  						continue;  					  				}
Magic Number,Lucene.Net.QueryParsers.Classic,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])  				{  					  					case (char) (0):   						continue;  					  					case '\b':   						retval.Append("\\b");  						continue;  					  					case '\t':   						retval.Append("\\t");  						continue;  					  					case '\n':   						retval.Append("\\n");  						continue;  					  					case '\f':   						retval.Append("\\f");  						continue;  					  					case '\r':   						retval.Append("\\r");  						continue;  					  					case '\"':   						retval.Append("\\\"");  						continue;  					  					case '\'':   						retval.Append("\\\'");  						continue;  					  					case '\\':   						retval.Append("\\\\");  						continue;  					  					default:   						if ((ch = str[i]) < 0x20 || ch > 0x7e)  						{  							string s = "0000" + Convert.ToString(ch' 16);  							retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));  						}  						else  						{  							retval.Append(ch);  						}  						continue;  					  				}
Magic Number,Lucene.Net.QueryParsers.Classic,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])  				{  					  					case (char) (0):   						continue;  					  					case '\b':   						retval.Append("\\b");  						continue;  					  					case '\t':   						retval.Append("\\t");  						continue;  					  					case '\n':   						retval.Append("\\n");  						continue;  					  					case '\f':   						retval.Append("\\f");  						continue;  					  					case '\r':   						retval.Append("\\r");  						continue;  					  					case '\"':   						retval.Append("\\\"");  						continue;  					  					case '\'':   						retval.Append("\\\'");  						continue;  					  					case '\\':   						retval.Append("\\\\");  						continue;  					  					default:   						if ((ch = str[i]) < 0x20 || ch > 0x7e)  						{  							string s = "0000" + Convert.ToString(ch' 16);  							retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));  						}  						else  						{  							retval.Append(ch);  						}  						continue;  					  				}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Modifiers,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.NOT:                  case RegexpToken.PLUS:                  case RegexpToken.MINUS:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.PLUS:                              Jj_consume_token(RegexpToken.PLUS);                              ret = MOD_REQ;                              break;                          case RegexpToken.MINUS:                              Jj_consume_token(RegexpToken.MINUS);                              ret = MOD_NOT;                              break;                          case RegexpToken.NOT:                              Jj_consume_token(RegexpToken.NOT);                              ret = MOD_NOT;                              break;                          default:                              jj_la1[2] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      break;                  default:                      jj_la1[3] = jj_gen;                      break;              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Modifiers,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.NOT:                  case RegexpToken.PLUS:                  case RegexpToken.MINUS:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.PLUS:                              Jj_consume_token(RegexpToken.PLUS);                              ret = MOD_REQ;                              break;                          case RegexpToken.MINUS:                              Jj_consume_token(RegexpToken.MINUS);                              ret = MOD_NOT;                              break;                          case RegexpToken.NOT:                              Jj_consume_token(RegexpToken.NOT);                              ret = MOD_NOT;                              break;                          default:                              jj_la1[2] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      break;                  default:                      jj_la1[3] = jj_gen;                      break;              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Query,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.AND:                      case RegexpToken.OR:                      case RegexpToken.NOT:                      case RegexpToken.PLUS:                      case RegexpToken.MINUS:                      case RegexpToken.BAREOPER:                      case RegexpToken.LPAREN:                      case RegexpToken.STAR:                      case RegexpToken.QUOTED:                      case RegexpToken.TERM:                      case RegexpToken.PREFIXTERM:                      case RegexpToken.WILDTERM:                      case RegexpToken.REGEXPTERM:                      case RegexpToken.RANGEIN_START:                      case RegexpToken.RANGEEX_START:                      case RegexpToken.NUMBER:                          break;                      default:                          jj_la1[4] = jj_gen;                          goto label_1;                  }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.TERM:                          fieldToken = Jj_consume_token(RegexpToken.TERM);                          Jj_consume_token(RegexpToken.COLON);                          field = DiscardEscapeChar(fieldToken.Image);                          break;                      case RegexpToken.STAR:                          Jj_consume_token(RegexpToken.STAR);                          Jj_consume_token(RegexpToken.COLON);                          field = "*";                          break;                      default:                          jj_la1[5] = jj_gen;                          Jj_consume_token(-1);                          throw new ParseException();                  }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Clause,The following statement contains a magic number: Jj_2_1(2)
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.QUOTED:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                  case RegexpToken.NUMBER:                      q = Term(field);                      break;                  case RegexpToken.LPAREN:                      Jj_consume_token(RegexpToken.LPAREN);                      q = Query(field);                      Jj_consume_token(RegexpToken.RPAREN);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[6] = jj_gen;                              break;                      }                      break;                  default:                      jj_la1[7] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.QUOTED:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                  case RegexpToken.NUMBER:                      q = Term(field);                      break;                  case RegexpToken.LPAREN:                      Jj_consume_token(RegexpToken.LPAREN);                      q = Query(field);                      Jj_consume_token(RegexpToken.RPAREN);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[6] = jj_gen;                              break;                      }                      break;                  default:                      jj_la1[7] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.BAREOPER:                  case RegexpToken.STAR:                  case RegexpToken.TERM:                  case RegexpToken.PREFIXTERM:                  case RegexpToken.WILDTERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              break;                          case RegexpToken.STAR:                              term = Jj_consume_token(RegexpToken.STAR);                              wildcard = true;                              break;                          case RegexpToken.PREFIXTERM:                              term = Jj_consume_token(RegexpToken.PREFIXTERM);                              prefix = true;                              break;                          case RegexpToken.WILDTERM:                              term = Jj_consume_token(RegexpToken.WILDTERM);                              wildcard = true;                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          case RegexpToken.BAREOPER:                              term = Jj_consume_token(RegexpToken.BAREOPER);                              term.Image = term.Image.Substring(0' 1);                              break;                          default:                              jj_la1[8] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[9] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[10] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[11] = jj_gen;                              break;                      }                      q = HandleBareTokenQuery(field' term' fuzzySlop' prefix' wildcard' fuzzy' regexp);                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[12] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[13] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[14] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[16] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[17] = jj_gen;                              break;                      }                      bool startOpen = false;                      bool endOpen = false;                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' goop1.Image.Length - 2);                      }                      else if ("*".Equals(goop1.Image' StringComparison.Ordinal))                      {                          startOpen = true;                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' goop2.Image.Length - 2);                      }                      else if ("*".Equals(goop2.Image' StringComparison.Ordinal))                      {                          endOpen = true;                      }                      q = GetRangeQuery(field' startOpen ? null : DiscardEscapeChar(goop1.Image)' endOpen ? null : DiscardEscapeChar(goop2.Image)' startInc' endInc);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[19] = jj_gen;                              break;                      }                      q = HandleQuotedTerm(field' term' fuzzySlop);                      break;                  default:                      jj_la1[20] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,QueryParser,The following statement contains a magic number: i < 21
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,ReInit,The following statement contains a magic number: i < 21
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,QueryParser,The following statement contains a magic number: i < 21
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,ReInit,The following statement contains a magic number: i < 21
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Jj_consume_token,The following statement contains a magic number: ++jj_gc > 100
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Jj_add_error_token,The following statement contains a magic number: pos >= 100
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,GenerateParseException,The following statement contains a magic number: bool[] la1tokens = new bool[33];
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,GenerateParseException,The following statement contains a magic number: la1tokens[32 + j] = true;
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,GenerateParseException,The following statement contains a magic number: j < 32
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,GenerateParseException,The following statement contains a magic number: i < 21
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,GenerateParseException,The following statement contains a magic number: i < 33
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetRangeQuery,The following statement contains a magic number: d2 = cal.AddHours(d2' 23);
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetRangeQuery,The following statement contains a magic number: d2 = cal.AddMinutes(d2' 59);
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetRangeQuery,The following statement contains a magic number: d2 = cal.AddSeconds(d2' 59);
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,GetRangeQuery,The following statement contains a magic number: d2 = cal.AddMilliseconds(d2' 999);
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,HandleQuotedTerm,The following statement contains a magic number: return GetFieldQuery(qfield' DiscardEscapeChar(term.Image.Substring(1' term.Image.Length - 2))' s);
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserBase.cs,DiscardEscapeChar,The following statement contains a magic number: codePointMultiplier = Number.URShift(codePointMultiplier' 4);
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (40):   					return JjStopAtPos(0' 14);  				  				case (char) (41):   					return JjStopAtPos(0' 15);  				  				case (char) (42):   					return JjStartNfaWithStates_2(0' 17' 49);  				  				case (char) (43):                      return JjStartNfaWithStates_2(0' 11' 15);  				  				case (char) (45):                      return JjStartNfaWithStates_2(0' 12' 15);  				  				case (char) (58):   					return JjStopAtPos(0' 16);  				  				case (char) (91):   					return JjStopAtPos(0' 25);  				  				case (char) (94):   					return JjStopAtPos(0' 18);  				  				case (char) (123):   					return JjStopAtPos(0' 26);  				  				default:                      return JjMoveNfa_2(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: jjnewStateCnt = 49;
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 49:   							case 33:                                  if ((0xfbff7cf8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 23)  									kind = 23;  								JjCheckNAddTwoStates(33' 34);  								break;  							  							case 0:                                  if ((0xfbff54f8ffffd9ffL & l) != (ulong)0L)  								{  									if (kind > 23)  										kind = 23;  									JjCheckNAddTwoStates(33' 34);  								}  								else if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}                                  else if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;  								else if (m_curChar == 47)  									JjCheckNAddStates(0' 2);  								else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  if ((0x7bff50f8ffffd9ffL & l) != 0L)  								{  									if (kind > 20)  										kind = 20;                                      JjCheckNAddStates(6' 10);  								}                                  else if (m_curChar == 42)                                  {                                      if (kind > 22)                                          kind = 22;                                  }                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }  								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 4:   								if (m_curChar == 38 && kind > 8)  									kind = 8;  								break;  							  							case 5:   								if (m_curChar == 38)  									jjstateSet[jjnewStateCnt++] = 4;  								break;  							  							case 13:   								if (m_curChar == 33 && kind > 10)  									kind = 10;  								break;  							  							case 14:                                  if ((0x280200000000L & l) != 0L)                                      jjstateSet[jjnewStateCnt++] = 15;                                  break;                              case 15:                                  if ((0x100002600L & l) != 0L && kind > 13)                                      kind = 13;                                  break;                              case 16:  								if (m_curChar == 34)  									JjCheckNAddStates(3' 5);  								break;  							case 17:   								if ((0xfffffffbffffffffL & l) != (ulong) 0L)  									JjCheckNAddStates(3' 5);  								break;  							  							case 19:   								JjCheckNAddStates(3' 5);  								break;  							  							case 20:   								if (m_curChar == 34 && kind > 19)  									kind = 19;  								break;  							  							case 22:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddStates(11' 14);  								break;  							  							case 23:   								if (m_curChar == 46)  									JjCheckNAdd(24);  								break;  							  							case 24:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;                                  JjCheckNAddStates(15' 17);  								break;  							  							case 25:                                  if ((0x7bff78f8ffffd9ffL & l) == (ulong)0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 27:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(25' 26);  								break;  							  							case 28:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)  									break;  								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 30:   								if (kind > 21)  									kind = 21;  								JjCheckNAddTwoStates(28' 29);  								break;  							  							case 31:                                  if (m_curChar == 42 && kind > 22)                                      kind = 22;  								break;  							  							case 32:                                  if ((0xfbff54f8ffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 35:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(33' 34);                                  break;                              case 36:                              case 38:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 37:                                  if ((0xffff7fffffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 40:                                  if (m_curChar == 47 && kind > 24)                                      kind = 24;                                  break;                              case 41:                                  if ((0x7bff50f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddStates(6' 10);                                  break;                              case 42:                                  if ((0x7bff78f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 44:                                  if (kind > 20)                                      kind = 20;                                  JjCheckNAddTwoStates(42' 43);                                  break;                              case 45:                                  if ((0x7bff78f8ffffd9ffL & l) != 0L)                                      JjCheckNAddStates(18' 20);                                  break;                              case 47:                                  JjCheckNAddStates(18' 20);                                  break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 49 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: jjnewStateCnt = 3;
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjAddStates(31' 32);  								break;  							  							case 1:   								if (m_curChar == 46)  									JjCheckNAdd(2);  								break;  							  							case 2:   								if ((0x3ff000000000000L & l) == 0L)  									break;  								if (kind > 27)  									kind = 27;  								JjCheckNAdd(2);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjStopStringLiteralDfa_1,The following statement contains a magic number: switch (pos)  			{  				  				case 0:                      if ((active0 & 0x10000000L) != 0L)  					{  						jjmatchedKind = 32;  						return 6;  					}  					return - 1;  				  				default:   					return - 1;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjStopStringLiteralDfa_1,The following statement contains a magic number: switch (pos)  			{  				  				case 0:                      if ((active0 & 0x10000000L) != 0L)  					{  						jjmatchedKind = 32;  						return 6;  					}  					return - 1;  				  				default:   					return - 1;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char)84:                      return JjMoveStringLiteralDfa1_1(0x10000000L);  				  				case (char)93:   					return JjStopAtPos(0' 29);                    case (char)125:                      return JjStopAtPos(0' 30);    				default:   					return JjMoveNfa_1(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char)84:                      return JjMoveStringLiteralDfa1_1(0x10000000L);  				  				case (char)93:   					return JjStopAtPos(0' 29);                    case (char)125:                      return JjStopAtPos(0' 30);    				default:   					return JjMoveNfa_1(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char)84:                      return JjMoveStringLiteralDfa1_1(0x10000000L);  				  				case (char)93:   					return JjStopAtPos(0' 29);                    case (char)125:                      return JjStopAtPos(0' 30);    				default:   					return JjMoveNfa_1(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char)84:                      return JjMoveStringLiteralDfa1_1(0x10000000L);  				  				case (char)93:   					return JjStopAtPos(0' 29);                    case (char)125:                      return JjStopAtPos(0' 30);    				default:   					return JjMoveNfa_1(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char)84:                      return JjMoveStringLiteralDfa1_1(0x10000000L);  				  				case (char)93:   					return JjStopAtPos(0' 29);                    case (char)125:                      return JjStopAtPos(0' 30);    				default:   					return JjMoveNfa_1(0' 0);  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa1_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (79):                      if ((active0 & 0x10000000L) != 0L)  						return JjStartNfaWithStates_1(1' 28' 6);  					break;  				  				default:   					break;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa1_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (79):                      if ((active0 & 0x10000000L) != 0L)  						return JjStartNfaWithStates_1(1' 28' 6);  					break;  				  				default:   					break;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveStringLiteralDfa1_1,The following statement contains a magic number: switch (m_curChar)  			{  				  				case (char) (79):                      if ((active0 & 0x10000000L) != 0L)  						return JjStartNfaWithStates_1(1' 28' 6);  					break;  				  				default:   					break;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: jjnewStateCnt = 7;
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])  						{  							  							case 0:                                  if ((0xfffffffeffffffffL & l) != (ulong)0L)  								{  									if (kind > 32)  										kind = 32;  									JjCheckNAdd(6);  								}  								if ((0x100002600L & l) != 0L)  								{  									if (kind > 7)  										kind = 7;  								}  								else if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 1:   								if (m_curChar == 34)  									JjCheckNAddTwoStates(2' 4);  								break;  							  							case 2:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)  									JjCheckNAddStates(33' 35);  								break;  							  							case 3:   								if (m_curChar == 34)  									JjCheckNAddStates(33' 35);  								break;  							  							case 5:   								if (m_curChar == 34 && kind > 31)  									kind = 31;  								break;  							  							case 6:                                  if ((0xfffffffeffffffffL & l) == (ulong)0L)  									break;  								if (kind > 32)  									kind = 32;  								JjCheckNAdd(6);  								break;  							  							default:  break;  							  						}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 7 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjCanMove_0,The following statement contains a magic number: switch (hiByte)  			{  				  				case 48:   					return ((jjbitVec0[i2] & l2) != (ulong) 0L);  				  				default:   					return false;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,JjCanMove_2,The following statement contains a magic number: switch (hiByte)  			{  				  				case 0:   					return ((jjbitVec3[i2] & l2) != (ulong) 0L);  				  				case 48:   					return ((jjbitVec1[i2] & l2) != (ulong) 0L);  				  				default:   					if ((jjbitVec4[i1] & l1) != (ulong) 0L)  						return true;  					return false;  				  			}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,SwitchTo,The following statement contains a magic number: lexState >= 3 || lexState < 0
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,GetNextToken,The following statement contains a magic number: switch (curLexState)  				{  					  					case 0:   						jjmatchedKind = 0x7fffffff;  						jjmatchedPos = 0;  						curPos = JjMoveStringLiteralDfa0_0();  						break;  					  					case 1:   						jjmatchedKind = 0x7fffffff;  						jjmatchedPos = 0;  						curPos = JjMoveStringLiteralDfa0_1();  						break;  					  					case 2:   						jjmatchedKind = 0x7fffffff;  						jjmatchedPos = 0;  						curPos = JjMoveStringLiteralDfa0_2();  						break;  					}
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,GetNextToken,The following statement contains a magic number: (jjtoToken[jjmatchedKind >> 6] & ((ulong) 1L << (jjmatchedKind & 63))) != (ulong) 0L
Magic Number,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,GetNextToken,The following statement contains a magic number: (jjtoToken[jjmatchedKind >> 6] & ((ulong) 1L << (jjmatchedKind & 63))) != (ulong) 0L
Magic Number,Lucene.Net.QueryParsers.Classic,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Classic,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Classic,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.ComplexPhrase,ComplexPhraseQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\ComplexPhrase\ComplexPhraseQueryParser.cs,GetHashCode,The following statement contains a magic number: int prime = 31;
Magic Number,Lucene.Net.QueryParsers.Flexible.Messages,NLS,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Messages\NLS.cs,Load,The following statement contains a magic number: IDictionary<string' FieldInfo> fields = new Dictionary<string' FieldInfo>(len * 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Config,NumericConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\NumericConfig.cs,GetHashCode,The following statement contains a magic number: const int prime = 31;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Nodes,AbstractRangeQueryNode<T>,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Nodes\AbstractRangeQueryNode.cs,SetBounds,The following statement contains a magic number: List<IQueryNode> children = new List<IQueryNode>(2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,EscapeQuerySyntax,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\EscapeQuerySyntaxImpl.cs,DiscardEscapeChar,The following statement contains a magic number: codePointMultiplier = (int)((uint)codePointMultiplier >> 4);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,FastCharStream,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\FastCharStream.cs,Refill,The following statement contains a magic number: buffer = new char[2048];
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                      case (char)0:                          continue;                      case '\b':                          retval.Append("\\b");                          continue;                      case '\t':                          retval.Append("\\t");                          continue;                      case '\n':                          retval.Append("\\n");                          continue;                      case '\f':                          retval.Append("\\f");                          continue;                      case '\r':                          retval.Append("\\r");                          continue;                      case '\"':                          retval.Append("\\\"");                          continue;                      case '\'':                          retval.Append("\\\'");                          continue;                      case '\\':                          retval.Append("\\\\");                          continue;                      default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' s.Length - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                      case (char)0:                          continue;                      case '\b':                          retval.Append("\\b");                          continue;                      case '\t':                          retval.Append("\\t");                          continue;                      case '\n':                          retval.Append("\\n");                          continue;                      case '\f':                          retval.Append("\\f");                          continue;                      case '\r':                          retval.Append("\\r");                          continue;                      case '\"':                          retval.Append("\\\"");                          continue;                      case '\'':                          retval.Append("\\\'");                          continue;                      case '\\':                          retval.Append("\\\\");                          continue;                      default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' s.Length - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                      case (char)0:                          continue;                      case '\b':                          retval.Append("\\b");                          continue;                      case '\t':                          retval.Append("\\t");                          continue;                      case '\n':                          retval.Append("\\n");                          continue;                      case '\f':                          retval.Append("\\f");                          continue;                      case '\r':                          retval.Append("\\r");                          continue;                      case '\"':                          retval.Append("\\\"");                          continue;                      case '\'':                          retval.Append("\\\'");                          continue;                      case '\\':                          retval.Append("\\\\");                          continue;                      default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' s.Length - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Modifiers,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.NOT:                  case RegexpToken.PLUS:                  case RegexpToken.MINUS:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.PLUS:                              Jj_consume_token(RegexpToken.PLUS);                              ret = Modifier.MOD_REQ;                              break;                          case RegexpToken.MINUS:                              Jj_consume_token(RegexpToken.MINUS);                              ret = Modifier.MOD_NOT;                              break;                          case RegexpToken.NOT:                              Jj_consume_token(RegexpToken.NOT);                              ret = Modifier.MOD_NOT;                              break;                          default:                              jj_la1[2] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      break;                  default:                      jj_la1[3] = jj_gen;                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Modifiers,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.NOT:                  case RegexpToken.PLUS:                  case RegexpToken.MINUS:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.PLUS:                              Jj_consume_token(RegexpToken.PLUS);                              ret = Modifier.MOD_REQ;                              break;                          case RegexpToken.MINUS:                              Jj_consume_token(RegexpToken.MINUS);                              ret = Modifier.MOD_NOT;                              break;                          case RegexpToken.NOT:                              Jj_consume_token(RegexpToken.NOT);                              ret = Modifier.MOD_NOT;                              break;                          default:                              jj_la1[2] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      break;                  default:                      jj_la1[3] = jj_gen;                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Query,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.NOT:                      case RegexpToken.PLUS:                      case RegexpToken.MINUS:                      case RegexpToken.LPAREN:                      case RegexpToken.QUOTED:                      case RegexpToken.TERM:                      case RegexpToken.REGEXPTERM:                      case RegexpToken.RANGEIN_START:                      case RegexpToken.RANGEEX_START:                      case RegexpToken.NUMBER:                          ;                          break;                      default:                          jj_la1[4] = jj_gen;                          goto label_1_break;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,DisjQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.OR:                          ;                          break;                      default:                          jj_la1[5] = jj_gen;                          goto label_2_break;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,ConjQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.AND:                          ;                          break;                      default:                          jj_la1[6] = jj_gen;                          goto label_3_break;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.OP_COLON:                      case RegexpToken.OP_EQUAL:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_COLON:                                  Jj_consume_token(RegexpToken.OP_COLON);                                  break;                              case RegexpToken.OP_EQUAL:                                  Jj_consume_token(RegexpToken.OP_EQUAL);                                  break;                              default:                                  jj_la1[7] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          q = Term(field);                          break;                      case RegexpToken.OP_LESSTHAN:                      case RegexpToken.OP_LESSTHANEQ:                      case RegexpToken.OP_MORETHAN:                      case RegexpToken.OP_MORETHANEQ:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_LESSTHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHAN);                                  break;                              case RegexpToken.OP_LESSTHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHANEQ);                                  break;                              case RegexpToken.OP_MORETHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHAN);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHANEQ);                                  break;                              default:                                  jj_la1[8] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.TERM:                                  term = Jj_consume_token(RegexpToken.TERM);                                  break;                              case RegexpToken.QUOTED:                                  term = Jj_consume_token(RegexpToken.QUOTED);                                  break;                              case RegexpToken.NUMBER:                                  term = Jj_consume_token(RegexpToken.NUMBER);                                  break;                              default:                                  jj_la1[9] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          if (term.Kind == RegexpToken.QUOTED)                          {                              term.Image = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          }                          switch (@operator.Kind)                          {                              case RegexpToken.OP_LESSTHAN:                                  lowerInclusive = true;                                  upperInclusive = false;                                    qLower = new FieldQueryNode(field'                                                             "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                       EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                    break;                              case RegexpToken.OP_LESSTHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHAN:                                  lowerInclusive = false;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              default:                                  { if (true) throw new Exception("Unhandled case: operator=" + @operator.ToString()); }                          }                          q = new TermRangeQueryNode(qLower' qUpper' lowerInclusive' upperInclusive);                          break;                      default:                          jj_la1[10] = jj_gen;                          Jj_consume_token(-1);                          throw new ParseException();                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.OP_COLON:                      case RegexpToken.OP_EQUAL:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_COLON:                                  Jj_consume_token(RegexpToken.OP_COLON);                                  break;                              case RegexpToken.OP_EQUAL:                                  Jj_consume_token(RegexpToken.OP_EQUAL);                                  break;                              default:                                  jj_la1[7] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          q = Term(field);                          break;                      case RegexpToken.OP_LESSTHAN:                      case RegexpToken.OP_LESSTHANEQ:                      case RegexpToken.OP_MORETHAN:                      case RegexpToken.OP_MORETHANEQ:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_LESSTHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHAN);                                  break;                              case RegexpToken.OP_LESSTHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHANEQ);                                  break;                              case RegexpToken.OP_MORETHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHAN);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHANEQ);                                  break;                              default:                                  jj_la1[8] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.TERM:                                  term = Jj_consume_token(RegexpToken.TERM);                                  break;                              case RegexpToken.QUOTED:                                  term = Jj_consume_token(RegexpToken.QUOTED);                                  break;                              case RegexpToken.NUMBER:                                  term = Jj_consume_token(RegexpToken.NUMBER);                                  break;                              default:                                  jj_la1[9] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          if (term.Kind == RegexpToken.QUOTED)                          {                              term.Image = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          }                          switch (@operator.Kind)                          {                              case RegexpToken.OP_LESSTHAN:                                  lowerInclusive = true;                                  upperInclusive = false;                                    qLower = new FieldQueryNode(field'                                                             "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                       EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                    break;                              case RegexpToken.OP_LESSTHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHAN:                                  lowerInclusive = false;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              default:                                  { if (true) throw new Exception("Unhandled case: operator=" + @operator.ToString()); }                          }                          q = new TermRangeQueryNode(qLower' qUpper' lowerInclusive' upperInclusive);                          break;                      default:                          jj_la1[10] = jj_gen;                          Jj_consume_token(-1);                          throw new ParseException();                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.OP_COLON:                      case RegexpToken.OP_EQUAL:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_COLON:                                  Jj_consume_token(RegexpToken.OP_COLON);                                  break;                              case RegexpToken.OP_EQUAL:                                  Jj_consume_token(RegexpToken.OP_EQUAL);                                  break;                              default:                                  jj_la1[7] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          q = Term(field);                          break;                      case RegexpToken.OP_LESSTHAN:                      case RegexpToken.OP_LESSTHANEQ:                      case RegexpToken.OP_MORETHAN:                      case RegexpToken.OP_MORETHANEQ:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_LESSTHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHAN);                                  break;                              case RegexpToken.OP_LESSTHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHANEQ);                                  break;                              case RegexpToken.OP_MORETHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHAN);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHANEQ);                                  break;                              default:                                  jj_la1[8] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.TERM:                                  term = Jj_consume_token(RegexpToken.TERM);                                  break;                              case RegexpToken.QUOTED:                                  term = Jj_consume_token(RegexpToken.QUOTED);                                  break;                              case RegexpToken.NUMBER:                                  term = Jj_consume_token(RegexpToken.NUMBER);                                  break;                              default:                                  jj_la1[9] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          if (term.Kind == RegexpToken.QUOTED)                          {                              term.Image = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          }                          switch (@operator.Kind)                          {                              case RegexpToken.OP_LESSTHAN:                                  lowerInclusive = true;                                  upperInclusive = false;                                    qLower = new FieldQueryNode(field'                                                             "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                       EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                    break;                              case RegexpToken.OP_LESSTHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHAN:                                  lowerInclusive = false;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              default:                                  { if (true) throw new Exception("Unhandled case: operator=" + @operator.ToString()); }                          }                          q = new TermRangeQueryNode(qLower' qUpper' lowerInclusive' upperInclusive);                          break;                      default:                          jj_la1[10] = jj_gen;                          Jj_consume_token(-1);                          throw new ParseException();                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.OP_COLON:                      case RegexpToken.OP_EQUAL:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_COLON:                                  Jj_consume_token(RegexpToken.OP_COLON);                                  break;                              case RegexpToken.OP_EQUAL:                                  Jj_consume_token(RegexpToken.OP_EQUAL);                                  break;                              default:                                  jj_la1[7] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          q = Term(field);                          break;                      case RegexpToken.OP_LESSTHAN:                      case RegexpToken.OP_LESSTHANEQ:                      case RegexpToken.OP_MORETHAN:                      case RegexpToken.OP_MORETHANEQ:                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.OP_LESSTHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHAN);                                  break;                              case RegexpToken.OP_LESSTHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_LESSTHANEQ);                                  break;                              case RegexpToken.OP_MORETHAN:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHAN);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  @operator = Jj_consume_token(RegexpToken.OP_MORETHANEQ);                                  break;                              default:                                  jj_la1[8] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          field = EscapeQuerySyntax.DiscardEscapeChar(fieldToken.Image).ToString();                          switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                          {                              case RegexpToken.TERM:                                  term = Jj_consume_token(RegexpToken.TERM);                                  break;                              case RegexpToken.QUOTED:                                  term = Jj_consume_token(RegexpToken.QUOTED);                                  break;                              case RegexpToken.NUMBER:                                  term = Jj_consume_token(RegexpToken.NUMBER);                                  break;                              default:                                  jj_la1[9] = jj_gen;                                  Jj_consume_token(-1);                                  throw new ParseException();                          }                          if (term.Kind == RegexpToken.QUOTED)                          {                              term.Image = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          }                          switch (@operator.Kind)                          {                              case RegexpToken.OP_LESSTHAN:                                  lowerInclusive = true;                                  upperInclusive = false;                                    qLower = new FieldQueryNode(field'                                                             "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                       EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                    break;                              case RegexpToken.OP_LESSTHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHAN:                                  lowerInclusive = false;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              case RegexpToken.OP_MORETHANEQ:                                  lowerInclusive = true;                                  upperInclusive = true;                                    qLower = new FieldQueryNode(field'                                                           EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                                  qUpper = new FieldQueryNode(field'                                                           "*"' term.BeginColumn' term.EndColumn);                                  break;                              default:                                  { if (true) throw new Exception("Unhandled case: operator=" + @operator.ToString()); }                          }                          q = new TermRangeQueryNode(qLower' qUpper' lowerInclusive' upperInclusive);                          break;                      default:                          jj_la1[10] = jj_gen;                          Jj_consume_token(-1);                          throw new ParseException();                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Clause,The following statement contains a magic number: Jj_2_2(3)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Term,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                  case RegexpToken.REGEXPTERM:                  case RegexpToken.NUMBER:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.TERM:                              term = Jj_consume_token(RegexpToken.TERM);                              q = new FieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' term.BeginColumn' term.EndColumn);                              break;                          case RegexpToken.REGEXPTERM:                              term = Jj_consume_token(RegexpToken.REGEXPTERM);                              regexp = true;                              break;                          case RegexpToken.NUMBER:                              term = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[15] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              fuzzy = true;                              break;                          default:                              jj_la1[16] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                              {                                  case RegexpToken.FUZZY_SLOP:                                      fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                                      fuzzy = true;                                      break;                                  default:                                      jj_la1[17] = jj_gen;                                      break;                              }                              break;                          default:                              jj_la1[18] = jj_gen;                              break;                      }                      if (fuzzy)                      {                          float fms = defaultMinSimilarity;                          try                          {                              fms = Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                          }  #pragma warning disable 168                          catch (Exception ignored) { }  #pragma warning restore 168                          if (fms < 0.0f)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS)); }                          }                          else if (fms >= 1.0f && fms != (int)fms)                          {                              { if (true) throw new ParseException(new Message(QueryParserMessages.INVALID_SYNTAX_FUZZY_EDITS)); }                          }                          q = new FuzzyQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image)' fms' term.BeginColumn' term.EndColumn);                      }                      else if (regexp)                      {                          string re = term.Image.Substring(1' (term.Image.Length - 1) - 1);                          q = new RegexpQueryNode(field' re' 0' re.Length);                      }                      break;                  case RegexpToken.RANGEIN_START:                  case RegexpToken.RANGEEX_START:                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_START:                              Jj_consume_token(RegexpToken.RANGEIN_START);                              startInc = true;                              break;                          case RegexpToken.RANGEEX_START:                              Jj_consume_token(RegexpToken.RANGEEX_START);                              break;                          default:                              jj_la1[19] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop1 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop1 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[20] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_TO:                              Jj_consume_token(RegexpToken.RANGE_TO);                              break;                          default:                              jj_la1[21] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGE_GOOP:                              goop2 = Jj_consume_token(RegexpToken.RANGE_GOOP);                              break;                          case RegexpToken.RANGE_QUOTED:                              goop2 = Jj_consume_token(RegexpToken.RANGE_QUOTED);                              break;                          default:                              jj_la1[22] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.RANGEIN_END:                              Jj_consume_token(RegexpToken.RANGEIN_END);                              endInc = true;                              break;                          case RegexpToken.RANGEEX_END:                              Jj_consume_token(RegexpToken.RANGEEX_END);                              break;                          default:                              jj_la1[23] = jj_gen;                              Jj_consume_token(-1);                              throw new ParseException();                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[24] = jj_gen;                              break;                      }                      if (goop1.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop1.Image = goop1.Image.Substring(1' (goop1.Image.Length - 1) - 1);                      }                      if (goop2.Kind == RegexpToken.RANGE_QUOTED)                      {                          goop2.Image = goop2.Image.Substring(1' (goop2.Image.Length - 1) - 1);                      }                        qLower = new FieldQueryNode(field'                                               EscapeQuerySyntax.DiscardEscapeChar(goop1.Image)' goop1.BeginColumn' goop1.EndColumn);                      qUpper = new FieldQueryNode(field'                                                   EscapeQuerySyntax.DiscardEscapeChar(goop2.Image)' goop2.BeginColumn' goop2.EndColumn);                      q = new TermRangeQueryNode(qLower' qUpper' startInc ? true : false' endInc ? true : false);                      break;                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      q = new QuotedFieldQueryNode(field' EscapeQuerySyntax.DiscardEscapeChar(term.Image.Substring(1' (term.Image.Length - 1) - 1))' term.BeginColumn + 1' term.EndColumn - 1);                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.FUZZY_SLOP:                              fuzzySlop = Jj_consume_token(RegexpToken.FUZZY_SLOP);                              break;                          default:                              jj_la1[25] = jj_gen;                              break;                      }                      switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                      {                          case RegexpToken.CARAT:                              Jj_consume_token(RegexpToken.CARAT);                              boost = Jj_consume_token(RegexpToken.NUMBER);                              break;                          default:                              jj_la1[26] = jj_gen;                              break;                      }                      int phraseSlop = 0;                        if (fuzzySlop != null)                      {                          try                          {                              phraseSlop = (int)Convert.ToSingle(fuzzySlop.Image.Substring(1)' CultureInfo.InvariantCulture);                              q = new SlopQueryNode(q' phraseSlop);                          }  #pragma warning disable 168                          catch (Exception ignored)  #pragma warning restore 168                          {                              /* Should this be handled somehow? (defaults to "no PhraseSlop"' if                             * slop number is invalid)                             */                          }                      }                      break;                  default:                      jj_la1[27] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3_1,The following statement contains a magic number: Jj_scan_token(16)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3_1,The following statement contains a magic number: Jj_scan_token(15)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_8,The following statement contains a magic number: Jj_scan_token(27)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_7,The following statement contains a magic number: Jj_scan_token(28)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(20)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(19)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(18)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(17)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(28)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(22)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_5,The following statement contains a magic number: Jj_scan_token(23)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_4,The following statement contains a magic number: Jj_scan_token(16)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_3R_4,The following statement contains a magic number: Jj_scan_token(15)
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,StandardSyntaxParser,The following statement contains a magic number: i < 28
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,ReInit,The following statement contains a magic number: i < 28
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,StandardSyntaxParser,The following statement contains a magic number: i < 28
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,ReInit,The following statement contains a magic number: i < 28
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_consume_token,The following statement contains a magic number: ++jj_gc > 100
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_add_error_token,The following statement contains a magic number: pos >= 100
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,GenerateParseException,The following statement contains a magic number: bool[] la1tokens = new bool[34];
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,GenerateParseException,The following statement contains a magic number: la1tokens[32 + j] = true;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,GenerateParseException,The following statement contains a magic number: j < 32
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,GenerateParseException,The following statement contains a magic number: i < 28
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,GenerateParseException,The following statement contains a magic number: i < 34
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_rescan_token,The following statement contains a magic number: i < 2
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 40:                      return JjStopAtPos(0' 13);                  case 41:                      return JjStopAtPos(0' 14);                  case 43:                      return JjStopAtPos(0' 11);                  case 45:                      return JjStopAtPos(0' 12);                  case 58:                      return JjStopAtPos(0' 15);                  case 60:                      jjmatchedKind = 17;                      return JjMoveStringLiteralDfa1_2(0x40000L);                  case 61:                      return JjStopAtPos(0' 16);                  case 62:                      jjmatchedKind = 19;                      return JjMoveStringLiteralDfa1_2(0x100000L);                  case 91:                      return JjStopAtPos(0' 26);                  case 94:                      return JjStopAtPos(0' 21);                  case 123:                      return JjStopAtPos(0' 27);                  default:                      return JjMoveNfa_2(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa1_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 61:                      if ((active0 & 0x40000L) != 0L)                          return JjStopAtPos(1' 18);                      else if ((active0 & 0x100000L) != 0L)                          return JjStopAtPos(1' 20);                      break;                  default:                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa1_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 61:                      if ((active0 & 0x40000L) != 0L)                          return JjStopAtPos(1' 18);                      else if ((active0 & 0x100000L) != 0L)                          return JjStopAtPos(1' 20);                      break;                  default:                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa1_2,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 61:                      if ((active0 & 0x40000L) != 0L)                          return JjStopAtPos(1' 18);                      else if ((active0 & 0x100000L) != 0L)                          return JjStopAtPos(1' 20);                      break;                  default:                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: jjnewStateCnt = 33;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x8bff54f8ffffd9ffL & l) != 0L)                                  {                                      if (kind > 23)                                          kind = 23;                                      JjCheckNAddTwoStates(20' 21);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  else if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  else if (m_curChar == 33)                                  {                                      if (kind > 10)                                          kind = 10;                                  }                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 4:                                  if (m_curChar == 38 && kind > 8)                                      kind = 8;                                  break;                              case 5:                                  if (m_curChar == 38)                                      jjstateSet[jjnewStateCnt++] = 4;                                  break;                              case 13:                                  if (m_curChar == 33 && kind > 10)                                      kind = 10;                                  break;                              case 14:                                  if (m_curChar == 34)                                      JjCheckNAddStates(3' 5);                                  break;                              case 15:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(3' 5);                                  break;                              case 17:                                  JjCheckNAddStates(3' 5);                                  break;                              case 18:                                  if (m_curChar == 34 && kind > 22)                                      kind = 22;                                  break;                              case 19:                                  if ((0x8bff54f8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 20:                                  if ((0x8bff7cf8ffffd9ffL & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 22:                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAddTwoStates(20' 21);                                  break;                              case 25:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjAddStates(6' 7);                                  break;                              case 26:                                  if (m_curChar == 46)                                      JjCheckNAdd(27);                                  break;                              case 27:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 24)                                      kind = 24;                                  JjCheckNAdd(27);                                  break;                              case 28:                              case 30:                                  if (m_curChar == 47)                                      JjCheckNAddStates(0' 2);                                  break;                              case 29:                                  if ((0xffff7fffffffffffL & l) != 0L)                                      JjCheckNAddStates(0' 2);                                  break;                              case 32:                                  if (m_curChar == 47 && kind > 25)                                      kind = 25;                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_2,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 33 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: jjnewStateCnt = 3;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjAddStates(8' 9);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 28)                                      kind = 28;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjStopStringLiteralDfa_1,The following statement contains a magic number: switch (pos)              {                  case 0:                      if ((active0 & 0x20000000L) != 0L)                      {                          jjmatchedKind = 33;                          return 6;                      }                      return -1;                  default:                      return -1;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjStopStringLiteralDfa_1,The following statement contains a magic number: switch (pos)              {                  case 0:                      if ((active0 & 0x20000000L) != 0L)                      {                          jjmatchedKind = 33;                          return 6;                      }                      return -1;                  default:                      return -1;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 84:                      return JjMoveStringLiteralDfa1_1(0x20000000L);                  case 93:                      return JjStopAtPos(0' 30);                  case 125:                      return JjStopAtPos(0' 31);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 84:                      return JjMoveStringLiteralDfa1_1(0x20000000L);                  case 93:                      return JjStopAtPos(0' 30);                  case 125:                      return JjStopAtPos(0' 31);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 84:                      return JjMoveStringLiteralDfa1_1(0x20000000L);                  case 93:                      return JjStopAtPos(0' 30);                  case 125:                      return JjStopAtPos(0' 31);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 84:                      return JjMoveStringLiteralDfa1_1(0x20000000L);                  case 93:                      return JjStopAtPos(0' 30);                  case 125:                      return JjStopAtPos(0' 31);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 84:                      return JjMoveStringLiteralDfa1_1(0x20000000L);                  case 93:                      return JjStopAtPos(0' 30);                  case 125:                      return JjStopAtPos(0' 31);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa1_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 79:                      if ((active0 & 0x20000000L) != 0L)                          return JjStartNfaWithStates_1(1' 29' 6);                      break;                  default:                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa1_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 79:                      if ((active0 & 0x20000000L) != 0L)                          return JjStartNfaWithStates_1(1' 29' 6);                      break;                  default:                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveStringLiteralDfa1_1,The following statement contains a magic number: switch ((int)m_curChar)              {                  case 79:                      if ((active0 & 0x20000000L) != 0L)                          return JjStartNfaWithStates_1(1' 29' 6);                      break;                  default:                      break;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: jjnewStateCnt = 7;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0xfffffffeffffffffL & l) != 0L)                                  {                                      if (kind > 33)                                          kind = 33;                                      JjCheckNAdd(6);                                  }                                  if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 1:                                  if (m_curChar == 34)                                      JjCheckNAddTwoStates(2' 4);                                  break;                              case 2:                                  if ((0xfffffffbffffffffL & l) != 0L)                                      JjCheckNAddStates(10' 12);                                  break;                              case 3:                                  if (m_curChar == 34)                                      JjCheckNAddStates(10' 12);                                  break;                              case 5:                                  if (m_curChar == 34 && kind > 32)                                      kind = 32;                                  break;                              case 6:                                  if ((0xfffffffeffffffffL & l) == 0L)                                      break;                                  if (kind > 33)                                      kind = 33;                                  JjCheckNAdd(6);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 7 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjCanMove_0,The following statement contains a magic number: switch (hiByte)              {                  case 48:                      return ((jjbitVec0[i2] & l2) != 0L);                  default:                      return false;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,JjCanMove_2,The following statement contains a magic number: switch (hiByte)              {                  case 0:                      return ((jjbitVec3[i2] & l2) != 0L);                  case 48:                      return ((jjbitVec1[i2] & l2) != 0L);                  default:                      if ((jjbitVec4[i1] & l1) != 0L)                          return true;                      return false;              }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,SwitchTo,The following statement contains a magic number: lexState >= 3 || lexState < 0
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,GetNextToken,The following statement contains a magic number: switch (curLexState)                  {                      case 0:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_0();                          break;                      case 1:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_1();                          break;                      case 2:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_2();                          break;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,GetNextToken,The following statement contains a magic number: (jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 63 /*077*/))) != 0L
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,GetNextToken,The following statement contains a magic number: (jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 63 /*077*/))) != 0L
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                      case (char)0:                          continue;                      case '\b':                          retval.Append("\\b");                          continue;                      case '\t':                          retval.Append("\\t");                          continue;                      case '\n':                          retval.Append("\\n");                          continue;                      case '\f':                          retval.Append("\\f");                          continue;                      case '\r':                          retval.Append("\\r");                          continue;                      case '\"':                          retval.Append("\\\"");                          continue;                      case '\'':                          retval.Append("\\\'");                          continue;                      case '\\':                          retval.Append("\\\\");                          continue;                      default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Number.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' /*s.Length - (s.Length - 4)*/ 4));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                      case (char)0:                          continue;                      case '\b':                          retval.Append("\\b");                          continue;                      case '\t':                          retval.Append("\\t");                          continue;                      case '\n':                          retval.Append("\\n");                          continue;                      case '\f':                          retval.Append("\\f");                          continue;                      case '\r':                          retval.Append("\\r");                          continue;                      case '\"':                          retval.Append("\\\"");                          continue;                      case '\'':                          retval.Append("\\\'");                          continue;                      case '\\':                          retval.Append("\\\\");                          continue;                      default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Number.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' /*s.Length - (s.Length - 4)*/ 4));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                      case (char)0:                          continue;                      case '\b':                          retval.Append("\\b");                          continue;                      case '\t':                          retval.Append("\\t");                          continue;                      case '\n':                          retval.Append("\\n");                          continue;                      case '\f':                          retval.Append("\\f");                          continue;                      case '\r':                          retval.Append("\\r");                          continue;                      case '\"':                          retval.Append("\\\"");                          continue;                      case '\'':                          retval.Append("\\\'");                          continue;                      case '\\':                          retval.Append("\\\\");                          continue;                      default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Number.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' /*s.Length - (s.Length - 4)*/ 4));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                  }
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,The following statement contains a magic number: d2 = cal.AddHours(d2' 23);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,The following statement contains a magic number: d2 = cal.AddMinutes(d2' 59);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,The following statement contains a magic number: d2 = cal.AddSeconds(d2' 59);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard.Processors,TermRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\TermRangeQueryNodeProcessor.cs,PostProcessNode,The following statement contains a magic number: d2 = cal.AddMilliseconds(d2' 999);
Magic Number,Lucene.Net.QueryParsers.Simple,SimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Simple\SimpleQueryParser.cs,BuildQueryTree,The following statement contains a magic number: state.Not % 2 == 1
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,FastCharStream,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\FastCharStream.cs,Refill,The following statement contains a magic number: buffer = new char[2048];
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + System.Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + System.Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,ParseException,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\ParseException.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + System.Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,OptionalFields,The following statement contains a magic number: Jj_2_1(2)
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,NotQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.NOT:                          ;                          break;                      default:                          jj_la1[2] = jj_gen;                          goto label_4;                  }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,NQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.N:                          ;                          break;                      default:                          jj_la1[3] = jj_gen;                          goto label_5;                  }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,WQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.W:                          ;                          break;                      default:                          jj_la1[4] = jj_gen;                          goto label_6;                  }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,PrimaryQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.LPAREN:                      Jj_consume_token(RegexpToken.LPAREN);                      q = FieldsQuery();                      Jj_consume_token(RegexpToken.RPAREN);                      break;                  case RegexpToken.OR:                  case RegexpToken.AND:                  case RegexpToken.W:                  case RegexpToken.N:                      q = PrefixOperatorQuery();                      break;                  case RegexpToken.TRUNCQUOTED:                  case RegexpToken.QUOTED:                  case RegexpToken.SUFFIXTERM:                  case RegexpToken.TRUNCTERM:                  case RegexpToken.TERM:                      q = SimpleTerm();                      break;                  default:                      jj_la1[5] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,PrefixOperatorQuery,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.OR:                      oprt = Jj_consume_token(RegexpToken.OR);                      /* prefix OR */                      queries = FieldsQueryList();                      { if (true) return GetOrQuery(queries' false /* not infix */' oprt); }                      //break; // unreachable                  case RegexpToken.AND:                      oprt = Jj_consume_token(RegexpToken.AND);                      /* prefix AND */                      queries = FieldsQueryList();                      { if (true) return GetAndQuery(queries' false /* not infix */' oprt); }                      //break; // unreachable                  case RegexpToken.N:                      oprt = Jj_consume_token(RegexpToken.N);                      /* prefix N */                      queries = FieldsQueryList();                      { if (true) return GetDistanceQuery(queries' false /* not infix */' oprt' false /* not ordered */); }                      //break; // unreachable                  case RegexpToken.W:                      oprt = Jj_consume_token(RegexpToken.W);                      /* prefix W */                      queries = FieldsQueryList();                      { if (true) return GetDistanceQuery(queries' false  /* not infix */' oprt' true /* ordered */); }                      //break; // unreachable                  default:                      jj_la1[6] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,FieldsQueryList,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.COMMA:                          ;                          break;                      default:                          jj_la1[7] = jj_gen;                          goto label_7;                  }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,SimpleTerm,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                      term = Jj_consume_token(RegexpToken.TERM);                      { if (true) return GetTermQuery(term.Image' false /* not quoted */); }                      //break; // unreachable                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      { if (true) return GetTermQuery(term.Image.Substring(1' (term.Image.Length - 1) - 1)' true /* quoted */); }                      //break; // unreachable                  case RegexpToken.SUFFIXTERM:                      term = Jj_consume_token(RegexpToken.SUFFIXTERM);                      /* ending in * */                      if (!AllowedSuffix(term.Image))                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetPrefixQuery(term.Image.Substring(0' term.Image.Length - 1)' false /* not quoted */); }                      //break; // unreachable                  case RegexpToken.TRUNCTERM:                      term = Jj_consume_token(RegexpToken.TRUNCTERM);                      /* with at least one * or ? */                      if (!AllowedTruncation(term.Image))                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetTruncQuery(term.Image); }                      //break; // unreachable                  case RegexpToken.TRUNCQUOTED:                      term = Jj_consume_token(RegexpToken.TRUNCQUOTED);                      /* eg. "9b-b'm"* */                      if ((term.Image.Length - 3) < minimumPrefixLength)                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetPrefixQuery(term.Image.Substring(1' (term.Image.Length - 2) - 1)' true /* quoted */); }                      //break; // unreachable                  default:                      jj_la1[8] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,SimpleTerm,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                      term = Jj_consume_token(RegexpToken.TERM);                      { if (true) return GetTermQuery(term.Image' false /* not quoted */); }                      //break; // unreachable                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      { if (true) return GetTermQuery(term.Image.Substring(1' (term.Image.Length - 1) - 1)' true /* quoted */); }                      //break; // unreachable                  case RegexpToken.SUFFIXTERM:                      term = Jj_consume_token(RegexpToken.SUFFIXTERM);                      /* ending in * */                      if (!AllowedSuffix(term.Image))                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetPrefixQuery(term.Image.Substring(0' term.Image.Length - 1)' false /* not quoted */); }                      //break; // unreachable                  case RegexpToken.TRUNCTERM:                      term = Jj_consume_token(RegexpToken.TRUNCTERM);                      /* with at least one * or ? */                      if (!AllowedTruncation(term.Image))                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetTruncQuery(term.Image); }                      //break; // unreachable                  case RegexpToken.TRUNCQUOTED:                      term = Jj_consume_token(RegexpToken.TRUNCQUOTED);                      /* eg. "9b-b'm"* */                      if ((term.Image.Length - 3) < minimumPrefixLength)                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetPrefixQuery(term.Image.Substring(1' (term.Image.Length - 2) - 1)' true /* quoted */); }                      //break; // unreachable                  default:                      jj_la1[8] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,SimpleTerm,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)              {                  case RegexpToken.TERM:                      term = Jj_consume_token(RegexpToken.TERM);                      { if (true) return GetTermQuery(term.Image' false /* not quoted */); }                      //break; // unreachable                  case RegexpToken.QUOTED:                      term = Jj_consume_token(RegexpToken.QUOTED);                      { if (true) return GetTermQuery(term.Image.Substring(1' (term.Image.Length - 1) - 1)' true /* quoted */); }                      //break; // unreachable                  case RegexpToken.SUFFIXTERM:                      term = Jj_consume_token(RegexpToken.SUFFIXTERM);                      /* ending in * */                      if (!AllowedSuffix(term.Image))                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetPrefixQuery(term.Image.Substring(0' term.Image.Length - 1)' false /* not quoted */); }                      //break; // unreachable                  case RegexpToken.TRUNCTERM:                      term = Jj_consume_token(RegexpToken.TRUNCTERM);                      /* with at least one * or ? */                      if (!AllowedTruncation(term.Image))                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetTruncQuery(term.Image); }                      //break; // unreachable                  case RegexpToken.TRUNCQUOTED:                      term = Jj_consume_token(RegexpToken.TRUNCQUOTED);                      /* eg. "9b-b'm"* */                      if ((term.Image.Length - 3) < minimumPrefixLength)                      {                          { if (true) throw new ParseException(truncationErrorMessage + term.Image); }                      }                      { if (true) return GetPrefixQuery(term.Image.Substring(1' (term.Image.Length - 2) - 1)' true /* quoted */); }                      //break; // unreachable                  default:                      jj_la1[8] = jj_gen;                      Jj_consume_token(-1);                      throw new ParseException();              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,OptionalWeights,The following statement contains a magic number: switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk)                  {                      case RegexpToken.CARAT:                          ;                          break;                      default:                          jj_la1[9] = jj_gen;                          goto label_8;                  }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,QueryParser,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,ReInit,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,QueryParser,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,ReInit,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,Jj_consume_token,The following statement contains a magic number: ++jj_gc > 100
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,Jj_add_error_token,The following statement contains a magic number: pos >= 100
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,GenerateParseException,The following statement contains a magic number: bool[] la1tokens = new bool[24];
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,GenerateParseException,The following statement contains a magic number: j < 32
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,GenerateParseException,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,GenerateParseException,The following statement contains a magic number: i < 24
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,jjMoveStringLiteralDfa0_1,The following statement contains a magic number: switch (m_curChar)              {                  case (char)40:                      return JjStopAtPos(0' 13);                  case (char)41:                      return JjStopAtPos(0' 14);                  case (char)44:                      return JjStopAtPos(0' 15);                  case (char)58:                      return JjStopAtPos(0' 16);                  case (char)94:                      return JjStopAtPos(0' 17);                  default:                      return JjMoveNfa_1(0' 0);              }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: jjnewStateCnt = 38;
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                  {                                      if (kind > 22)                                          kind = 22;                                      JjCheckNAddStates(0' 4);                                  }                                  else if ((0x100002600L & l) != 0L)                                  {                                      if (kind > 7)                                          kind = 7;                                  }                                  else if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  else if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 19:                                  if ((0x3fc000000000000L & l) != 0L)                                      JjCheckNAddStates(8' 11);                                  break;                              case 20:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(17);                                  break;                              case 21:                                  if ((0x3ff000000000000L & l) != 0L)                                      JjCheckNAdd(18);                                  break;                              case 22:                                  if (m_curChar == 49)                                      JjCheckNAddTwoStates(20' 21);                                  break;                              case 23:                                  if (m_curChar == 34)                                      JjCheckNAddStates(5' 7);                                  break;                              case 24:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddTwoStates(24' 25);                                  break;                              case 25:                                  if (m_curChar == 34)                                      jjstateSet[jjnewStateCnt++] = 26;                                  break;                              case 26:                                  if (m_curChar == 42 && kind > 18)                                      kind = 18;                                  break;                              case 27:                                  if ((0xfffffffbffffffffL & l) != (ulong)0L)                                      JjCheckNAddStates(12' 14);                                  break;                              case 29:                                  if (m_curChar == 34)                                      JjCheckNAddStates(12' 14);                                  break;                              case 30:                                  if (m_curChar == 34 && kind > 19)                                      kind = 19;                                  break;                              case 31:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAddStates(0' 4);                                  break;                              case 32:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(32' 33);                                  break;                              case 33:                                  if (m_curChar == 42 && kind > 20)                                      kind = 20;                                  break;                              case 34:                                  if ((0x7bffe8faffffd9ffL & l) != 0L)                                      JjCheckNAddTwoStates(34' 35);                                  break;                              case 35:                                  if ((0x8000040000000000L & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAddTwoStates(35' 36);                                  break;                              case 36:                                  if ((0xfbffecfaffffd9ffL & l) == (ulong)0L)                                      break;                                  if (kind > 21)                                      kind = 21;                                  JjCheckNAdd(36);                                  break;                              case 37:                                  if ((0x7bffe8faffffd9ffL & l) == 0L)                                      break;                                  if (kind > 22)                                      kind = 22;                                  JjCheckNAdd(37);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_1,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 38 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: jjnewStateCnt = 3;
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: switch (jjstateSet[--i])                          {                              case 0:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjAddStates(17' 18);                                  break;                              case 1:                                  if (m_curChar == 46)                                      JjCheckNAdd(2);                                  break;                              case 2:                                  if ((0x3ff000000000000L & l) == 0L)                                      break;                                  if (kind > 23)                                      kind = 23;                                  JjCheckNAdd(2);                                  break;                              default: break;                          }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: m_curChar < 64
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,JjMoveNfa_0,The following statement contains a magic number: (i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt))
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,SwitchTo,The following statement contains a magic number: lexState >= 2 || lexState < 0
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,GetNextToken,The following statement contains a magic number: (jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 63 /*077*/))) != 0L
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,GetNextToken,The following statement contains a magic number: (jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 63 /*077*/))) != 0L
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Surround.Parser,TokenMgrError,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\TokenMgrError.cs,AddEscapes,The following statement contains a magic number: switch (str[i])                  {                        case (char)(0):                          continue;                        case '\b':                          retval.Append("\\b");                          continue;                        case '\t':                          retval.Append("\\t");                          continue;                        case '\n':                          retval.Append("\\n");                          continue;                        case '\f':                          retval.Append("\\f");                          continue;                        case '\r':                          retval.Append("\\r");                          continue;                        case '\"':                          retval.Append("\\\"");                          continue;                        case '\'':                          retval.Append("\\\'");                          continue;                        case '\\':                          retval.Append("\\\\");                          continue;                        default:                          if ((ch = str[i]) < 0x20 || ch > 0x7e)                          {                              string s = "0000" + Convert.ToString(ch' 16);                              retval.Append("\\u" + s.Substring(s.Length - 4' (s.Length) - (s.Length - 4)));                          }                          else                          {                              retval.Append(ch);                          }                          continue;                    }
Magic Number,Lucene.Net.QueryParsers.Surround.Query,BasicQueryFactory,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\BasicQueryFactory.cs,GetHashCode,The following statement contains a magic number: return GetType().GetHashCode() ^ (AtMax ? 7 : 31 * 32);
Magic Number,Lucene.Net.QueryParsers.Surround.Query,BasicQueryFactory,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\BasicQueryFactory.cs,GetHashCode,The following statement contains a magic number: return GetType().GetHashCode() ^ (AtMax ? 7 : 31 * 32);
Magic Number,Lucene.Net.QueryParsers.Surround.Query,BasicQueryFactory,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\BasicQueryFactory.cs,GetHashCode,The following statement contains a magic number: return GetType().GetHashCode() ^ (AtMax ? 7 : 31 * 32);
Magic Number,Lucene.Net.QueryParsers.Surround.Query,ComposedQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Query\ComposedQuery.cs,Recompose,The following statement contains a magic number: queries.Count < 2
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,LikeThisQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\Builders\LikeThisQueryBuilder.cs,GetQuery,The following statement contains a magic number: mlt.PercentTermsToMatch = DOMUtils.GetAttribute(e' "percentTermsToMatch"' DEFAULT_PERCENT_TERMS_TO_MATCH) / 100;
Missing Default,Lucene.Net.QueryParsers.Classic,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParser.cs,Jj_rescan_token,The following switch statement is missing a default case: switch (i)                              {                                  case 0:                                      Jj_3_1();                                      break;                              }
Missing Default,Lucene.Net.QueryParsers.Classic,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Classic\QueryParserTokenManager.cs,GetNextToken,The following switch statement is missing a default case: switch (curLexState)  				{  					  					case 0:   						jjmatchedKind = 0x7fffffff;  						jjmatchedPos = 0;  						curPos = JjMoveStringLiteralDfa0_0();  						break;  					  					case 1:   						jjmatchedKind = 0x7fffffff;  						jjmatchedPos = 0;  						curPos = JjMoveStringLiteralDfa0_1();  						break;  					  					case 2:   						jjmatchedKind = 0x7fffffff;  						jjmatchedPos = 0;  						curPos = JjMoveStringLiteralDfa0_2();  						break;  					}
Missing Default,Lucene.Net.QueryParsers.Flexible.Core.Nodes,ModifierExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\ModifierQueryNode.cs,ToDigitString,The following switch statement is missing a default case: switch (modifier)              {                  case Modifier.MOD_NONE:                      return "";                  case Modifier.MOD_NOT:                      return "-";                  case Modifier.MOD_REQ:                      return "+";              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Core.Nodes,ModifierExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\ModifierQueryNode.cs,ToLargeString,The following switch statement is missing a default case: switch (modifier)              {                  case Modifier.MOD_NONE:                      return "";                  case Modifier.MOD_NOT:                      return "NOT ";                  case Modifier.MOD_REQ:                      return "+";              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Core.Nodes,ProximityQueryNode_TypeExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Nodes\ProximityQueryNode.cs,ToQueryString,The following switch statement is missing a default case: switch (type)              {                  case ProximityQueryNode.Type.NUMBER:                      return "WITHIN";                  case ProximityQueryNode.Type.PARAGRAPH:                      return "WITHIN PARAGRAPH";                  case ProximityQueryNode.Type.SENTENCE:                      return "WITHIN SENTENCE";              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Core.Util,QueryNodeOperation,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Core\Util\QueryNodeOperation.cs,LogicalAnd,The following switch statement is missing a default case: switch (op)              {                  case ANDOperation.NONE:                      List<IQueryNode> children = new List<IQueryNode>();                      children.Add(q1.CloneTree());                      children.Add(q2.CloneTree());                      result = new AndQueryNode(children);                      return result;                  case ANDOperation.Q1:                      result = q1.CloneTree();                      result.Add(q2.CloneTree());                      return result;                  case ANDOperation.Q2:                      result = q2.CloneTree();                      result.Add(q1.CloneTree());                      return result;                  case ANDOperation.BOTH:                      result = q1.CloneTree();                      result.Add(q2.CloneTree().GetChildren());                      return result;              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Builders,BooleanQueryNodeBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Builders\BooleanQueryNodeBuilder.cs,GetModifierValue,The following switch statement is missing a default case: switch (mNode.Modifier)                  {                      case Modifier.MOD_REQ:                          return Occur.MUST;                        case Modifier.MOD_NOT:                          return Occur.MUST_NOT;                        case Modifier.MOD_NONE:                          return Occur.SHOULD;                  }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Config,NumberDateFormat,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\NumberDateFormat.cs,GetDateFormat,The following switch statement is missing a default case: switch (dateStyle)              {                  case DateFormat.SHORT:                      datePattern = locale.DateTimeFormat.ShortDatePattern;                      break;                  case DateFormat.MEDIUM:                      datePattern = locale.DateTimeFormat.LongDatePattern                          .Replace("dddd'"' "").Replace("' dddd"' "") // Remove the day of the week                          .Replace("MMMM"' "MMM"); // Replace month with abbreviated month                      break;                  case DateFormat.LONG:                      datePattern = locale.DateTimeFormat.LongDatePattern                          .Replace("dddd'"' "").Replace("' dddd"' ""); // Remove the day of the week                      break;                  case DateFormat.FULL:                      datePattern = locale.DateTimeFormat.LongDatePattern;                      break;              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Config,NumberDateFormat,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Config\NumberDateFormat.cs,GetDateFormat,The following switch statement is missing a default case: switch (timeStyle)              {                  case DateFormat.SHORT:                      timePattern = locale.DateTimeFormat.ShortTimePattern;                      break;                  case DateFormat.MEDIUM:                      timePattern = locale.DateTimeFormat.LongTimePattern;                      break;                  case DateFormat.LONG:                      timePattern = locale.DateTimeFormat.LongTimePattern.Replace("z"' "").Trim() + " z";                      break;                  case DateFormat.FULL:                      timePattern = locale.DateTimeFormat.LongTimePattern.Replace("z"' "").Trim() + " z"; // LUCENENET TODO: Time zone info not being added to match behavior of Java' but Java doc is unclear on what the difference is between this and LONG                      break;              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParser.cs,Jj_rescan_token,The following switch statement is missing a default case: switch (i)                              {                                  case 0: Jj_3_1(); break;                                  case 1: Jj_3_2(); break;                              }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Parser,StandardSyntaxParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Parser\StandardSyntaxParserTokenManager.cs,GetNextToken,The following switch statement is missing a default case: switch (curLexState)                  {                      case 0:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_0();                          break;                      case 1:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_1();                          break;                      case 2:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_2();                          break;                  }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Processors,AllowLeadingWildcardProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\AllowLeadingWildcardProcessor.cs,PostProcessNode,The following switch statement is missing a default case: switch (wildcardNode.Text[0])                      {                          case '*':                          case '?':                              throw new QueryNodeException(new Message(                                  QueryParserMessages.LEADING_WILDCARD_NOT_ALLOWED' node                                      .ToQueryString(new EscapeQuerySyntax())));                      }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Processors,NumericQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\NumericQueryNodeProcessor.cs,PostProcessNode,The following switch statement is missing a default case: switch (numericConfig.Type)                                  {                                      case NumericType.INT64:                                          number = Convert.ToInt64(number); // LUCENENET TODO: Find a way to pass culture                                          break;                                      case NumericType.INT32:                                          number = Convert.ToInt32(number); // LUCENENET TODO: Find a way to pass culture                                          break;                                      case NumericType.DOUBLE:                                          number = Convert.ToDouble(number); // LUCENENET TODO: Find a way to pass culture                                          break;                                      case NumericType.SINGLE:                                          number = Convert.ToSingle(number); // LUCENENET TODO: Find a way to pass culture                                          break;                                  }
Missing Default,Lucene.Net.QueryParsers.Flexible.Standard.Processors,NumericRangeQueryNodeProcessor,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Flexible\Standard\Processors\NumericRangeQueryNodeProcessor.cs,PostProcessNode,The following switch statement is missing a default case: switch (numericConfig.Type)                              {                                  case NumericType.INT64:                                      if (upperNumber != null) upperNumber = Convert.ToInt64(upperNumber); // LUCENENET TODO: Find a way to pass culture                                      if (lowerNumber != null) lowerNumber = Convert.ToInt64(lowerNumber);                                      break;                                  case NumericType.INT32:                                      if (upperNumber != null) upperNumber = Convert.ToInt32(upperNumber); // LUCENENET TODO: Find a way to pass culture                                      if (lowerNumber != null) lowerNumber = Convert.ToInt32(lowerNumber);                                      break;                                  case NumericType.DOUBLE:                                      if (upperNumber != null) upperNumber = Convert.ToDouble(upperNumber); // LUCENENET TODO: Find a way to pass culture                                      if (lowerNumber != null) lowerNumber = Convert.ToDouble(lowerNumber);                                      break;                                  case NumericType.SINGLE:                                      if (upperNumber != null) upperNumber = Convert.ToSingle(upperNumber); // LUCENENET TODO: Find a way to pass culture                                      if (lowerNumber != null) lowerNumber = Convert.ToSingle(lowerNumber);                                      break;                              }
Missing Default,Lucene.Net.QueryParsers.Surround.Parser,QueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParser.cs,Jj_rescan_token,The following switch statement is missing a default case: switch (i)                              {                                  case 0: Jj_3_1(); break;                              }
Missing Default,Lucene.Net.QueryParsers.Surround.Parser,QueryParserTokenManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Surround\Parser\QueryParserTokenManager.cs,GetNextToken,The following switch statement is missing a default case: switch (curLexState)                  {                      case 0:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = JjMoveStringLiteralDfa0_0();                          break;                      case 1:                          jjmatchedKind = 0x7fffffff;                          jjmatchedPos = 0;                          curPos = jjMoveStringLiteralDfa0_1();                          break;                  }
Missing Default,Lucene.Net.QueryParsers.Xml,DOMUtils,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.QueryParser\Xml\DOMUtils.cs,GetTextBuffer,The following switch statement is missing a default case: switch (kid.NodeType)                  {                      case XmlNodeType.Text:                          {                              sb.Append(kid.Value);                              break;                          }                      case XmlNodeType.Element:                          {                              GetTextBuffer(kid' sb);                              break;                          }                      case XmlNodeType.EntityReference:                          {                              GetTextBuffer(kid' sb);                              break;                          }                  }
