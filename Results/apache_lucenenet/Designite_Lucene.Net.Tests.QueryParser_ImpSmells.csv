Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The method has 147 lines of code.
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,Cyclomatic complexity of the method is 13
Complex Method,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,GetNumberType,Cyclomatic complexity of the method is 8
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,assertDateRangeQueryEquals,The method has 6 parameters. Parameters: qp' field' startDate' endDate' endDateInclusive' resolution
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,assertRangeQuery,The method has 5 parameters. Parameters: lowerType' upperType' lowerInclusive' upperInclusive' expectedDocCount
Long Parameter List,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,AssertDateRangeQueryEquals,The method has 6 parameters. Parameters: qp' field' startDate' endDate' endDateInclusive' resolution
Long Parameter List,Lucene.Net.QueryParsers.Surround.Query,BooleanQueryTst,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\BooleanQueryTst.cs,BooleanQueryTst,The method has 5 parameters. Parameters: queryText' expectedDocNrs' dBase' fieldName' qf
Long Parameter List,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,AssertDateRangeQueryEquals,The method has 6 parameters. Parameters: cqpC' field' startDate' endDate' endDateInclusive' resolution
Long Identifier,Lucene.Net.QueryParsers.Flexible.Messages,MessagesTestBundle,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Messages\MessagesTestBundle.cs,,The length of the parameter Q0004E_INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION is 47.
Long Statement,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStaticMethod2Old,The length of the statement  "            Query q = MultiFieldQueryParser.Parse(TEST_VERSION_CURRENT' "one"' fields' flags' new MockAnalyzer(Random));//' fields' flags' new MockAnalyzer(random)); " is 153.
Long Statement,Lucene.Net.QueryParsers.Classic,TestFuzzySlopeExtendabilityQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,HandleBareFuzzy,The length of the statement  "                    return GetRangeQuery(qfield' (value - fms / 2.0f).ToString(CultureInfo.InvariantCulture)' (value + fms / 2.0f).ToString(CultureInfo.InvariantCulture)' true' true); " is 163.
Long Statement,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParserSimpleSample,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParserSimpleSample.cs,TestBasicDemo,The length of the statement  "            SpanQuery spanquery = (SpanQuery)spansQueryTreeBuilder.Build(queryTree); // LUCENENET TODO: Find a way to remove the cast " is 121.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestRange,The length of the statement  "            assertEquals(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT' ((TermRangeQuery)GetQuery("[ a TO z]"' null)).MultiTermRewriteMethod); " is 135.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestRange,The length of the statement  "            assertEquals(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE' ((TermRangeQuery)qp.Parse("[ a TO z]"' "field")).MultiTermRewriteMethod); " is 132.
Long Statement,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestRegexps,The length of the statement  "            assertEquals(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE' ((RegexpQuery)qp.Parse("/[A-Z][123]/^0.5"' df)).MultiTermRewriteMethod); " is 131.
Long Statement,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestRange,The length of the statement  "            assertEquals(MultiTermQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT' ((TermRangeQuery)GetQuery("[ a TO z]")).MultiTermRewriteMethod); " is 129.
Long Statement,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestRange,The length of the statement  "            assertEquals(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE' ((TermRangeQuery)GetQuery("[ a TO z]"' qp)).MultiTermRewriteMethod); " is 127.
Long Statement,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,GetDate,The length of the statement  "            DateTime d = DateTime.ParseExact(s' CultureInfo.CurrentCulture.DateTimeFormat.ShortDatePattern' CultureInfo.CurrentCulture); " is 124.
Long Statement,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestRegexps,The length of the statement  "            assertEquals(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE' ((RegexpQuery)GetQuery("/[A-Z][123]/^0.5"' qp)).MultiTermRewriteMethod); " is 131.
Long Statement,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPositionIncrement,The length of the statement  "            ICommonQueryParserConfiguration qp = GetParserConfig(new MockAnalyzer(Random' MockTokenizer.SIMPLE' true' MockTokenFilter.ENGLISH_STOPSET)); " is 140.
Long Statement,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPhraseQueryPositionIncrements,The length of the statement  "            ICommonQueryParserConfiguration qp = GetParserConfig(new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false' stopStopList)); " is 126.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterLong,The length of the statement  "            String xml2 = "<NumericRangeFilter fieldName='AGE' type='LoNg' lowerTerm='-2321' upperTerm='60000000' includeUpper='false'/>"; " is 126.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterDouble,The length of the statement  "            String xml2 = "<NumericRangeFilter fieldName='AGE' type='doubLe' lowerTerm='-23.21' upperTerm='60000.00023' includeUpper='false'/>"; " is 132.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterFloat,The length of the statement  "            String xml2 = "<NumericRangeFilter fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23' includeUpper='false' precisionStep='2' />"; " is 150.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterLong,The length of the statement  "            String xml2 = "<NumericRangeQuery fieldName='AGE' type='LoNg' lowerTerm='-2321' upperTerm='60000000' includeUpper='false'/>"; " is 125.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterDouble,The length of the statement  "            String xml2 = "<NumericRangeQuery fieldName='AGE' type='doubLe' lowerTerm='-23.21' upperTerm='60000.00023' includeUpper='false'/>"; " is 131.
Long Statement,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterFloat,The length of the statement  "            String xml2 = "<NumericRangeQuery fieldName='AGE' type='FLOAT' lowerTerm='-2.321432' upperTerm='32432.23' includeUpper='false' precisionStep='2' />"; " is 149.
Long Statement,Lucene.Net.QueryParsers.Xml,TestQueryTemplateManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestQueryTemplateManager.cs,TestFormTransforms,The length of the statement  "            //if (Constants.JAVA_VENDOR.StartsWith("Sun"' StringComparison.Ordinal) && Constants.JAVA_VERSION.StartsWith("1.5"' StringComparison.Ordinal)) { " is 144.
Long Statement,Lucene.Net.QueryParsers.Xml,TestQueryTemplateManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestQueryTemplateManager.cs,TestFormTransforms,The length of the statement  "            //  assumeFalse("Sun JRE 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963 under Turkish locale"' defLang.equals("tr"' StringComparison.Ordinal) || defLang.equals("az"' StringComparison.Ordinal)); " is 222.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStaticMethod1,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStaticMethod2,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStaticMethod2Old,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStaticMethod3,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStaticMethod3Old,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestProtectedCtors,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestProtectedCtors,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCustomQueryParserWildcard,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCustomQueryParserFuzzy,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Classic,TestFuzzySlopeExtendabilityQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,HandleBareFuzzy,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Ext,TestExtendableQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Ext\TestExtendableQueryParser.cs,TestUnescapedExtDelimiter,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Ext,TestExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Ext\TestExtensions.cs,TestEscapeExtension,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Messages,TestNLS,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Messages\TestNLS.cs,TestNLSLoading_xx_XX,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestWildcard,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestException,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestBooleanQuery,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Spans,TestSpanQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Spans\TestSpanQueryParser.cs,TestQueryValidator,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestStaticMethod1,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestStaticMethod2,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestStaticMethod2Old,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestStaticMethod3,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestStaticMethod3Old,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestWildcard,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestWildcard,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestCustomQueryParserWildcard,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestCustomQueryParserFuzzy,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBooleanQuery,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestStandardQP,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestStandardQP.cs,TestCollatedRange,The method has an empty catch block.
Empty Catch Block,Lucene.Net.QueryParsers.Flexible.Standard,TestStandardQP,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestStandardQP.cs,TestAutoGeneratePhraseQueriesOn,The method has an empty catch block.
Magic Number,Lucene.Net.QueryParsers.Analyzing,TestAnalyzingQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Analyzing\TestAnalyzingQueryParser.cs,IsAHit,The following statement contains a magic number: hits = @is.Search(q' 10).TotalHits;
Magic Number,Lucene.Net.QueryParsers.Classic,TestMultiAnalyzer_,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiAnalyzer.cs,TestMultiAnalyzer,The following statement contains a magic number: qp.PhraseSlop=(99);
Magic Number,Lucene.Net.QueryParsers.Classic,TestMultiAnalyzer_,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiAnalyzer.cs,TestMultiAnalyzerWithSubclassOfQueryParser,The following statement contains a magic number: qp.PhraseSlop = (99);
Magic Number,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestBoostsSimple,The following statement contains a magic number: boosts["b"] = (float)5;
Magic Number,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestBoostsSimple,The following statement contains a magic number: boosts["t"] = (float)10;
Magic Number,Lucene.Net.QueryParsers.Classic,TestMultiFieldQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiFieldQueryParser.cs,TestStopWordSearching,The following statement contains a magic number: ScoreDoc[] hits = @is.Search(q' null' 1000).ScoreDocs;
Magic Number,Lucene.Net.QueryParsers.Classic,TestMultiPhraseQueryParsing_,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestMultiPhraseQueryParsing.cs,TestMultiPhraseQueryParsing,The following statement contains a magic number: TokenAndPos[] INCR_0_QUERY_TOKENS_AND = new TokenAndPos[]              {                  new TokenAndPos("a"' 0)'                  new TokenAndPos("1"' 0)'                  new TokenAndPos("b"' 1)'                  new TokenAndPos("1"' 1)'                  new TokenAndPos("c"' 2)              };
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestStarParsing,The following statement contains a magic number: assertEquals(2' qp.type[0]);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestStarParsing,The following statement contains a magic number: assertEquals(2' qp.type[0]);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestStarParsing,The following statement contains a magic number: assertEquals(tq.Boost' 2' 0);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestStarParsing,The following statement contains a magic number: assertEquals(tq.Boost' 2' 0);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestStarParsing,The following statement contains a magic number: assertEquals(3' qp.type[0]);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestSynonyms,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestSynonymsPhrase,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestSynonymsPhrase,The following statement contains a magic number: expected.Slop = (3);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonym,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonymsOR,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonymsOR2,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonymsAND,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonymsAND2,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonymsPhrase,The following statement contains a magic number: expected.Boost = (2.0f);
Magic Number,Lucene.Net.QueryParsers.Classic,TestQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,TestCJKSynonymsPhrase,The following statement contains a magic number: expected.Slop = (3);
Magic Number,Lucene.Net.QueryParsers.Classic,TestFuzzySlopeExtendabilityQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,HandleBareFuzzy,The following statement contains a magic number: fms = float.Parse(fuzzySlop.Image.Substring(1' fuzzySlop.Image.Length - 2)' CultureInfo.InvariantCulture);
Magic Number,Lucene.Net.QueryParsers.Classic,TestFuzzySlopeExtendabilityQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,HandleBareFuzzy,The following statement contains a magic number: return GetRangeQuery(qfield' (value - fms / 2.0f).ToString(CultureInfo.InvariantCulture)' (value + fms / 2.0f).ToString(CultureInfo.InvariantCulture)' true' true);
Magic Number,Lucene.Net.QueryParsers.Classic,TestFuzzySlopeExtendabilityQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,HandleBareFuzzy,The following statement contains a magic number: return GetRangeQuery(qfield' (value - fms / 2.0f).ToString(CultureInfo.InvariantCulture)' (value + fms / 2.0f).ToString(CultureInfo.InvariantCulture)' true' true);
Magic Number,Lucene.Net.QueryParsers.Classic,TestStarParsingQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,GetPrefixQuery,The following statement contains a magic number: type[0] = 2;
Magic Number,Lucene.Net.QueryParsers.Classic,TestStarParsingQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Classic\TestQueryParser.cs,GetFieldQuery,The following statement contains a magic number: type[0] = 3;
Magic Number,Lucene.Net.QueryParsers.ComplexPhrase,TestComplexPhraseQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\ComplexPhrase\TestComplexPhraseQuery.cs,CheckMatches,The following statement contains a magic number: TopDocs td = searcher.Search(q' 10);
Magic Number,Lucene.Net.QueryParsers.Ext,TestExtendableQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Ext\TestExtendableQueryParser.cs,TestExtFieldUnqoted,The following statement contains a magic number: assertEquals(2' clauses.Length);
Magic Number,Lucene.Net.QueryParsers.Flexible.Core.Nodes,TestQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Core\Nodes\TestQueryNode.cs,TestAddChildren,The following statement contains a magic number: IQueryNode nodeB = new FieldQueryNode("foo"' "B"' 1' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Core.Nodes,TestQueryNode,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Core\Nodes\TestQueryNode.cs,TestAddChildren,The following statement contains a magic number: assertEquals(2' bq.GetChildren().size());
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestWildcard,The following statement contains a magic number: assertEquals(2' fq.MaxEdits);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,getLocalizedDate,The following statement contains a magic number: lastDate = calendar.AddHours(lastDate' 23);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,getLocalizedDate,The following statement contains a magic number: lastDate = calendar.AddMinutes(lastDate' 59);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,getLocalizedDate,The following statement contains a magic number: lastDate = calendar.AddSeconds(lastDate' 59);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,getLocalizedDate,The following statement contains a magic number: lastDate = calendar.AddMilliseconds(lastDate' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: String startDate = getLocalizedDate(2002' 1' 1' false);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: String endDate = getLocalizedDate(2002' 1' 4' false);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: String endDate = getLocalizedDate(2002' 1' 4' false);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Precedence,TestPrecedenceQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Precedence\TestPrecedenceQueryParser.cs,TestBooleanQuery,The following statement contains a magic number: BooleanQuery.MaxClauseCount = (2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiAnalyzerQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiAnalyzerQPHelper.cs,TestMultiAnalyzer,The following statement contains a magic number: qp.SetDefaultPhraseSlop(99);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestBoostsSimple,The following statement contains a magic number: boosts.Put("b"' 5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestBoostsSimple,The following statement contains a magic number: boosts.Put("t"' 10);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestMultiFieldQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestMultiFieldQPHelper.cs,TestStopWordSearching,The following statement contains a magic number: ScoreDoc[] hits = @is.Search(q' null' 1000).ScoreDocs;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The following statement contains a magic number: count > 100
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The following statement contains a magic number: randomDate = randomDate % 3400000000000L;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The following statement contains a magic number: randomDate = (randomDate / 1000L) * 1000L;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The following statement contains a magic number: randomDate = (randomDate / 1000L) * 1000L;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The following statement contains a magic number: RandomIndexWriter writer = new RandomIndexWriter(Random' directory'                  NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random))                      .SetMaxBufferedDocs(TestUtil.NextInt32(Random' 50' 1000))                      .SetMergePolicy(NewLogMergePolicy()));
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,BeforeClass,The following statement contains a magic number: RandomIndexWriter writer = new RandomIndexWriter(Random' directory'                  NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random))                      .SetMaxBufferedDocs(TestUtil.NextInt32(Random' 50' 1000))                      .SetMergePolicy(NewLogMergePolicy()));
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestInclusiveNumericRange,The following statement contains a magic number: assertRangeQuery(NumberType.ZERO' NumberType.POSITIVE' true' true' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestInclusiveNumericRange,The following statement contains a magic number: assertRangeQuery(NumberType.NEGATIVE' NumberType.ZERO' true' true' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestInclusiveNumericRange,The following statement contains a magic number: assertRangeQuery(NumberType.NEGATIVE' NumberType.POSITIVE' true' true' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestInclusiveLowerNumericRange,The following statement contains a magic number: assertRangeQuery(NumberType.NEGATIVE' NumberType.POSITIVE' false' true' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestInclusiveUpperNumericRange,The following statement contains a magic number: assertRangeQuery(NumberType.NEGATIVE' NumberType.POSITIVE' true' false' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertOpenRangeQuery(NumberType.POSITIVE' "<"' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertOpenRangeQuery(NumberType.ZERO' "<="' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertOpenRangeQuery(NumberType.POSITIVE' "<="' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertOpenRangeQuery(NumberType.NEGATIVE' ">"' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertOpenRangeQuery(NumberType.ZERO' ">="' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertOpenRangeQuery(NumberType.NEGATIVE' ">="' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertRangeQuery(NumberType.NEGATIVE' null' true' true' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertRangeQuery(NumberType.NEGATIVE' null' false' true' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertRangeQuery(null' NumberType.POSITIVE' true' true' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertRangeQuery(null' NumberType.POSITIVE' true' false' 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertRangeQuery(null' null' false' false' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestOpenRangeNumericQuery,The following statement contains a magic number: assertRangeQuery(null' null' true' true' 3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestNumericQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestNumericQueryParser.cs,TestQuery,The following statement contains a magic number: TopDocs topDocs = searcher.Search(query' 1000);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestCJKBoostedTerm,The following statement contains a magic number: expected.Boost = (0.5f);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestCJKBoostedPhrase,The following statement contains a magic number: expected.Boost = (0.5f);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestCJKSloppyPhrase,The following statement contains a magic number: expected.Slop = (3);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestWildcard,The following statement contains a magic number: assertEquals(2' fq.MaxEdits);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: String startDate = GetLocalizedDate(2002' 1' 1);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: String endDate = GetLocalizedDate(2002' 1' 4);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: String endDate = GetLocalizedDate(2002' 1' 4);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBoost,The following statement contains a magic number: assertEquals(1.0f' q.Boost' 0.01f);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestBooleanQuery,The following statement contains a magic number: BooleanQuery.MaxClauseCount = (2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestRegexps,The following statement contains a magic number: q.Boost = (0.5f);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestStopwords,The following statement contains a magic number: assertTrue(((BooleanQuery)result).Clauses.size() + " does not equal: "                  + 2' ((BooleanQuery)result).Clauses.size() == 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestStopwords,The following statement contains a magic number: assertTrue(((BooleanQuery)result).Clauses.size() + " does not equal: "                  + 2' ((BooleanQuery)result).Clauses.size() == 2);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,AssertHits,The following statement contains a magic number: ScoreDoc[] hits = @is.Search(q' null' 1000).ScoreDocs;
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,TestQPHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,TestMultiPhraseQuery,The following statement contains a magic number: assertEquals(1' s.Search(q' 10).TotalHits);
Magic Number,Lucene.Net.QueryParsers.Flexible.Standard,CannedTokenizer,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Flexible\Standard\TestQPHelper.cs,IncrementToken,The following statement contains a magic number: upto == 4
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestFuzzy,The following statement contains a magic number: Query expected = new FuzzyQuery(new Term("field"' "foobar")' 2);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestPhraseWithSlop,The following statement contains a magic number: expectedWithSlop.Slop = (2);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestPhraseWithSlop,The following statement contains a magic number: expectedWithMultiDigitSlop.Slop = (10);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestPhraseWithSlop,The following statement contains a magic number: pq.Slop = (12);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedTerm,The following statement contains a magic number: weights["field0"] = 5f;
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedTerm,The following statement contains a magic number: weights["field1"] = 10f;
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedTerm,The following statement contains a magic number: field0.Boost = (5f);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedTerm,The following statement contains a magic number: field1.Boost = (10f);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedOR,The following statement contains a magic number: weights["field0"] = 5f;
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedOR,The following statement contains a magic number: weights["field1"] = 10f;
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedOR,The following statement contains a magic number: field0.Boost = (5f);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedOR,The following statement contains a magic number: field1.Boost = (10f);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedOR,The following statement contains a magic number: field0.Boost = (5f);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestWeightedOR,The following statement contains a magic number: field1.Boost = (10f);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestRandomQueries,The following statement contains a magic number: ParseKeyword(query' (Operator)TestUtil.NextInt32(Random' 0' 1024));
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestRandomQueries,The following statement contains a magic number: i < 1000
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestRandomQueries2,The following statement contains a magic number: int queryLength = Random.Next(20);
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestRandomQueries2,The following statement contains a magic number: ParseKeyword(sb.toString()' (Operator)TestUtil.NextInt32(Random' 0' 1024));
Magic Number,Lucene.Net.QueryParsers.Simple,TestSimpleQueryParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Simple\TestSimpleQueryParser.cs,TestRandomQueries2,The following statement contains a magic number: i < 1000
Magic Number,Lucene.Net.QueryParsers.Surround.Query,SrndQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\SrndQueryTest.cs,CheckEqualParsings,The following statement contains a magic number: BasicQueryFactory qf = new BasicQueryFactory(16);
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms02,The following statement contains a magic number: int[] expdnrs = { 0' 1' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms03,The following statement contains a magic number: int[] expdnrs = { 2 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms05,The following statement contains a magic number: int[] expdnrs = { 0' 1' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms13,The following statement contains a magic number: int[] expdnrs = { 0' 1' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms14,The following statement contains a magic number: int[] expdnrs = { 0' 1' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms20,The following statement contains a magic number: int[] expdnrs = { 0' 1' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms21,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test02Terms22,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test03And02,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test04Or01,The following statement contains a magic number: int[] expdnrs = { 0' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test04Or02,The following statement contains a magic number: int[] expdnrs = { 0' 1' 2' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test04Or02,The following statement contains a magic number: int[] expdnrs = { 0' 1' 2' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test04Or03,The following statement contains a magic number: int[] expdnrs = { 0' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test02Boolean,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test02Boolean.cs,Test05Not01,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test0W06,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Wtrunc02r,The following statement contains a magic number: int[] expdnrs = { 0' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Ntrunc02,The following statement contains a magic number: int[] expdnrs = { 0' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Ntrunc02r,The following statement contains a magic number: int[] expdnrs = { 0' 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Wtrunc06,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Ntrunc06,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Ntrunc06r,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Wtrunc07,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Wtrunc08,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Wtrunc09,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test1Ntrunc09,The following statement contains a magic number: int[] expdnrs = { 3 };
Magic Number,Lucene.Net.QueryParsers.Surround.Query,Test03Distance,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Surround\Query\Test03Distance.cs,Test3Example01,The following statement contains a magic number: int[] expdnrs = { 0' 2 };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestCJKBoostedTerm,The following statement contains a magic number: expected.Boost = (0.5f);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestCJKBoostedPhrase,The following statement contains a magic number: expected.Boost = (0.5f);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestCJKSloppyPhrase,The following statement contains a magic number: expected.Slop = (3);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestWildcard,The following statement contains a magic number: assertEquals(2' fq.MaxEdits);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,GetLocalizedDate,The following statement contains a magic number: DateTime date = new GregorianCalendar().ToDateTime(year' month' day' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: string startDate = GetLocalizedDate(2002' 1' 1);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: string endDate = GetLocalizedDate(2002' 1' 4);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: string endDate = GetLocalizedDate(2002' 1' 4);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDateRange,The following statement contains a magic number: DateTime endDateExpected = new GregorianCalendar().ToDateTime(2002' 1' 4' 23' 59' 59' 999);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestBoost,The following statement contains a magic number: assertEquals(q.Boost' (float)2.0' (float)0.5);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestBoost,The following statement contains a magic number: assertEquals(1.0f' q.Boost' 0.01f);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestBooleanQuery,The following statement contains a magic number: BooleanQuery.MaxClauseCount = (2);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestRegexps,The following statement contains a magic number: q.Boost = (0.5f);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestStopwords,The following statement contains a magic number: assertTrue(((BooleanQuery)result).Clauses.Count + " does not equal: " + 2' ((BooleanQuery)result).Clauses.Count == 2);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestStopwords,The following statement contains a magic number: assertTrue(((BooleanQuery)result).Clauses.Count + " does not equal: " + 2' ((BooleanQuery)result).Clauses.Count == 2);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPositionIncrement,The following statement contains a magic number: int[] expectedPositions = { 1' 3' 4' 6' 9 };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,AssertHits,The following statement contains a magic number: ScoreDoc[] hits = @is.Search(q' null' 1000).ScoreDocs;
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestDistanceAsEditsParsing,The following statement contains a magic number: assertEquals(2' q.MaxEdits);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestParseWildcardAndPhraseQueries,The following statement contains a magic number: string[][] prefixQueries = new string[3][] {                  new string[] {"a*"' "ab*"' "abc*"'}'                  new string[] {"h*"' "hi*"' "hij*"' "\\\\7*"}'                  new string[] {"o*"' "op*"' "opq*"' "\\\\\\\\*"}'              };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestParseWildcardAndPhraseQueries,The following statement contains a magic number: string[][] wildcardQueries = new string[3][] {                  new string[] {"*a*"' "*ab*"' "*abc**"' "ab*e*"' "*g?"' "*f?1"' "abc**"}'                  new string[] {"*h*"' "*hi*"' "*hij**"' "hi*k*"' "*n?"' "*m?1"' "hij**"}'                  new string[] {"*o*"' "*op*"' "*opq**"' "op*q*"' "*u?"' "*t?1"' "opq**"}'              };
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestPhraseQueryPositionIncrements,The following statement contains a magic number: phraseQuery.Add(new Term("field"' "2")' 2);
Magic Number,Lucene.Net.QueryParsers.Util,QueryParserTestBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Util\QueryParserTestBase.cs,TestMatchAllQueryParsing,The following statement contains a magic number: query.Boost = (2.3f);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterInt,The following statement contains a magic number: assertEquals(Convert.ToInt32(10)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterInt,The following statement contains a magic number: assertEquals(Convert.ToInt32(10)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(-2321L)' numRangeFilter.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(60000000L)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(-2321L)' numRangeFilter2.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(60000000L)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(-23.21d)' numRangeFilter.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(60000.00023d)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(-23.21d)' numRangeFilter2.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(60000.00023d)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(-2.321432f)' numRangeFilter.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(32432.23f)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(-2.321432f)' numRangeFilter2.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeFilterBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeFilterBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(32432.23f)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterInt,The following statement contains a magic number: assertEquals(Convert.ToInt32(10)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterInt,The following statement contains a magic number: assertEquals(Convert.ToInt32(10)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(-2321L)' numRangeFilter.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(60000000L)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(-2321L)' numRangeFilter2.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterLong,The following statement contains a magic number: assertEquals(Convert.ToInt64(60000000L)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(-23.21d)' numRangeFilter.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(60000.00023d)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(-23.21d)' numRangeFilter2.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterDouble,The following statement contains a magic number: assertEquals(Convert.ToDouble(60000.00023d)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(-2.321432f)' numRangeFilter.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(32432.23f)' numRangeFilter.Max);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(-2.321432f)' numRangeFilter2.Min);
Magic Number,Lucene.Net.QueryParsers.Xml.Builders,TestNumericRangeQueryBuilder,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\Builders\TestNumericRangeQueryBuilder.cs,TestGetFilterFloat,The following statement contains a magic number: assertEquals(Convert.ToSingle(32432.23f)' numRangeFilter2.Max);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestSimpleXML,The following statement contains a magic number: DumpResults("TermQuery"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestSimpleTermsQueryXML,The following statement contains a magic number: DumpResults("TermsQuery"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestBooleanQueryXML,The following statement contains a magic number: DumpResults("BooleanQuery"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestDisjunctionMaxQueryXML,The following statement contains a magic number: assertEquals(0.0f' d.TieBreakerMultiplier' 0.0001f);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestDisjunctionMaxQueryXML,The following statement contains a magic number: assertEquals(2' d.Disjuncts.size());
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestDisjunctionMaxQueryXML,The following statement contains a magic number: assertEquals(1.2f' ndq.TieBreakerMultiplier' 0.0001f);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestDisjunctionMaxQueryXML,The following statement contains a magic number: assertEquals(1.2f' ndq.TieBreakerMultiplier' 0.0001f);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestRangeFilterQueryXML,The following statement contains a magic number: DumpResults("RangeFilter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestUserQueryXML,The following statement contains a magic number: DumpResults("UserInput with Filter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestCustomFieldUserQueryXML,The following statement contains a magic number: int h = searcher.Search(q' null' 1000).TotalHits;
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestLikeThisQueryXML,The following statement contains a magic number: DumpResults("like this"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestBoostingQueryXML,The following statement contains a magic number: DumpResults("boosting "' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestFuzzyLikeThisQueryXML,The following statement contains a magic number: DumpResults("FuzzyLikeThis"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestTermsFilterXML,The following statement contains a magic number: DumpResults("Terms Filter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestBoostingTermQueryXML,The following statement contains a magic number: DumpResults("BoostingTermQuery"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestSpanTermXML,The following statement contains a magic number: DumpResults("Span Query"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestConstantScoreQueryXML,The following statement contains a magic number: DumpResults("ConstantScoreQuery"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestMatchAllDocsPlusFilterXML,The following statement contains a magic number: DumpResults("MatchAllDocsQuery with range filter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestBooleanFilterXML,The following statement contains a magic number: DumpResults("Boolean filter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestNestedBooleanQuery,The following statement contains a magic number: DumpResults("Nested Boolean query"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestCachedFilterXML,The following statement contains a magic number: DumpResults("Cached filter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestDuplicateFilterQueryXML,The following statement contains a magic number: int h = searcher.Search(q' null' 1000).TotalHits;
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestNumericRangeFilterQueryXML,The following statement contains a magic number: DumpResults("NumericRangeFilter"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestParser,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestParser.cs,TestNumericRangeQueryQueryXML,The following statement contains a magic number: DumpResults("NumericRangeQuery"' q' 5);
Magic Number,Lucene.Net.QueryParsers.Xml,TestQueryTemplateManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Xml\TestQueryTemplateManager.cs,TestFormTransforms,The following statement contains a magic number: int h = searcher.Search(q' null' 1000).TotalHits;
Missing Default,Lucene.Net.QueryParsers.Analyzing,FoldingFilter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.QueryParser\Analyzing\TestAnalyzingQueryParser.cs,IncrementToken,The following switch statement is missing a default case: switch (term[i])                          {                              case 'ü':                                  term[i] = 'u';                                  break;                              case 'ö':                                  term[i] = 'o';                                  break;                              case 'é':                                  term[i] = 'e';                                  break;                              case 'ï':                                  term[i] = 'i';                                  break;                          }
