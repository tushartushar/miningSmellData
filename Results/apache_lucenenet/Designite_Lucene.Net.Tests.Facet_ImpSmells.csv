Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The method has 153 lines of code.
Long Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The method has 344 lines of code.
Long Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,slowDrillSidewaysSearch,The method has 116 lines of code.
Long Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,VerifyEquals,The method has 115 lines of code.
Long Method,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The method has 185 lines of code.
Long Method,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The method has 194 lines of code.
Long Method,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The method has 177 lines of code.
Long Method,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has 168 lines of code.
Long Method,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The method has 102 lines of code.
Long Method,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The method has 104 lines of code.
Complex Method,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,Cyclomatic complexity of the method is 57
Complex Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,slowDrillSidewaysSearch,Cyclomatic complexity of the method is 22
Complex Method,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,VerifyEquals,Cyclomatic complexity of the method is 21
Complex Method,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,Cyclomatic complexity of the method is 23
Complex Method,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,Cyclomatic complexity of the method is 24
Complex Method,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,Cyclomatic complexity of the method is 21
Complex Method,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,Cyclomatic complexity of the method is 15
Complex Method,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,TestConcurrency,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.Facet.Taxonomy,IndexerThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,Run,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArrays,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysInvariants,Cyclomatic complexity of the method is 14
Complex Method,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,Cyclomatic complexity of the method is 15
Complex Method,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,Cyclomatic complexity of the method is 16
Complex Method,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,Cyclomatic complexity of the method is 13
Complex Method,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,Cyclomatic complexity of the method is 11
Long Parameter List,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,slowDrillSidewaysSearch,The method has 6 parameters. Parameters: s' docs' contentToken' drillDowns' dimValues' onlyEven
Long Parameter List,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,VerifyEquals,The method has 6 parameters. Parameters: dimValues' s' expected' actual' scores' isSortedSetDV
Long Parameter List,Lucene.Net.Facet,DrillSidewaysAnonymousInnerClassHelper2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,DrillSidewaysAnonymousInnerClassHelper2,The method has 5 parameters. Parameters: outerInstance' s' config' tr' drillDowns
Long Parameter List,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,DrillSidewaysAnonymousInnerClassHelper2,The method has 7 parameters. Parameters: outerInstance' indexSearcher' facetsConfig' org' valueSource' doubleRanges' filter
Long Parameter List,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,ThreadAnonymousInnerClassHelper,The method has 6 parameters. Parameters: outerInstance' numDocs' values' iw' tw' config
Long Parameter List,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,ThreadAnonymousInnerClassHelper,The method has 5 parameters. Parameters: outerInstance' range' numCats' values' tw
Long Parameter List,Lucene.Net.Facet.Taxonomy,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestCachedOrdinalsReader.cs,ThreadAnonymousInnerClassHelper,The method has 10 parameters. Parameters: outerInstance' abPath' abOrd' abYoungChildBase1' abYoungChildBase2' retry' tr' stop' error' retrieval
Long Parameter List,Lucene.Net.Facet.Taxonomy,IndexerThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,IndexerThread,The method has 6 parameters. Parameters: w' config' tw' mgr' ordLimit' stop
Long Parameter List,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,AssertConsistentYoungestChild,The method has 6 parameters. Parameters: abPath' abOrd' abYoungChildBase1' abYoungChildBase2' retry' numCategories
Long Statement,Lucene.Net.Facet,SlowRAMDirectory,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SlowRAMDirectory.cs,doSleep,The length of the statement  "//            catch (ThreadInterruptedException e) // LUCENENET NOTE: Senseless to catch and rethrow the same exception type " is 124.
Long Statement,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,The length of the statement  "            RandomIndexWriter writer = new RandomIndexWriter(r' dir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(r' MockTokenizer.KEYWORD' false))); " is 152.
Long Statement,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestClone,The length of the statement  "            Assert.False(q.ToString().Equals(clone.ToString()' StringComparison.Ordinal)' "query wasn't cloned: source=" + q + " clone=" + clone); " is 134.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 160.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 160.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=3 childCount=2\n  2010 (2)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 160.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' allResults[0].ToString()); " is 136.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 134.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=3 childCount=2\n  2010 (2)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 134.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 160.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 147.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestSometimesInvalidDrillDown,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=1 childCount=1\n  2010 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString()); " is 135.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestSometimesInvalidDrillDown,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString()); " is 134.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestMultipleRequestsPerDim,The length of the statement  "            Assert.AreEqual("dim=dim path=[] value=6 childCount=4\n  a (3)\n  b (1)\n  c (1)\n  d (1)\n"' r.Facets.GetTopChildren(10' "dim").ToString()); " is 141.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestMultipleRequestsPerDim,The length of the statement  "            Assert.AreEqual("dim=dim path=[a] value=3 childCount=3\n  x (1)\n  y (1)\n  z (1)\n"' r.Facets.GetTopChildren(10' "dim"' "a").ToString()); " is 138.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The length of the statement  "                Console.WriteLine("numDims=" + numDims + " numDocs=" + numDocs + " aChance=" + aChance + " bChance=" + bChance + " cChance=" + cChance); " is 136.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The length of the statement  "                    Console.WriteLine("\nTEST: iter=" + iter + " baseQuery=" + contentToken + " numDrillDown=" + numDrillDown + " useSortedSetDV=" + doUseDV); " is 138.
Long Statement,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestEmptyIndex,The length of the statement  "            r = ds.Search(ddq' null' null' 10' new Sort(new SortField("foo"' SortFieldType.INT32))' false' false); // this used to fail on IllegalArgEx " is 139.
Long Statement,Lucene.Net.Facet,FilterAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,GetDocIdSet,The length of the statement  "                    if ((acceptDocs == null || acceptDocs.Get(docID)) && (Convert.ToInt32(context.Reader.Document(docID).Get("id")) & 1) == 0) " is 122.
Long Statement,Lucene.Net.Facet,DrillSidewaysAnonymousInnerClassHelper2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,BuildFacetsResult,The length of the statement  "                        drillSidewaysFacets[drillSidewaysDims[i]] = outerInstance.GetTaxonomyFacetCounts(m_taxoReader' m_config' drillSideways[i]); " is 123.
Long Statement,Lucene.Net.Facet,TestFacetsConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestFacetsConfig.cs,TestAddSameDocTwice,The length of the statement  "            IndexWriter indexWriter = new IndexWriter(indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random))); " is 122.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,TestDefault,The length of the statement  "            var iw = new RandomIndexWriter(Random' indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false))); " is 152.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,TestCustom,The length of the statement  "            RandomIndexWriter iw = new RandomIndexWriter(Random' indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false))); " is 166.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,TestTwoCustomsSameField,The length of the statement  "            RandomIndexWriter iw = new RandomIndexWriter(Random' indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false))); " is 166.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,TestDifferentFieldsAndText,The length of the statement  "            var iw = new RandomIndexWriter(Random' indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false))); " is 152.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,TestSomeSameSomeDifferent,The length of the statement  "            RandomIndexWriter iw = new RandomIndexWriter(Random' indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false))); " is 166.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The length of the statement  "            Assert.AreEqual("dim=Band path=[] value=5 childCount=2\n  Rock & Pop (4)\n  Punk (1)\n"' facets.GetTopChildren(10' "Band").ToString()); " is 135.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The length of the statement  "            Assert.AreEqual("dim=Band path=[Rock & Pop] value=4 childCount=4\n  The Beatles (1)\n  U2 (1)\n  REM (1)\n  Dave Matthews Band (1)\n"' facets.GetTopChildren(10' "Band"' "Rock & Pop").ToString()); " is 195.
Long Statement,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=3 childCount=3\n  Mark Twain (1)\n  Stephen King (1)\n  Kurt Vonnegut (1)\n"' facets.GetTopChildren(10' "Author").ToString()); " is 168.
Long Statement,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The length of the statement  "            RandomSamplingFacetsCollector collectRandomZeroResults = new RandomSamplingFacetsCollector(numDocs / 10' random.NextInt64()); " is 125.
Long Statement,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The length of the statement  "            RandomSamplingFacetsCollector random100Percent = new RandomSamplingFacetsCollector(numDocs' random.NextInt64()); // no sampling " is 127.
Long Statement,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The length of the statement  "            RandomSamplingFacetsCollector random10Percent = new RandomSamplingFacetsCollector(numDocs / 10' random.NextInt64()); // 10 % of total docs' 20% of the hits " is 155.
Long Statement,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The length of the statement  "            FacetResult random10Result = random10Percent.AmortizeFacetCounts(random10FacetCounts.GetTopChildren(10' "iMod10")' config' searcher); " is 133.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The length of the statement  "            Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true)); " is 345.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=22 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (1)\n"' result.ToString()); " is 186.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestLongMinMax,The length of the statement  "            Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("min"' long.MinValue' true' long.MinValue' true)' new Int64Range("max"' long.MaxValue' true' long.MaxValue' true)' new Int64Range("all0"' long.MinValue' true' long.MaxValue' true)' new Int64Range("all1"' long.MinValue' false' long.MaxValue' true)' new Int64Range("all2"' long.MinValue' true' long.MaxValue' false)' new Int64Range("all3"' long.MinValue' false' long.MaxValue' false)); " is 453.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestLongMinMax,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=3 childCount=6\n  min (1)\n  max (1)\n  all0 (3)\n  all1 (2)\n  all2 (2)\n  all3 (1)\n"' result.ToString()); " is 149.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The length of the statement  "            Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true)); " is 241.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=41 childCount=4\n  0-10 (11)\n  10-20 (11)\n  20-30 (11)\n  30-40 (11)\n"' result.ToString()); " is 135.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The length of the statement  "            Assert.AreEqual("dim=dim path=[] value=100 childCount=2\n  b (75)\n  a (25)\n"' dsr.Facets.GetTopChildren(10' "dim").ToString()); " is 129.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' dsr.Facets.GetTopChildren(10' "field").ToString()); " is 218.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The length of the statement  "            Assert.AreEqual("dim=dim path=[] value=100 childCount=2\n  b (75)\n  a (25)\n"' dsr.Facets.GetTopChildren(10' "dim").ToString()); " is 129.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=16 childCount=5\n  less than 10 (7)\n  less than or equal to 10 (8)\n  over 90 (7)\n  90 or above (8)\n  over 1000 (0)\n"' dsr.Facets.GetTopChildren(10' "field").ToString()); " is 215.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The length of the statement  "            Assert.AreEqual("dim=dim path=[] value=11 childCount=2\n  b (8)\n  a (3)\n"' dsr.Facets.GetTopChildren(10' "dim").ToString()); " is 126.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' dsr.Facets.GetTopChildren(10' "field").ToString()); " is 218.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The length of the statement  "            Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false)); " is 371.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' facets.GetTopChildren(10' "field").ToString()); " is 214.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The length of the statement  "            Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false)); " is 412.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' facets.GetTopChildren(10' "field").ToString()); " is 214.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The length of the statement  "                            ddq.Add("field"' NumericRangeFilter.NewInt64Range("field"' range.Min' range.Max' range.MinInclusive' range.MaxInclusive)); " is 122.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The length of the statement  "                            ddq.Add("field"' NumericRangeQuery.NewInt64Range("field"' range.Min' range.Max' range.MinInclusive' range.MaxInclusive)); " is 121.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The length of the statement  "                            ddq.Add("field"' NumericRangeFilter.NewSingleRange("field"' (float)range.Min' (float)range.Max' range.MinInclusive' range.MaxInclusive)); " is 137.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The length of the statement  "                            ddq.Add("field"' NumericRangeQuery.NewSingleRange("field"' (float)range.Min' (float)range.Max' range.MinInclusive' range.MaxInclusive)); " is 136.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The length of the statement  "                            ddq.Add("field"' NumericRangeFilter.NewDoubleRange("field"' range.Min' range.Max' range.MinInclusive' range.MaxInclusive)); " is 123.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The length of the statement  "                            ddq.Add("field"' NumericRangeQuery.NewDoubleRange("field"' range.Min' range.Max' range.MinInclusive' range.MaxInclusive)); " is 122.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The length of the statement  "            Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false)); " is 346.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=16 childCount=5\n  less than 10 (8)\n  less than or equal to 10 (8)\n  over 90 (8)\n  90 or above (8)\n  over 1000 (0)\n"' facets.GetTopChildren(10' "field").ToString()); " is 211.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The length of the statement  "            DoubleRange[] ranges = new DoubleRange[] { new DoubleRange("< 1"' 0.0' true' 1.0' false)' new DoubleRange("< 2"' 0.0' true' 2.0' false)' new DoubleRange("< 5"' 0.0' true' 5.0' false)' new DoubleRange("< 10"' 0.0' true' 10.0' false)' new DoubleRange("< 20"' 0.0' true' 20.0' false)' new DoubleRange("< 50"' 0.0' true' 50.0' false) }; " is 332.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The length of the statement  "                fastMatchFilter = new CachingWrapperFilterAnonymousInnerClassHelper(this' new QueryWrapperFilter(new MatchAllDocsQuery())' filterWasUsed); " is 138.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=3 childCount=6\n  < 1 (0)\n  < 2 (1)\n  < 5 (3)\n  < 10 (3)\n  < 20 (3)\n  < 50 (3)\n"' facets.GetTopChildren(10' "field").ToString()); " is 176.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The length of the statement  "            DrillSideways ds = new DrillSidewaysAnonymousInnerClassHelper2(this' s' config' (TaxonomyReader)null' vs' ranges' fastMatchFilter); " is 131.
Long Statement,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The length of the statement  "            Assert.AreEqual("dim=field path=[] value=3 childCount=6\n  < 1 (0)\n  < 2 (1)\n  < 5 (3)\n  < 10 (3)\n  < 20 (3)\n  < 50 (3)\n"' dsr.Facets.GetTopChildren(10' "field").ToString()); " is 180.
Long Statement,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The length of the statement  "                byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false)); " is 352.
Long Statement,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=4 childCount=3\n  foo (2)\n  bar (1)\n  zoo (1)\n"' facets.GetTopChildren(10' "a").ToString()); " is 132.
Long Statement,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSomeSegmentsMissing,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=2 childCount=2\n  foo1 (1)\n  foo2 (1)\n"' facets.GetTopChildren(10' "a").ToString()); " is 123.
Long Statement,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSlowCompositeReaderWrapper,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=2 childCount=2\n  foo1 (1)\n  foo2 (1)\n"' facets.GetTopChildren(10' "a").ToString()); " is 123.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,validate,The length of the statement  "                    Assert.True(destSize >= srcSize' "destination taxonomy expected to be larger than source; dest=" + destSize + " src=" + srcSize); " is 129.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The length of the statement  "                        FacetLabel cp = new FacetLabel(Convert.ToString(value / 1000)' Convert.ToString(value / 10000)' Convert.ToString(value / 100000)' Convert.ToString(value)); " is 155.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedMergedSegment,The length of the statement  "            IndexWriter iw = new IndexWriter(dir' new IndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random)).SetMergePolicy(new LogByteSizeMergePolicy())); " is 154.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedNoChangesButSegmentMerges,The length of the statement  "            var iw = new IndexWriter(dir' new IndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random)).SetMergePolicy(new LogByteSizeMergePolicy())); " is 146.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestCommitUserData,The length of the statement  "            Assert.True("1 2 3".Equals(readUserCommitData["testing"]' StringComparison.Ordinal)' "wrong value extracted from commit data"); " is 127.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestCommitUserData,The length of the statement  "            Assert.NotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + " not found in commitData"' readUserCommitData[DirectoryTaxonomyWriter.INDEX_EPOCH]); " is 138.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestCommitUserData,The length of the statement  "            Assert.NotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + " not found in taoxWriter.commitData"' taxoWriter.CommitData[DirectoryTaxonomyWriter.INDEX_EPOCH]); " is 152.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestCommitUserData,The length of the statement  "            Assert.NotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + " not found in commitData"' readUserCommitData[DirectoryTaxonomyWriter.INDEX_EPOCH]); " is 138.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The length of the statement  "            IndexWriter indexWriter = new IndexWriter(indexDir' NewIndexWriterConfig(TEST_VERSION_CURRENT' new MockAnalyzer(Random))); " is 122.
Long Statement,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The length of the statement  "            DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir' OpenMode.CREATE' new Cl2oTaxonomyWriterCache(2' 1f' 1)); " is 130.
Long Statement,Lucene.Net.Facet.Taxonomy,TestCachedOrdinalsReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestCachedOrdinalsReader.cs,TestWithThreads,The length of the statement  "            CachedOrdinalsReader ordsReader = new CachedOrdinalsReader(new DocValuesOrdinalsReader(FacetsConfig.DEFAULT_INDEX_FIELD_NAME)); " is 127.
Long Statement,Lucene.Net.Facet.Taxonomy,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestCachedOrdinalsReader.cs,AssertChildrenArrays,The length of the statement  "                Assert.True(abYoungChildBase1 == abYoungChild || abYoungChildBase2 == ca.Children[abOrd]' "Retry " + retry + ": retrieval: " + retrieval + ": wrong youngest child for category " + abPath + " (ord=" + abOrd + ") - must be either " + abYoungChildBase1 + " or " + abYoungChildBase2 + " but was: " + abYoungChild); " is 310.
Long Statement,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestLongHashCode,The length of the statement  "            Assert.AreEqual((new FacetLabel("hello"' "world")).Int64HashCode()' (new FacetLabel("hello"' "world")).Int64HashCode()); " is 120.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestReaderBasic,The length of the statement  "                    fail("For category " + Showcat(ExpectedCategories[i]) + " expected ordinal " + expectedOrdinal + "' but got " + ordinal); " is 121.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestReaderParent,The length of the statement  "                    fail("Got parent " + parentOrdinal + " for ordinal " + ordinal + " but categories are " + Showcat(parent) + " and " + Showcat(me) + " respectively."); " is 150.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,CheckWriterParent,The length of the statement  "                    fail("Got parent " + parentOrdinal + " for ordinal " + ordinal + " but categories are " + Showcat(parent) + " and " + Showcat(me) + " respectively."); " is 150.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,AssertConsistentYoungestChild,The length of the statement  "                Assert.AreEqual(TaxonomyReader.INVALID_ORDINAL' tr.GetOrdinal(cp)' "Ordinal of " + cp + " must be invalid until Taxonomy Reader was refreshed"); " is 144.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,AssertConsistentYoungestChild,The length of the statement  "            var thread = new ThreadAnonymousInnerClassHelper(this' abPath' abOrd' abYoungChildBase1' abYoungChildBase2' retry' tr' stop' error' retrieval); " is 143.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,AssertConsistentYoungestChild,The length of the statement  "            Assert.Null(error[0]' "Unexpcted exception at retry " + retry + " retrieval " + retrieval[0] + ": \n" + stackTraceStr(error[0])); " is 129.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,FillTaxonomyCheckPaths,The length of the statement  "                        fail("For category " + Showcat(categories[i]) + " expected ancestor level " + (ExpectedPaths[i].Length - 1 - j) + " was " + expectedOrdinal + "' but got " + ordinal); " is 166.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,CheckPaths,The length of the statement  "                        fail("For category " + Showcat(categories[i]) + " expected ancestor level " + (ExpectedPaths[i].Length - 1 - j) + " was " + expectedOrdinal + "' but got " + ordinal); " is 166.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociation,The length of the statement  "            Assert.AreEqual("dim=int path=[] value=-1 childCount=2\n  a (200)\n  b (150)\n"' facets.GetTopChildren(10' "int").ToString()); " is 126.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestFloatSumAssociation,The length of the statement  "            Assert.AreEqual("dim=float path=[] value=-1.0 childCount=2\n  a (50.0)\n  b (9.999995)\n"' facets.GetTopChildren(10' "float").ToString()); " is 138.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociationDrillDown,The length of the statement  "            Assert.AreEqual("dim=int path=[] value=-1 childCount=2\n  b (150)\n  a (100)\n"' facets.GetTopChildren(10' "int").ToString()); " is 126.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Publish Date path=[] value=5 childCount=3\n  2010 (2)\n  2012 (2)\n  1999 (1)\n"' facets.GetTopChildren(10' "Publish Date").ToString()); " is 157.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' facets.GetTopChildren(10' "Author").ToString()); " is 158.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' facets.GetTopChildren(10' "Author").ToString()); " is 132.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The length of the statement  "            Assert.True(result.IndexOf("/Publish Date: 3 immediate children; 12 total categories"' StringComparison.Ordinal) != -1); " is 120.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestLabelWithDelimiter,The length of the statement  "            Assert.AreEqual("dim=dim path=[] value=-1 childCount=2\n  test\u001Fone (1)\n  test\u001Etwo (1)\n"' result.ToString()); " is 120.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestManyFacetsInOneDocument,The length of the statement  "            AssumeTrue("default Codec doesn't support huge BinaryDocValues"' TestUtil.FieldSupportsHugeBinaryDocValues(FacetsConfig.DEFAULT_INDEX_FIELD_NAME)); " is 147.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,TestAllCounts,The length of the statement  "                Assert.True((int)labelValue.Value <= prevValue' "wrong sort order of sub results: labelValue.value=" + labelValue.Value + " prevValue=" + prevValue); " is 149.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,TestAllCounts,The length of the statement  "                Assert.True((int)labelValue.Value <= prevValue' "wrong sort order of sub results: labelValue.value=" + labelValue.Value + " prevValue=" + prevValue); " is 149.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The length of the statement  "            TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader' new FacetsConfig()' c' new Int32FieldSource("num")); " is 133.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The length of the statement  "            Assert.AreEqual("dim=Author path=[] value=145.0 childCount=4\n  Lisa (50.0)\n  Frank (45.0)\n  Susan (40.0)\n  Bob (10.0)\n"' facets.GetTopChildren(10' "Author").ToString()); " is 174.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The length of the statement  "            TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader' new FacetsConfig()' c' new Int32FieldSource("num")); " is 133.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=60.0 childCount=3\n  foo3 (30.0)\n  foo2 (20.0)\n  foo1 (10.0)\n"' results[0].ToString()); " is 127.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWrongIndexFieldName,The length of the statement  "            TaxonomyFacetSumValueSource facets = new TaxonomyFacetSumValueSource(taxoReader' config' c' new Int32FieldSource("num")); " is 121.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSumScoreAggregator,The length of the statement  "            Facets facets = new TaxonomyFacetSumValueSource(taxoReader' config' fc' new TaxonomyFacetSumValueSource.ScoreValueSource()); " is 124.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestNoScore,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=10.0 childCount=2\n  1 (6.0)\n  0 (4.0)\n"' facets.GetTopChildren(10' "a").ToString()); " is 124.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWithScore,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=10.0 childCount=2\n  1 (6.0)\n  0 (4.0)\n"' facets.GetTopChildren(10' "a").ToString()); " is 124.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRollupValues,The length of the statement  "            Assert.AreEqual("dim=a path=[] value=10.0 childCount=2\n  1 (6.0)\n  0 (4.0)\n"' facets.GetTopChildren(10' "a").ToString()); " is 124.
Long Statement,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestCountAndSumScore,The length of the statement  "            Facets facets2 = new TaxonomyFacetSumValueSource(new DocValuesOrdinalsReader("$b")' taxoReader' config' fc' new TaxonomyFacetSumValueSource.ScoreValueSource()); " is 160.
Long Statement,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The length of the statement  "                new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })' " is 227.
Virtual Method Call from Constructor,Lucene.Net.Facet,SlowIndexInput,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SlowRAMDirectory.cs,SlowIndexInput,The constructor "SlowIndexInput" calls a virtual method "forkRandom".
Virtual Method Call from Constructor,Lucene.Net.Facet,SlowIndexOutput,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SlowRAMDirectory.cs,SlowIndexOutput,The constructor "SlowIndexOutput" calls a virtual method "forkRandom".
Empty Catch Block,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestStaleState,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestAlreadyClosed,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestRollback,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestEnsureOpen,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestLongPath,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestReplaceTaxonomyNrt,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,CheckWriterParent,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,CheckWriterParent,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,CheckWriterParent,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterLock,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestWrongIndexFieldName,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestWrongIndexFieldName,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestMixedTypesInSameIndexField,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestNoHierarchy,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestRequireDimCount,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestWrongIndexFieldName,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestWrongIndexFieldName,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestMultiValuedHierarchy,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRequireDimCount,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestDetectHierarchicalField,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestDetectMultiValuedField,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWrongIndexFieldName,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWrongIndexFieldName,The method has an empty catch block.
Magic Number,Lucene.Net.Facet,FacetTestCase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\FacetTestCase.cs,GetRandomTokens,The following statement contains a magic number: tokens[i] = TestUtil.RandomRealisticUnicodeString(Random' 1' 10);
Magic Number,Lucene.Net.Facet,FacetTestCase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\FacetTestCase.cs,GetRandomDocs,The following statement contains a magic number: Random.Next(10) < 3
Magic Number,Lucene.Net.Facet,FacetTestCase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\FacetTestCase.cs,GetRandomDocs,The following statement contains a magic number: Random.Next(10) < 3
Magic Number,Lucene.Net.Facet,FacetTestCase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\FacetTestCase.cs,AssertFloatValuesEquals,The following statement contains a magic number: Assert.AreEqual((float)a.Value' (float)b.Value' (float)a.Value / 1e5);
Magic Number,Lucene.Net.Facet,FacetTestCase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\FacetTestCase.cs,AssertFloatValuesEquals,The following statement contains a magic number: Assert.AreEqual((float)a.LabelValues[i].Value' (float)b.LabelValues[i].Value' (float)a.LabelValues[i].Value / 1e5);
Magic Number,Lucene.Net.Facet,SlowRAMDirectory,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SlowRAMDirectory.cs,doSleep,The following statement contains a magic number: int sTime = length < 10 ? sleepMillis : (int)(sleepMillis * Math.Log(length));
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,The following statement contains a magic number: i % 2 == 0
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,The following statement contains a magic number: i % 3 == 0
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,The following statement contains a magic number: i % 4 == 0
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,The following statement contains a magic number: i % 5 == 0
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,BeforeClass,The following statement contains a magic number: i < 100
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestAndOrs,The following statement contains a magic number: TopDocs docs = searcher.Search(q' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestAndOrs,The following statement contains a magic number: Assert.AreEqual(5' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: TopDocs docs = searcher.Search(q' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: Assert.AreEqual(25' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: docs = searcher.Search(q2' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: Assert.AreEqual(5' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: docs = searcher.Search(q3' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: Assert.AreEqual(5' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: docs = searcher.Search(q4' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQuery,The following statement contains a magic number: Assert.AreEqual(10' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQueryImplicitDefaultParams,The following statement contains a magic number: TopDocs docs = searcher.Search(q2' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQueryImplicitDefaultParams,The following statement contains a magic number: Assert.AreEqual(5' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQueryImplicitDefaultParams,The following statement contains a magic number: docs = searcher.Search(q4' 100);
Magic Number,Lucene.Net.Facet,TestDrillDownQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillDownQuery.cs,TestQueryImplicitDefaultParams,The following statement contains a magic number: Assert.AreEqual(10' docs.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: DrillSidewaysResult r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(3' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=3 childCount=2\n  2010 (2)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: IList<FacetResult> allResults = r.Facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' allResults.Count);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=3 childCount=2\n  2010 (2)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.Null(r.Facets.GetTopChildren(10' "Publish Date"));
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.Null(r.Facets.GetTopChildren(10' "Foobar"));
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=2 childCount=2\n  2010 (1)\n  2012 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: r = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.Null(r.Facets.GetTopChildren(10' "Publish Date"));
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestBasic,The following statement contains a magic number: Assert.Null(r.Facets.GetTopChildren(10' "Author"));
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestSometimesInvalidDrillDown,The following statement contains a magic number: DrillSidewaysResult r = (new DrillSideways(searcher' config' taxoReader)).Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestSometimesInvalidDrillDown,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=1 childCount=1\n  2010 (1)\n"' r.Facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestSometimesInvalidDrillDown,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' r.Facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestMultipleRequestsPerDim,The following statement contains a magic number: DrillSidewaysResult r = (new DrillSideways(searcher' config' taxoReader)).Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestMultipleRequestsPerDim,The following statement contains a magic number: Assert.AreEqual(3' r.Hits.TotalHits);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestMultipleRequestsPerDim,The following statement contains a magic number: Assert.AreEqual("dim=dim path=[] value=6 childCount=4\n  a (3)\n  b (1)\n  c (1)\n  d (1)\n"' r.Facets.GetTopChildren(10' "dim").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestMultipleRequestsPerDim,The following statement contains a magic number: Assert.AreEqual("dim=dim path=[a] value=3 childCount=3\n  x (1)\n  y (1)\n  z (1)\n"' r.Facets.GetTopChildren(10' "dim"' "a").ToString());
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,randomContentToken,The following statement contains a magic number: d < 0.33
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int numDims = TestUtil.NextInt32(Random' 2' 5);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int numDims = TestUtil.NextInt32(Random' 2' 5);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int numDocs = AtLeast(3000);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int valueCount = 2;
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: valueCount *= 2;
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: Random.Next(5) == 3
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: Random.Next(5) == 3
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: Random.Next(5) == 3
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: Random.Next(5) == 3
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int numDel = TestUtil.NextInt32(Random' 1' (int)(numDocs * 0.05));
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int numIters = AtLeast(10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: string contentToken = Random.Next(30) == 17 ? null : randomContentToken(true);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: string contentToken = Random.Next(30) == 17 ? null : randomContentToken(true);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: int numDrillDown = TestUtil.NextInt32(Random' 1' Math.Min(4' numDims));
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: Random.Next(7) == 6
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestRandom,The following statement contains a magic number: Random.Next(7) == 6
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestEmptyIndex,The following statement contains a magic number: DrillSidewaysResult r = ds.Search(ddq' 10);
Magic Number,Lucene.Net.Facet,TestDrillSideways,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestDrillSideways.cs,TestEmptyIndex,The following statement contains a magic number: r = ds.Search(ddq' null' null' 10' new Sort(new SortField("foo"' SortFieldType.INT32))' false' false);
Magic Number,Lucene.Net.Facet,TestFacetsConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestFacetsConfig.cs,TestPathToStringAndBack,The following statement contains a magic number: int iters = AtLeast(1000);
Magic Number,Lucene.Net.Facet,TestFacetsConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestFacetsConfig.cs,TestPathToStringAndBack,The following statement contains a magic number: int numParts = TestUtil.NextInt32(Random' 1' 6);
Magic Number,Lucene.Net.Facet,TestFacetsConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestFacetsConfig.cs,TestAddSameDocTwice,The following statement contains a magic number: FacetResult res = facets.GetTopChildren(10' "a");
Magic Number,Lucene.Net.Facet,TestFacetsConfig,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestFacetsConfig.cs,TestAddSameDocTwice,The following statement contains a magic number: Assert.AreEqual(2' res.LabelValues[0].Value);
Magic Number,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The following statement contains a magic number: Assert.AreEqual(5' facets.GetSpecificValue("Band"));
Magic Number,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The following statement contains a magic number: Assert.AreEqual("dim=Band path=[] value=5 childCount=2\n  Rock & Pop (4)\n  Punk (1)\n"' facets.GetTopChildren(10' "Band").ToString());
Magic Number,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The following statement contains a magic number: Assert.AreEqual("dim=Band path=[Rock & Pop] value=4 childCount=4\n  The Beatles (1)\n  U2 (1)\n  REM (1)\n  Dave Matthews Band (1)\n"' facets.GetTopChildren(10' "Band"' "Rock & Pop").ToString());
Magic Number,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,AssertCorrectResults,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=3 childCount=3\n  Mark Twain (1)\n  Stephen King (1)\n  Kurt Vonnegut (1)\n"' facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet,TestMultipleIndexFields,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestMultipleIndexFields.cs,PerformSearch,The following statement contains a magic number: FacetsCollector.Search(searcher' new MatchAllDocsQuery()' 10' fc);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: int numDocs = AtLeast(10000);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: doc.Add(new StringField("EvenOdd"' (i % 2 == 0) ? "even" : "odd"' Store.NO));
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: doc.Add(new FacetField("iMod10"' Convert.ToString(i % 10)));
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: RandomSamplingFacetsCollector collectRandomZeroResults = new RandomSamplingFacetsCollector(numDocs / 10' random.NextInt64());
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: int maxNumChildren = 5;
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: RandomSamplingFacetsCollector random10Percent = new RandomSamplingFacetsCollector(numDocs / 10' random.NextInt64());
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: FacetResult random10Result = random10Percent.AmortizeFacetCounts(random10FacetCounts.GetTopChildren(10' "iMod10")' config' searcher);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: FacetResult random100Result = random100FacetCounts.GetTopChildren(10' "iMod10");
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: FacetResult exactResult = exactFacetCounts.GetTopChildren(10' "iMod10");
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: variance += (float)Math.Pow((mu - (int)lav.Value)' 2);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: float targetMu = numDocs / (5.0f * 2.0f);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: float targetMu = numDocs / (5.0f * 2.0f);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: Assert.True(sigma < 200);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: Assert.True(targetMu - 3 * sigma < mu && mu < targetMu + 3 * sigma);
Magic Number,Lucene.Net.Facet,TestRandomSamplingFacetsCollector,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\TestRandomSamplingFacetsCollector.cs,TestRandomSampling,The following statement contains a magic number: Assert.True(targetMu - 3 * sigma < mu && mu < targetMu + 3 * sigma);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: l < 100
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicLong,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new Int64Range("useless"' 7' true' 6' true);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new Int64Range("useless"' 7' true' 6' true);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new Int64Range("useless"' 7' true' 7' false);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new Int64Range("useless"' 7' true' 7' false);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new DoubleRange("useless"' 7.0' true' 6.0' true);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new DoubleRange("useless"' 7.0' true' 6.0' true);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new DoubleRange("useless"' 7.0' true' 7.0' false);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestUselessRange,The following statement contains a magic number: new DoubleRange("useless"' 7.0' true' 7.0' false);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestLongMinMax,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: l < 100
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("0-10"' 0L' true' 10L' true)' new Int64Range("10-20"' 10L' true' 20L' true)' new Int64Range("20-30"' 20L' true' 30L' true)' new Int64Range("30-40"' 30L' true' 40L' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestOverlappedEndStart,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: (l & 3) == 0
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: l < 100
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: DrillSidewaysResult dsr = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual(100' dsr.Hits.TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual("dim=dim path=[] value=100 childCount=2\n  b (75)\n  a (25)\n"' dsr.Facets.GetTopChildren(10' "dim").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' dsr.Facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: dsr = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual(75' dsr.Hits.TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual("dim=dim path=[] value=100 childCount=2\n  b (75)\n  a (25)\n"' dsr.Facets.GetTopChildren(10' "dim").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=16 childCount=5\n  less than 10 (7)\n  less than or equal to 10 (8)\n  over 90 (7)\n  90 or above (8)\n  over 1000 (0)\n"' dsr.Facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: ddq.Add("field"' NumericRangeQuery.NewInt64Range("field"' 0L' 10L' true' true));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: dsr = ds.Search(null' ddq' 10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual(11' dsr.Hits.TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual("dim=dim path=[] value=11 childCount=2\n  b (8)\n  a (3)\n"' dsr.Facets.GetTopChildren(10' "dim").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMixedRangeAndNonRangeTaxonomy,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' dsr.Facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: l < 100
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' fc' new DoubleRange("less than 10"' 0.0' true' 10.0' false)' new DoubleRange("less than or equal to 10"' 0.0' true' 10.0' true)' new DoubleRange("over 90"' 90.0' false' 100.0' false)' new DoubleRange("90 or above"' 90.0' true' 100.0' false)' new DoubleRange("over 1000"' 1000.0' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicDouble,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: l < 100
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Facets facets = new DoubleRangeFacetCounts("field"' new SingleFieldSource("field")' fc' new DoubleRange("less than 10"' 0.0f' true' 10.0f' false)' new DoubleRange("less than or equal to 10"' 0.0f' true' 10.0f' true)' new DoubleRange("over 90"' 90.0f' false' 100.0f' false)' new DoubleRange("90 or above"' 90.0f' true' 100.0f' false)' new DoubleRange("over 1000"' 1000.0f' false' double.PositiveInfinity' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestBasicFloat,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=21 childCount=5\n  less than 10 (10)\n  less than or equal to 10 (11)\n  over 90 (9)\n  90 or above (10)\n  over 1000 (0)\n"' facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: int numDocs = AtLeast(1000);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: int numIters = AtLeast(10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: int numRange = TestUtil.NextInt32(Random' 1' 100);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomLongs,The following statement contains a magic number: Assert.AreEqual(expectedCounts[rangeID]' s.Search(ddq' 10).TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: int numDocs = AtLeast(1000);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: int numIters = AtLeast(10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: int numRange = TestUtil.NextInt32(Random' 1' 5);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomFloats,The following statement contains a magic number: Assert.AreEqual(expectedCounts[rangeID]' s.Search(ddq' 10).TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: int numDocs = AtLeast(1000);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: int numIters = AtLeast(10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: int numRange = TestUtil.NextInt32(Random' 1' 5);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: rangeID > 0 && Random.Next(10) == 7
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestRandomDoubles,The following statement contains a magic number: Assert.AreEqual(expectedCounts[rangeID]' s.Search(ddq' 10).TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: l % 5 == 0
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: l < 100
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Facets facets = new Int64RangeFacetCounts("field"' fc' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestMissingValues,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=16 childCount=5\n  less than 10 (8)\n  less than or equal to 10 (8)\n  over 90 (8)\n  90 or above (8)\n  over 1000 (0)\n"' facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: DoubleRange[] ranges = new DoubleRange[] { new DoubleRange("< 1"' 0.0' true' 1.0' false)' new DoubleRange("< 2"' 0.0' true' 2.0' false)' new DoubleRange("< 5"' 0.0' true' 5.0' false)' new DoubleRange("< 10"' 0.0' true' 10.0' false)' new DoubleRange("< 20"' 0.0' true' 20.0' false)' new DoubleRange("< 50"' 0.0' true' 50.0' false) };
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: DoubleRange[] ranges = new DoubleRange[] { new DoubleRange("< 1"' 0.0' true' 1.0' false)' new DoubleRange("< 2"' 0.0' true' 2.0' false)' new DoubleRange("< 5"' 0.0' true' 5.0' false)' new DoubleRange("< 10"' 0.0' true' 10.0' false)' new DoubleRange("< 20"' 0.0' true' 20.0' false)' new DoubleRange("< 50"' 0.0' true' 50.0' false) };
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: DoubleRange[] ranges = new DoubleRange[] { new DoubleRange("< 1"' 0.0' true' 1.0' false)' new DoubleRange("< 2"' 0.0' true' 2.0' false)' new DoubleRange("< 5"' 0.0' true' 5.0' false)' new DoubleRange("< 10"' 0.0' true' 10.0' false)' new DoubleRange("< 20"' 0.0' true' 20.0' false)' new DoubleRange("< 50"' 0.0' true' 50.0' false) };
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: DoubleRange[] ranges = new DoubleRange[] { new DoubleRange("< 1"' 0.0' true' 1.0' false)' new DoubleRange("< 2"' 0.0' true' 2.0' false)' new DoubleRange("< 5"' 0.0' true' 5.0' false)' new DoubleRange("< 10"' 0.0' true' 10.0' false)' new DoubleRange("< 20"' 0.0' true' 20.0' false)' new DoubleRange("< 50"' 0.0' true' 50.0' false) };
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: DoubleRange[] ranges = new DoubleRange[] { new DoubleRange("< 1"' 0.0' true' 1.0' false)' new DoubleRange("< 2"' 0.0' true' 2.0' false)' new DoubleRange("< 5"' 0.0' true' 5.0' false)' new DoubleRange("< 10"' 0.0' true' 10.0' false)' new DoubleRange("< 20"' 0.0' true' 20.0' false)' new DoubleRange("< 50"' 0.0' true' 50.0' false) };
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=3 childCount=6\n  < 1 (0)\n  < 2 (1)\n  < 5 (3)\n  < 10 (3)\n  < 20 (3)\n  < 50 (3)\n"' facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: Assert.AreEqual(1' s.Search(ddq' 10).TotalHits);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: DrillSidewaysResult dsr = ds.Search(ddq' 10);
Magic Number,Lucene.Net.Facet.Range,TestRangeFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,TestCustomDoublesValueSource,The following statement contains a magic number: Assert.AreEqual("dim=field path=[] value=3 childCount=6\n  < 1 (0)\n  < 2 (1)\n  < 5 (3)\n  < 10 (3)\n  < 20 (3)\n  < 50 (3)\n"' dsr.Facets.GetTopChildren(10' "field").ToString());
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.Range,DrillSidewaysAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Range\TestRangeFacetCounts.cs,BuildFacetsResult,The following statement contains a magic number: byDim["field"] = new Int64RangeFacetCounts("field"' fieldFC' new Int64Range("less than 10"' 0L' true' 10L' false)' new Int64Range("less than or equal to 10"' 0L' true' 10L' true)' new Int64Range("over 90"' 90L' false' 100L' false)' new Int64Range("90 or above"' 90L' true' 100L' false)' new Int64Range("over 1000"' 1000L' false' long.MaxValue' false));
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=a path=[] value=4 childCount=3\n  foo (2)\n  bar (1)\n  zoo (1)\n"' facets.GetTopChildren(10' "a").ToString());
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=b path=[] value=1 childCount=1\n  baz (1)\n"' facets.GetTopChildren(10' "b").ToString());
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSparseFacets,The following statement contains a magic number: IList<FacetResult> results = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSparseFacets,The following statement contains a magic number: Assert.AreEqual(3' results.Count);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSparseFacets,The following statement contains a magic number: Assert.AreEqual("dim=c path=[] value=1 childCount=1\n  baz1 (1)\n"' results[2].ToString());
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSomeSegmentsMissing,The following statement contains a magic number: Assert.AreEqual("dim=a path=[] value=2 childCount=2\n  foo1 (1)\n  foo2 (1)\n"' facets.GetTopChildren(10' "a").ToString());
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestSlowCompositeReaderWrapper,The following statement contains a magic number: Assert.AreEqual("dim=a path=[] value=2 childCount=2\n  foo1 (1)\n  foo2 (1)\n"' facets.GetTopChildren(10' "a").ToString());
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,The following statement contains a magic number: string[] tokens = GetRandomTokens(10);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,The following statement contains a magic number: int numDocs = AtLeast(1000);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,The following statement contains a magic number: int numDims = TestUtil.NextInt32(Random' 1' 7);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,The following statement contains a magic number: int iters = AtLeast(100);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,The following statement contains a magic number: FacetsCollector.Search(searcher' new TermQuery(new Term("content"' searchToken))' 10' fc);
Magic Number,Lucene.Net.Facet.SortedSet,TestSortedSetDocValuesFacets,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\SortedSet\TestSortedSetDocValuesFacets.cs,TestRandom,The following statement contains a magic number: IList<FacetResult> actual = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Dotest,The following statement contains a magic number: Directory[] dirs = new Directory[2];
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Dotest,The following statement contains a magic number: ThreadClass[] addThreads = new ThreadClass[4];
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestBig,The following statement contains a magic number: Dotest(200' 10000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestBig,The following statement contains a magic number: Dotest(200' 10000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestBig,The following statement contains a magic number: Dotest(1000' 20000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestBig,The following statement contains a magic number: Dotest(1000' 20000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestBig,The following statement contains a magic number: Dotest(400000' 1000000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestBig,The following statement contains a magic number: Dotest(400000' 1000000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestMedium,The following statement contains a magic number: int numTests = AtLeast(3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestMedium,The following statement contains a magic number: Dotest(TestUtil.NextInt32(random' 2' 100)' TestUtil.NextInt32(random' 100' 1000));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestMedium,The following statement contains a magic number: Dotest(TestUtil.NextInt32(random' 2' 100)' TestUtil.NextInt32(random' 100' 1000));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestMedium,The following statement contains a magic number: Dotest(TestUtil.NextInt32(random' 2' 100)' TestUtil.NextInt32(random' 100' 1000));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestMedium,The following statement contains a magic number: Dotest(TestUtil.NextInt32(random' 2' 100)' TestUtil.NextInt32(random' 100' 1000));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestConcurrency,The following statement contains a magic number: int numCategories = AtLeast(10000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestAddTaxonomy,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,TestConcurrency,The following statement contains a magic number: Assert.AreEqual(numCategories + 2' dtr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: int numCats = random.Next(3) + 1;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: FacetLabel cp = new FacetLabel(Convert.ToString(value / 1000)' Convert.ToString(value / 10000)' Convert.ToString(value / 100000)' Convert.ToString(value));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: FacetLabel cp = new FacetLabel(Convert.ToString(value / 1000)' Convert.ToString(value / 10000)' Convert.ToString(value / 100000)' Convert.ToString(value));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: FacetLabel cp = new FacetLabel(Convert.ToString(value / 1000)' Convert.ToString(value / 10000)' Convert.ToString(value / 100000)' Convert.ToString(value));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: string l2 = FacetsConfig.PathToString(cp.Components' 2);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: string l3 = FacetsConfig.PathToString(cp.Components' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestAddTaxonomy.cs,Run,The following statement contains a magic number: string l4 = FacetsConfig.PathToString(cp.Components' 4);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewCategory,The following statement contains a magic number: string l1 = "l1." + r.Next(10);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewCategory,The following statement contains a magic number: string l2 = "l2." + r.Next(30);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewCategory,The following statement contains a magic number: string l3 = "l3." + r.Next(100);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewTaxoWriterCache,The following statement contains a magic number: return new Cl2oTaxonomyWriterCache(1024' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewTaxoWriterCache,The following statement contains a magic number: return new Cl2oTaxonomyWriterCache(1024' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewTaxoWriterCache,The following statement contains a magic number: return new Cl2oTaxonomyWriterCache(1024' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,NewTaxoWriterCache,The following statement contains a magic number: d < 0.7
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,TestConcurrency,The following statement contains a magic number: AtomicInt32 numDocs = new AtomicInt32(AtLeast(10000));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,TestConcurrency,The following statement contains a magic number: ThreadClass[] indexThreads = new ThreadClass[AtLeast(4)];
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestConcurrentFacetedIndexing,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestConcurrentFacetedIndexing.cs,TestConcurrency,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,doTestReadRecreatedTaxonomy,The following statement contains a magic number: int n = 10;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedAndRefCount,The following statement contains a magic number: Assert.AreEqual(2' taxoReader.RefCount' "wrong refCount");
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedManySegments,The following statement contains a magic number: int numRounds = Random.Next(10) + 10;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedManySegments,The following statement contains a magic number: int numRounds = Random.Next(10) + 10;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedManySegments,The following statement contains a magic number: int numCats = Random.Next(4) + 1;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedMergedSegment,The following statement contains a magic number: Assert.AreEqual(2' reader.Count);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedMergedSegment,The following statement contains a magic number: Assert.AreEqual(2' reader.ParallelTaxonomyArrays.Parents.Length);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedNoChangesButSegmentMerges,The following statement contains a magic number: Assert.AreEqual(2' reader.Count);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedNoChangesButSegmentMerges,The following statement contains a magic number: Assert.AreEqual(2' reader.ParallelTaxonomyArrays.Parents.Length);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedNoChangesButSegmentMerges,The following statement contains a magic number: Assert.AreEqual(2' reader.Count);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedNoChangesButSegmentMerges,The following statement contains a magic number: Assert.AreEqual(2' reader.ParallelTaxonomyArrays.Parents.Length);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedReuse,The following statement contains a magic number: Assert.AreEqual(2' r2.GetOrdinal(cp_b));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedReuse,The following statement contains a magic number: Assert.AreEqual(cp_b' r2.GetPath(2));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestOpenIfChangedReuse,The following statement contains a magic number: Assert.Null(r1.GetPath(2));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestGetChildren,The following statement contains a magic number: int numCategories = AtLeast(10);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestGetChildren,The following statement contains a magic number: it = taxoReader.GetChildren(-2);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestGetChildren,The following statement contains a magic number: Assert.AreEqual(2' path.Length);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,TestGetChildren,The following statement contains a magic number: i < 2
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,DirectoryTaxonomyWriterAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyReader.cs,CreateIndexWriterConfig,The following statement contains a magic number: lmp.MergeFactor = 2;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestCommitUserData,The following statement contains a magic number: Assert.AreEqual(3' r.NumDocs' "2 categories plus root should have been committed to the underlying directory");
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestRecreateAndRefresh,The following statement contains a magic number: Assert.AreEqual(2' Convert.ToInt32(taxoReader.CommitUserData[DirectoryTaxonomyWriter.INDEX_EPOCH]));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: int ncats = AtLeast(100000);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: int range = ncats * 3;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: cache = new Cl2oTaxonomyWriterCache(1024' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: cache = new Cl2oTaxonomyWriterCache(1024' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: cache = new Cl2oTaxonomyWriterCache(1024' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: d < 0.7
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestConcurrency,The following statement contains a magic number: ThreadClass[] addThreads = new ThreadClass[AtLeast(4)];
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestReplaceTaxonomy,The following statement contains a magic number: Assert.AreEqual(2' taxoWriter.Count' "no categories should have been added");
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestReplaceTaxonomy,The following statement contains a magic number: Assert.AreEqual(2' newOrdB' "ordinal should have been 2 since only one category was added by replaceTaxonomy");
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The following statement contains a magic number: DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir' OpenMode.CREATE' new Cl2oTaxonomyWriterCache(2' 1f' 1));
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The following statement contains a magic number: int len = FacetLabel.MAX_CATEGORY_PATH_LENGTH - 4;
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The following statement contains a magic number: string s = TestUtil.RandomSimpleString(Random' 1' 10);
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The following statement contains a magic number: i < 3
Magic Number,Lucene.Net.Facet.Taxonomy.Directory,TestDirectoryTaxonomyWriter,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\Directory\TestDirectoryTaxonomyWriter.cs,TestHugeLabel,The following statement contains a magic number: Assert.AreEqual(1' searcher.Search(ddq' 10).TotalHits);
Magic Number,Lucene.Net.Facet.Taxonomy,TestCachedOrdinalsReader,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestCachedOrdinalsReader.cs,TestWithThreads,The following statement contains a magic number: ThreadClass[] threads = new ThreadClass[3];
Magic Number,Lucene.Net.Facet.Taxonomy,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestCachedOrdinalsReader.cs,Run,The following statement contains a magic number: Thread.Sleep(Random.Next(20));
Magic Number,Lucene.Net.Facet.Taxonomy,ThreadAnonymousInnerClassHelper,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestCachedOrdinalsReader.cs,Run,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual(2' (new FacetLabel("hello"' "world")).Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestGetComponent,The following statement contains a magic number: string[] components = new string[AtLeast(10)];
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestSubPath,The following statement contains a magic number: Assert.AreEqual(p.Length' 3);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestSubPath,The following statement contains a magic number: FacetLabel p1 = p.Subpath(2);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestSubPath,The following statement contains a magic number: Assert.AreEqual(2' p1.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestSubPath,The following statement contains a magic number: int[] lengths = new int[] { 3' -1' 4 };
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestSubPath,The following statement contains a magic number: int[] lengths = new int[] { 3' -1' 4 };
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestSubPath,The following statement contains a magic number: Assert.AreEqual(3' p1.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEquals,The following statement contains a magic number: Assert.False((new FacetLabel()).Equals(Convert.ToInt32(3)));
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestArrayConstructor,The following statement contains a magic number: Assert.AreEqual(3' p.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The following statement contains a magic number: new Int32AssociationFacetField(17' "dim"' components);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The following statement contains a magic number: new SingleAssociationFacetField(17.0f' "dim"' components);
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The following statement contains a magic number: new Int32AssociationFacetField(17' null' new string[] { "abc" });
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The following statement contains a magic number: new Int32AssociationFacetField(17' ""' new string[] { "abc" });
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The following statement contains a magic number: new SingleAssociationFacetField(17.0f' null' new string[] { "abc" });
Magic Number,Lucene.Net.Facet.Taxonomy,TestFacetLabel,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestFacetLabel.cs,TestEmptyNullComponents,The following statement contains a magic number: new SingleAssociationFacetField(17.0f' ""' new string[] { "abc" });
Magic Number,Lucene.Net.Facet.Taxonomy,TestLRUHashMap,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestLRUHashMap.cs,TestLru,The following statement contains a magic number: LRUHashMap<string' string> lru = new LRUHashMap<string' string>(3);
Magic Number,Lucene.Net.Facet.Taxonomy,TestLRUHashMap,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestLRUHashMap.cs,TestLru,The following statement contains a magic number: Assert.AreEqual(2' lru.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestLRUHashMap,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestLRUHashMap.cs,TestLru,The following statement contains a magic number: Assert.AreEqual(3' lru.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestLRUHashMap,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestLRUHashMap.cs,TestLru,The following statement contains a magic number: Assert.AreEqual(3' lru.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestLRUHashMap,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestLRUHashMap.cs,TestLru,The following statement contains a magic number: Assert.AreEqual(3' lru.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestLRUHashMap,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestLRUHashMap.cs,TestLru,The following statement contains a magic number: Assert.AreEqual(3' lru.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestNrt,The following statement contains a magic number: iwc.SetMaxBufferedDocs(Math.Max(500' iwc.MaxBufferedDocs));
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestNrt,The following statement contains a magic number: tmp.FloorSegmentMB = .001;
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestNrt,The following statement contains a magic number: int ordLimit = TEST_NIGHTLY ? 100000 : 6000;
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestNrt,The following statement contains a magic number: int ordLimit = TEST_NIGHTLY ? 100000 : 6000;
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestNrt,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestDirectory,The following statement contains a magic number: int ordLimit = TEST_NIGHTLY ? 100000 : 6000;
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestDirectory,The following statement contains a magic number: int ordLimit = TEST_NIGHTLY ? 100000 : 6000;
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestDirectory,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "field");
Magic Number,Lucene.Net.Facet.Taxonomy,TestSearcherTaxonomyManager,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,TestReplaceTaxonomyDirectory,The following statement contains a magic number: Assert.AreEqual(3' pair.TaxonomyReader.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,IndexerThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,Run,The following statement contains a magic number: int numPaths = TestUtil.NextInt32(Random' 1' 5);
Magic Number,Lucene.Net.Facet.Taxonomy,IndexerThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,Run,The following statement contains a magic number: paths.Count > 0 && Random.Next(5) != 4
Magic Number,Lucene.Net.Facet.Taxonomy,IndexerThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,Run,The following statement contains a magic number: paths.Count > 0 && Random.Next(5) != 4
Magic Number,Lucene.Net.Facet.Taxonomy,IndexerThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestSearcherTaxonomyManager.cs,Run,The following statement contains a magic number: mgr != null && Random.NextDouble() < 0.02
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(2' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(2' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(2' tw.AddCategory(new FacetLabel("b")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(3' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(3' tw.AddCategory(new FacetLabel("a"' "c")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(4' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(3' tw.AddCategory(new FacetLabel("a"' "c")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(4' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(5' tw.AddCategory(new FacetLabel("d"' "e")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(6' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(4' tw.AddCategory(new FacetLabel("d")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(7' tw.AddCategory(new FacetLabel("b"' "d"' "e")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(8' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(8' tw.AddCategory(new FacetLabel("b"' "d"' "f")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterSimpler,The following statement contains a magic number: Assert.AreEqual(9' tw.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(3' tr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(3' ca.Siblings.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(3' ca.Children.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.True(Arrays.Equals(new int[] { 1' 2' -1 }' ca.Children));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(3' tr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(3' ca.Siblings.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(3' ca.Children.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(5' tr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(5' ca.Siblings.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.AreEqual(5' ca.Children.Length);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.True(Arrays.Equals(new int[] { 4' 3' -1' -1' -1 }' ca.Children));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.True(Arrays.Equals(new int[] { 4' 3' -1' -1' -1 }' ca.Children));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestChildrenArraysGrowth,The following statement contains a magic number: Assert.True(Arrays.Equals(new int[] { -1' -1' -1' 2' 1 }' ca.Siblings));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestTaxonomyReaderRefreshRaces,The following statement contains a magic number: int numCategories = AtLeast(800);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestTaxonomyReaderRefreshRaces,The following statement contains a magic number: int numRetries = AtLeast(50);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestSeparateReaderAndWriter,The following statement contains a magic number: Assert.AreEqual(2' tr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestSeparateReaderAndWriter,The following statement contains a magic number: int dawkins = 2;
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestSeparateReaderAndWriter,The following statement contains a magic number: Assert.AreEqual(3' tr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestSeparateReaderAndWriter2,The following statement contains a magic number: Assert.AreEqual(2' tr.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterLock,The following statement contains a magic number: Assert.AreEqual(2' tr.GetOrdinal(new FacetLabel("hi"' "there")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestWriterLock,The following statement contains a magic number: Assert.AreEqual(3' tr.GetOrdinal(new FacetLabel("hey")));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyCombined,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyCombined.cs,TestNrt,The following statement contains a magic number: Assert.AreEqual(2' newReader.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: doc.Add(new Int32AssociationFacetField(2' "int"' "a"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: doc.Add(new SingleAssociationFacetField(0.5f' "float"' "a"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: doc.Add(new Int32AssociationFacetField(3' "int"' "b"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: doc.Add(new SingleAssociationFacetField(0.2f' "float"' "b"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: i % 2 == 0
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: i % 11 != 0
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,BeforeClass,The following statement contains a magic number: i < 110
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociation,The following statement contains a magic number: Assert.AreEqual("dim=int path=[] value=-1 childCount=2\n  a (200)\n  b (150)\n"' facets.GetTopChildren(10' "int").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociation,The following statement contains a magic number: Assert.AreEqual(200' (int)facets.GetSpecificValue("int"' "a")' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociation,The following statement contains a magic number: Assert.AreEqual(150' (int)facets.GetSpecificValue("int"' "b")' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestFloatSumAssociation,The following statement contains a magic number: Assert.AreEqual("dim=float path=[] value=-1.0 childCount=2\n  a (50.0)\n  b (9.999995)\n"' facets.GetTopChildren(10' "float").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestFloatSumAssociation,The following statement contains a magic number: Assert.AreEqual(50f' (float)facets.GetSpecificValue("float"' "a")' 0.00001' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestFloatSumAssociation,The following statement contains a magic number: Assert.AreEqual(50f' (float)facets.GetSpecificValue("float"' "a")' 0.00001' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestFloatSumAssociation,The following statement contains a magic number: Assert.AreEqual(10f' (float)facets.GetSpecificValue("float"' "b")' 0.00001' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestFloatSumAssociation,The following statement contains a magic number: Assert.AreEqual(10f' (float)facets.GetSpecificValue("float"' "b")' 0.00001' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntAndFloatAssocation,The following statement contains a magic number: Assert.AreEqual(50f' (float)facets.GetSpecificValue("float"' "a")' 0.00001' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntAndFloatAssocation,The following statement contains a magic number: Assert.AreEqual(50f' (float)facets.GetSpecificValue("float"' "a")' 0.00001' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntAndFloatAssocation,The following statement contains a magic number: Assert.AreEqual(10f' (float)facets.GetSpecificValue("float"' "b")' 0.00001' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntAndFloatAssocation,The following statement contains a magic number: Assert.AreEqual(10f' (float)facets.GetSpecificValue("float"' "b")' 0.00001' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntAndFloatAssocation,The following statement contains a magic number: Assert.AreEqual(200' (int)facets.GetSpecificValue("int"' "a")' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntAndFloatAssocation,The following statement contains a magic number: Assert.AreEqual(150' (int)facets.GetSpecificValue("int"' "b")' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestWrongIndexFieldName,The following statement contains a magic number: facets.GetTopChildren(10' "float");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestMixedTypesInSameIndexField,The following statement contains a magic number: doc.Add(new Int32AssociationFacetField(14' "a"' "x"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestMixedTypesInSameIndexField,The following statement contains a magic number: doc.Add(new SingleAssociationFacetField(55.0f' "b"' "y"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestNoHierarchy,The following statement contains a magic number: doc.Add(new Int32AssociationFacetField(14' "a"' "x"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestRequireDimCount,The following statement contains a magic number: doc.Add(new Int32AssociationFacetField(14' "a"' "x"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociationDrillDown,The following statement contains a magic number: Assert.AreEqual("dim=int path=[] value=-1 childCount=2\n  b (150)\n  a (100)\n"' facets.GetTopChildren(10' "int").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociationDrillDown,The following statement contains a magic number: Assert.AreEqual(100' (int)facets.GetSpecificValue("int"' "a")' "Wrong count for category 'a'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetAssociations,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetAssociations.cs,TestIntSumAssociationDrillDown,The following statement contains a magic number: Assert.AreEqual(150' (int)facets.GetSpecificValue("int"' "b")' "Wrong count for category 'b'!");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Publish Date path=[] value=5 childCount=3\n  2010 (2)\n  2012 (2)\n  1999 (1)\n"' facets.GetTopChildren(10' "Publish Date").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=5 childCount=4\n  Lisa (2)\n  Bob (1)\n  Susan (1)\n  Frank (1)\n"' facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=2 childCount=2\n  Bob (1)\n  Lisa (1)\n"' facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestBasic,The following statement contains a magic number: Assert.Null(facets.GetTopChildren(10' "Non exitent dim"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSparseFacets,The following statement contains a magic number: IList<FacetResult> results = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSparseFacets,The following statement contains a magic number: Assert.AreEqual(3' results.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSparseFacets,The following statement contains a magic number: Assert.AreEqual("dim=c path=[] value=1 childCount=1\n  baz1 (1)\n"' results[2].ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestWrongIndexFieldName,The following statement contains a magic number: IList<FacetResult> results = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestWrongIndexFieldName,The following statement contains a magic number: facets.GetTopChildren(10' "a");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestMultiValuedHierarchy,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "a");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestLabelWithDelimiter,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "dim");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRequireDimCount,The following statement contains a magic number: Assert.AreEqual(1' facets.GetTopChildren(10' "dim").Value);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRequireDimCount,The following statement contains a magic number: Assert.AreEqual(1' facets.GetTopChildren(10' "dim2").Value);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRequireDimCount,The following statement contains a magic number: Assert.AreEqual(1' facets.GetTopChildren(10' "dim3").Value);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestManyFacetsInOneDocument,The following statement contains a magic number: int numLabels = TestUtil.NextInt32(Random' 40000' 100000);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestManyFacetsInOneDocument,The following statement contains a magic number: int numLabels = TestUtil.NextInt32(Random' 40000' 100000);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSeparateIndexedFields,The following statement contains a magic number: Assert.AreEqual(r.MaxDoc' (int)facets1.GetTopChildren(10' "a").Value);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSeparateIndexedFields,The following statement contains a magic number: Assert.AreEqual(r.MaxDoc' (int)facets2.GetTopChildren(10' "b").Value);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestCountRoot,The following statement contains a magic number: facets.GetAllDims(10)
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestGetFacetResultsTwice,The following statement contains a magic number: IList<FacetResult> res1 = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestGetFacetResultsTwice,The following statement contains a magic number: IList<FacetResult> res2 = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestChildCount,The following statement contains a magic number: i < 10
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestChildCount,The following statement contains a magic number: Assert.AreEqual(10' facets.GetTopChildren(2' "a").ChildCount);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestChildCount,The following statement contains a magic number: Assert.AreEqual(10' facets.GetTopChildren(2' "a").ChildCount);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,indexTwoDocs,The following statement contains a magic number: i < 2
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSegmentsWithoutCategoriesOrResults,The following statement contains a magic number: FacetResult result = facets.GetTopChildren(10' "A");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSegmentsWithoutCategoriesOrResults,The following statement contains a magic number: Assert.AreEqual(2' result.LabelValues.Length' "wrong number of children");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestSegmentsWithoutCategoriesOrResults,The following statement contains a magic number: Assert.AreEqual(2' (int)labelValue.Value' "wrong weight for child " + labelValue.Label);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,The following statement contains a magic number: string[] tokens = GetRandomTokens(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,The following statement contains a magic number: int numDocs = AtLeast(1000);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,The following statement contains a magic number: int numDims = TestUtil.NextInt32(Random' 1' 7);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,The following statement contains a magic number: int iters = AtLeast(100);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,The following statement contains a magic number: FacetsCollector.Search(searcher' new TermQuery(new Term("content"' searchToken))' 10' fc);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts.cs,TestRandom,The following statement contains a magic number: IList<FacetResult> actual = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,RandomCategories,The following statement contains a magic number: int numFacetsA = random.Next(3) + 1;
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,RandomCategories,The following statement contains a magic number: int numFacetsB = random.Next(2) + 1;
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,IndexDocsNoFacets,The following statement contains a magic number: int numDocs = AtLeast(2);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,IndexDocsWithFacetsNoTerms,The following statement contains a magic number: int numDocs = AtLeast(random' 2);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,IndexDocsWithFacetsAndTerms,The following statement contains a magic number: int numDocs = AtLeast(random' 2);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetCounts2,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetCounts2.cs,IndexDocsWithFacetsAndSomeTerms,The following statement contains a magic number: int numDocs = AtLeast(random' 2);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The following statement contains a magic number: doc.Add(new Int32Field("num"' 10' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The following statement contains a magic number: doc.Add(new Int32Field("num"' 20' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The following statement contains a magic number: doc.Add(new Int32Field("num"' 30' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The following statement contains a magic number: doc.Add(new Int32Field("num"' 40' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The following statement contains a magic number: doc.Add(new Int32Field("num"' 45' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestBasic,The following statement contains a magic number: Assert.AreEqual("dim=Author path=[] value=145.0 childCount=4\n  Lisa (50.0)\n  Frank (45.0)\n  Susan (40.0)\n  Bob (10.0)\n"' facets.GetTopChildren(10' "Author").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The following statement contains a magic number: doc.Add(new Int32Field("num"' 10' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The following statement contains a magic number: doc.Add(new Int32Field("num"' 20' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The following statement contains a magic number: doc.Add(new Int32Field("num"' 30' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The following statement contains a magic number: IList<FacetResult> results = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The following statement contains a magic number: Assert.AreEqual(3' results.Count);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSparseFacets,The following statement contains a magic number: Assert.AreEqual("dim=c path=[] value=30.0 childCount=1\n  baz1 (30.0)\n"' results[2].ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWrongIndexFieldName,The following statement contains a magic number: doc.Add(new Int32Field("num"' 10' Field.Store.NO));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWrongIndexFieldName,The following statement contains a magic number: IList<FacetResult> results = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWrongIndexFieldName,The following statement contains a magic number: facets.GetTopChildren(10' "a");
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSumScoreAggregator,The following statement contains a magic number: csq.Boost = 2.0f;
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestSumScoreAggregator,The following statement contains a magic number: TopDocs td = FacetsCollector.Search(NewSearcher(r)' csq' 10' fc);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestNoScore,The following statement contains a magic number: doc.Add(new FacetField("a"' Convert.ToString(i % 2)));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestNoScore,The following statement contains a magic number: i < 4
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestNoScore,The following statement contains a magic number: Assert.AreEqual("dim=a path=[] value=10.0 childCount=2\n  1 (6.0)\n  0 (4.0)\n"' facets.GetTopChildren(10' "a").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWithScore,The following statement contains a magic number: doc.Add(new FacetField("a"' Convert.ToString(i % 2)));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWithScore,The following statement contains a magic number: i < 4
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWithScore,The following statement contains a magic number: FacetsCollector.Search(NewSearcher(r)' q' 10' fc);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestWithScore,The following statement contains a magic number: Assert.AreEqual("dim=a path=[] value=10.0 childCount=2\n  1 (6.0)\n  0 (4.0)\n"' facets.GetTopChildren(10' "a").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRollupValues,The following statement contains a magic number: doc.Add(new FacetField("a"' Convert.ToString(i % 2)' "1"));
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRollupValues,The following statement contains a magic number: i < 4
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRollupValues,The following statement contains a magic number: Assert.AreEqual("dim=a path=[] value=10.0 childCount=2\n  1 (6.0)\n  0 (4.0)\n"' facets.GetTopChildren(10' "a").ToString());
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestCountAndSumScore,The following statement contains a magic number: FacetsCollector.Search(NewSearcher(r)' new MatchAllDocsQuery()' 10' fc);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestCountAndSumScore,The following statement contains a magic number: Assert.AreEqual(r.MaxDoc' (int)facets1.GetTopChildren(10' "a").Value);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestCountAndSumScore,The following statement contains a magic number: Assert.AreEqual(r.MaxDoc' (double)facets2.GetTopChildren(10' "b").Value' 1E-10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestCountAndSumScore,The following statement contains a magic number: Assert.AreEqual(r.MaxDoc' (double)facets2.GetTopChildren(10' "b").Value' 1E-10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The following statement contains a magic number: string[] tokens = GetRandomTokens(10);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The following statement contains a magic number: int numDocs = AtLeast(1000);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The following statement contains a magic number: int numDims = TestUtil.NextInt32(Random' 1' 7);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The following statement contains a magic number: int iters = AtLeast(100);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The following statement contains a magic number: FacetsCollector.Search(searcher' new TermQuery(new Term("content"' searchToken))' 10' fc);
Magic Number,Lucene.Net.Facet.Taxonomy,TestTaxonomyFacetSumValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\TestTaxonomyFacetSumValueSource.cs,TestRandom,The following statement contains a magic number: IList<FacetResult> actual = facets.GetAllDims(10);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The following statement contains a magic number: const int n = 100 * 1000;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The following statement contains a magic number: const int n = 100 * 1000;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The following statement contains a magic number: byte[] buffer = new byte[50];
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The following statement contains a magic number: int size = 1 + Random.Next(50);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The following statement contains a magic number: int size = 1 + Random.Next(50);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The following statement contains a magic number: int size = 1 + Random.Next(50);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: CompactLabelToOrdinal compact = new CompactLabelToOrdinal(2000000' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: CompactLabelToOrdinal compact = new CompactLabelToOrdinal(2000000' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: CompactLabelToOrdinal compact = new CompactLabelToOrdinal(2000000' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: int n = AtLeast(10 * 1000);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: int n = AtLeast(10 * 1000);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: const int numUniqueValues = 50 * 1000;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: const int numUniqueValues = 50 * 1000;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: byte[] buffer = new byte[50];
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: int flushInterval = 10;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: compact = CompactLabelToOrdinal.Open(f' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: compact = CompactLabelToOrdinal.Open(f' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: flushInterval *= 10;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2O,The following statement contains a magic number: flushInterval < (n / 10)
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: CompactLabelToOrdinal compact = new CompactLabelToOrdinal(200' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: CompactLabelToOrdinal compact = new CompactLabelToOrdinal(200' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: CompactLabelToOrdinal compact = new CompactLabelToOrdinal(200' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: int n = 50;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: string[] uniqueValues = new string[]              {                  @"�"'                  @"�r�G��F�\u0382�7\u0019�h�\u0015���#\u001d3\r{��q�_���Ԃ������"'                  "foo bar one"'                  new string(new char[] { (char)65533' (char)65533' (char)65' (char)65533' (char)45' (char)106' (char)40' (char)643' (char)65533' (char)11' (char)65533' (char)88' (char)65533' (char)78' (char)126' (char)56' (char)12' (char)71 })'                  "foo bar two"'                  "foo bar three"'                  "foo bar four"'                  "foo bar five"'                  "foo bar six"'                  "foo bar seven"'                  "foo bar eight"'                  "foo bar nine"'                  "foo bar ten"'                  "foo/bar/one"'                  "foo/bar/two"'                  "foo/bar/three"'                  "foo/bar/four"'                  "foo/bar/five"'                  "foo/bar/six"'                  "foo/bar/seven"'                  "foo/bar/eight"'                  "foo/bar/nine"'                  "foo/bar/ten"'                  ""              };
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: int flushInterval = 10;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: compact = CompactLabelToOrdinal.Open(f' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: compact = CompactLabelToOrdinal.Open(f' 0.15f' 3);
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: flushInterval *= 10;
Magic Number,Lucene.Net.Facet.Taxonomy.WriterCache,TestCompactLabelToOrdinal,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCompactLabelToOrdinal.cs,TestL2OBasic,The following statement contains a magic number: flushInterval < (n / 10)
Duplicate Code,Lucene.Net.Facet.Taxonomy.WriterCache,TestCharBlockArray,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Facet\Taxonomy\WriterCache\TestCharBlockArray.cs,TestArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((17' 41)' (31' 55))
