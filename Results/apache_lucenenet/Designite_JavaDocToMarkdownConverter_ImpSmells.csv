Implementation smell,Namespace,Class,File,Method,Description
Long Method,JavaDocToMarkdownConverter,DocConverter,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\DocConverter.cs,GetOutputDirectory,The method has 116 lines of code.
Complex Method,JavaDocToMarkdownConverter,DocConverter,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\DocConverter.cs,GetOutputDirectory,Cyclomatic complexity of the method is 51
Long Statement,JavaDocToMarkdownConverter.Formatters,CodeLinkReplacer,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\Formatters\CodeLinkReplacer.cs,HasLinkText,The length of the statement  "                        //the docfx method links require fully qualified types like System_Collections_Generic_IEnumerable_Lucene_Net_Index_IIndexableField " is 131.
Long Statement,JavaDocToMarkdownConverter.Formatters,NamedAnchorLinkReplacer,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\Formatters\NamedAnchorLinkReplacer.cs,Replace,The length of the statement  "            html = NamedAnchorLink.Replace(html' m => $"[{m.Groups[1].Value}](#{m.Groups[2].Value.ToLowerInvariant().Replace("_"' "-")})"); " is 127.
Long Statement,JavaDocToMarkdownConverter,Program,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\Program.cs,Main,The length of the statement  "            //new DocConverter().ConvertDoc(@"F:\Projects\_Test\lucene-solr-4.8.0\lucene\demo\src\java\overview.html"' @"F:\Projects\lucenenet\"); " is 134.
Long Statement,JavaDocToMarkdownConverter,Program,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\Program.cs,Usage,The length of the statement  "            Console.WriteLine(@"   LUCENE DIRECTORY: The root directory of the lucene project to convert (excluding SOLR). Example: F:\lucene-solr-4.8.0\lucene\"); " is 151.
Magic Number,JavaDocToMarkdownConverter.Formatters,NamedAnchorLinkReplacer,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\Formatters\NamedAnchorLinkReplacer.cs,Replace,The following statement contains a magic number: html = NamedAnchorLink.Replace(html' m => $"[{m.Groups[1].Value}](#{m.Groups[2].Value.ToLowerInvariant().Replace("_"' "-")})");
Magic Number,JavaDocToMarkdownConverter,Program,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\Program.cs,Main,The following statement contains a magic number: args == null || args.Length < 2
Magic Number,JavaDocToMarkdownConverter,StringExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\StringExtensions.cs,CorrectRepoCRef,The following statement contains a magic number: temp = project + "/" + string.Join("/"' segments.Skip(5).ToArray());
Magic Number,JavaDocToMarkdownConverter,StringExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\StringExtensions.cs,CorrectRepoCRef,The following statement contains a magic number: packageToProjectName.TryGetValue(segments[3] + "." + segments[4]' out project)
Magic Number,JavaDocToMarkdownConverter,StringExtensions,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\StringExtensions.cs,CorrectRepoCRef,The following statement contains a magic number: packageToProjectName.TryGetValue(segments[3] + "." + segments[4]' out project)
Missing Default,JavaDocToMarkdownConverter,DocConverter,D:\research\architectureSmells\repos\apache_lucenenet\src\dotnet\tools\JavaDocToMarkdownConverter\JavaDocToMarkdownConverter\DocConverter.cs,GetOutputDirectory,The following switch statement is missing a default case: switch (lastSegment.ToLower())                  {                      case "stempel":                          if (segment.Equals("analysis")) continue;                          if (segment.Equals("egothor")) segment = "Egothor.Stemmer";                          if (segment.Equals("stemmer")) continue;                          break;                      case "kuromoji":                          if (segment.Equals("analysis") || segment.Equals("ja")) continue;                          break;                      case "phonetic":                          if (segment.Equals("analysis") || segment.Equals("phonetic")) continue;                          break;                      case "smartcn":                          if (segment.Equals("analysis") || segment.Equals("cn") || segment.Equals("smart")) continue;                          break;                      case "benchmark":                          if (segment.Equals("benchmark")) continue;                          break;                      case "classification":                          if (segment.Equals("classification")) continue;                          break;                      case "codecs":                          if (segment.Equals("codecs")) continue;                          break;                      case "demo":                          if (segment.Equals("demo")) continue;                          break;                      case "expressions":                          if (segment.Equals("expressions")) continue;                          break;                      case "facet":                          if (segment.Equals("facet")) continue;                          break;                      case "grouping":                          if (segment.Equals("search") || segment.Equals("grouping")) continue;                          break;                      case "highlighter":                          if (segment.Equals("search")) continue;                          break;                      case "join":                          if (segment.Equals("search") || segment.Equals("join")) continue;                          break;                      case "memory":                          if (segment.Equals("index") || segment.Equals("memory")) continue;                          break;                      case "queries":                          if (segment.Equals("queries")) continue;                          if (segment.Equals("valuesource")) segment = "ValueSources";                          break;                      case "queryparser":                          if (segment.Equals("queryparser")) continue;                          break;                      case "replicator":                          if (segment.Equals("replicator")) continue;                          break;                      case "sandbox":                          if (segment.Equals("sandbox")) continue;                          break;                      case "spatial":                          if (segment.Equals("spatial")) continue;                          break;                      case "suggest":                          if (segment.Equals("search")) continue;                          break;                  }
