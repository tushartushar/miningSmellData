Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Lucene.Net.Replicator.Http,ReplicationService,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\ReplicationService.cs,Perform,Cyclomatic complexity of the method is 8
Long Parameter List,Lucene.Net.Replicator,ReplicationThread,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\ReplicationClient.cs,ReplicationThread,The method has 5 parameters. Parameters: intervalMillis' threadName' doUpdate' handleException' lock
Long Identifier,Lucene.Net.Replicator,LocalReplicator,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\LocalReplicator.cs,,The length of the parameter DEFAULT_SESSION_EXPIRATION_THRESHOLD is 36.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,ThrowKnownError,The length of the statement  "                //.NET Note: Bridging from Async to Sync' this is not ideal and we could consider changing the interface to be Async or provide Async overloads " is 143.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,ThrowKnownError,The length of the statement  "                throw new HttpRequestException(string.Format("Failed to read exception object: {0} {1}"' response.StatusCode' response.ReasonPhrase)' e); " is 137.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,ThrowKnownError,The length of the statement  "            throw new HttpRequestException(string.Format("unknown exception: {0} {1}"' response.StatusCode' response.ReasonPhrase)' exception); " is 131.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,ExecutePost,The length of the statement  "            req.Content = new StringContent(JToken.FromObject(entity' JsonSerializer.Create(ReplicationService.JSON_SERIALIZER_SETTINGS)) " is 125.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,ExecutePost,The length of the statement  "            //.NET Note: Bridging from Async to Sync' this is not ideal and we could consider changing the interface to be Async or provide Async overloads " is 143.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,ExecuteGet,The length of the statement  "            //.NET Note: Bridging from Async to Sync' this is not ideal and we could consider changing the interface to be Async or provide Async overloads " is 143.
Long Statement,Lucene.Net.Replicator.Http,HttpClientBase,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpClientBase.cs,DoAction,The length of the statement  "                //JAVA: This also means that right now this overload does nothing more than support the signature given by the Java ver. " is 120.
Long Statement,Lucene.Net.Replicator.Http,HttpReplicator,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\HttpReplicator.cs,Release,The length of the statement  "            HttpResponseMessage response = ExecuteGet(ReplicationService.ReplicationAction.RELEASE.ToString()' ReplicationService.REPLICATE_SESSION_ID_PARAM' sessionId); " is 157.
Long Statement,Lucene.Net.Replicator,IndexAndTaxonomyReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexAndTaxonomyReplicationHandler.cs,RevisionReady,The length of the statement  "            WriteToInfoStream("revisionReady(): currentVersion=" + currentVersion + " currentRevisionFiles=" + currentRevisionFiles); " is 121.
Long Statement,Lucene.Net.Replicator,IndexAndTaxonomyRevision,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexAndTaxonomyRevision.cs,CompareTo,The length of the statement  "                throw new ArgumentException(string.Format("Cannot compare IndexAndTaxonomyRevision to a {0}"' other.GetType())' "other"); " is 121.
Long Statement,Lucene.Net.Replicator,IndexAndTaxonomyRevision,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexAndTaxonomyRevision.cs,Open,The length of the statement  "            Debug.Assert(source.Equals(INDEX_SOURCE' StringComparison.Ordinal) || source.Equals(TAXONOMY_SOURCE' StringComparison.Ordinal)' string.Format("invalid source; expected=({0} or {1}) got={2}"' INDEX_SOURCE' TAXONOMY_SOURCE' source)); " is 231.
Long Statement,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,GetSegmentsFile,The length of the statement  "            if (!segmentsFile.StartsWith(IndexFileNames.SEGMENTS' StringComparison.Ordinal) || segmentsFile.Equals(IndexFileNames.SEGMENTS_GEN' StringComparison.Ordinal)) " is 158.
Long Statement,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,GetSegmentsFile,The length of the statement  "                    string.Format("last file to copy+sync must be segments_N but got {0}; check your Revision implementation!"' segmentsFile)); " is 123.
Long Statement,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,CleanupOldIndexFiles,The length of the statement  "                        .Where(file => !commitFiles.Contains(file) && (matcher.IsMatch(file) || file.StartsWith(IndexFileNames.SEGMENTS' StringComparison.Ordinal)))) " is 141.
Long Statement,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,RevisionReady,The length of the statement  "            if (revisionFiles.Count > 1) throw new ArgumentException(string.Format("this handler handles only a single source; got {0}"' revisionFiles.Keys)); " is 146.
Long Statement,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,RevisionReady,The length of the statement  "            WriteToInfoStream(string.Format("revisionReady(): currentVersion={0} currentRevisionFiles={1}"' currentVersion' currentRevisionFiles)); " is 135.
Long Statement,Lucene.Net.Replicator,IndexRevision,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexRevision.cs,Open,The length of the statement  "            Debug.Assert(source.Equals(SOURCE' StringComparison.Ordinal)' string.Format("invalid source; expected={0} got={1}"' SOURCE' source)); " is 133.
Long Statement,Lucene.Net.Replicator,LocalReplicator,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\LocalReplicator.cs,ObtainFile,The length of the statement  "                    throw new SessionExpiredException(string.Format("session ({0}) expired while obtaining file: source={1} file={2}"' sessionId' source' fileName)); " is 145.
Long Statement,Lucene.Net.Replicator,LocalReplicator,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\LocalReplicator.cs,Publish,The length of the statement  "                        throw new ArgumentException(string.Format("Cannot publish an older revision: rev={0} current={1}"' revision' currentRevision)' "revision"); " is 139.
Long Statement,Lucene.Net.Replicator,ReplicationSession,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\LocalReplicator.cs,IsExpired,The length of the statement  "                return lastAccessTime < Stopwatch.GetTimestamp() - expirationThreshold * Stopwatch.Frequency / 1000; // LUCENENET TODO: CurrentTimeMilliseconds() " is 145.
Long Statement,Lucene.Net.Replicator,ReplicationClient,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\ReplicationClient.cs,DoUpdate,The length of the statement  "                    handler.RevisionReady(session.Version' session.SourceFiles' new ReadOnlyDictionary<string' IList<string>>(copiedFiles)' sourceDirectory); " is 137.
Long Statement,Lucene.Net.Replicator,ReplicationClient,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\ReplicationClient.cs,RequiredFiles,The length of the statement  "                Debug.Assert(newRevisionFiles.ContainsKey(source)' string.Format("source not found in newRevisionFiles: {0}"' newRevisionFiles)); " is 129.
Long Statement,Lucene.Net.Replicator,ReplicationClient,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\ReplicationClient.cs,StartUpdateThread,The length of the statement  "                throw new InvalidOperationException("cannot start an update thread when one is running' must first call 'stopUpdateThread()'"); " is 127.
Virtual Method Call from Constructor,Lucene.Net.Replicator,IndexAndTaxonomyRevision,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexAndTaxonomyRevision.cs,IndexAndTaxonomyRevision,The constructor "IndexAndTaxonomyRevision" calls a virtual method "Snapshot".
Virtual Method Call from Constructor,Lucene.Net.Replicator,IndexAndTaxonomyRevision,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexAndTaxonomyRevision.cs,IndexAndTaxonomyRevision,The constructor "IndexAndTaxonomyRevision" calls a virtual method "Snapshot".
Virtual Method Call from Constructor,Lucene.Net.Replicator,IndexRevision,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexRevision.cs,IndexRevision,The constructor "IndexRevision" calls a virtual method "Snapshot".
Empty Catch Block,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,GetLastCommit,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,CleanupFilesOnFailure,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,CleanupOldIndexFiles,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,CleanupOldIndexFiles,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Replicator,IndexReplicationHandler,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexReplicationHandler.cs,WriteSegmentsGen,The method has an empty catch block.
Magic Number,Lucene.Net.Replicator.Http,ReplicationService,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\Http\ReplicationService.cs,Perform,The following statement contains a magic number: pathElements.Length != 2
Magic Number,Lucene.Net.Replicator,ReplicationSession,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\LocalReplicator.cs,IsExpired,The following statement contains a magic number: return lastAccessTime < Stopwatch.GetTimestamp() - expirationThreshold * Stopwatch.Frequency / 1000;
Magic Number,Lucene.Net.Replicator,RevisionFile,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\RevisionFile.cs,GetHashCode,The following statement contains a magic number: return FileName.GetHashCode() ^ (int)(Length ^ (long)((ulong)Length >> 32));
Missing Default,Lucene.Net.Replicator,IndexInputStream,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Replicator\IndexInputInputStream.cs,Seek,The following switch statement is missing a default case: switch (origin)              {                  case SeekOrigin.Begin:                      Position = offset;                      break;                  case SeekOrigin.Current:                      Position += offset;                      break;                  case SeekOrigin.End:                      Position = Length - offset;                      break;              }
