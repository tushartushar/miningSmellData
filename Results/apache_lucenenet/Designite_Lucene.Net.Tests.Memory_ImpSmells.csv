Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,DuellReaders,Cyclomatic complexity of the method is 11
Long Statement,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,ReadQueries,The length of the statement  "                if (line.Length > 0 && !line.StartsWith("#"' StringComparison.Ordinal) && !line.StartsWith("//"' StringComparison.Ordinal)) " is 123.
Long Statement,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,AssertAgainstRAMDirectory,The length of the statement  "                                                 new IndexWriterConfig(TEST_VERSION_CURRENT' analyzer).SetCodec(TestUtil.AlwaysPostingsFormat(new Lucene41PostingsFormat()))); " is 125.
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestRandomQueries,The following statement contains a magic number: MemoryIndex index = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestRandomQueries,The following statement contains a magic number: MemoryIndex index = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestRandomQueries,The following statement contains a magic number: MemoryIndex index = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,AssertAgainstRAMDirectory,The following statement contains a magic number: int numFooTerms = Random.nextInt(250 * RANDOM_MULTIPLIER);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,AssertAgainstRAMDirectory,The following statement contains a magic number: int numTermTerms = Random.nextInt(250 * RANDOM_MULTIPLIER);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RandomAnalyzer,The following statement contains a magic number: switch (Random.nextInt(4))              {                  case 0: return new MockAnalyzer(Random' MockTokenizer.SIMPLE' true);                  case 1: return new MockAnalyzer(Random' MockTokenizer.SIMPLE' true' MockTokenFilter.ENGLISH_STOPSET);                  case 2: return new RandomAnalyzerHelper(this);                  //            return new Analyzer() {                    //        protected TokenStreamComponents createComponents(string fieldName' TextReader reader)                  //{                  //    Tokenizer tokenizer = new MockTokenizer(reader);                  //    return new TokenStreamComponents(tokenizer' new CrazyTokenFilter(tokenizer));                  //}                  //      };                  default: return new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false);              }
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RandomAnalyzer,The following statement contains a magic number: switch (Random.nextInt(4))              {                  case 0: return new MockAnalyzer(Random' MockTokenizer.SIMPLE' true);                  case 1: return new MockAnalyzer(Random' MockTokenizer.SIMPLE' true' MockTokenFilter.ENGLISH_STOPSET);                  case 2: return new RandomAnalyzerHelper(this);                  //            return new Analyzer() {                    //        protected TokenStreamComponents createComponents(string fieldName' TextReader reader)                  //{                  //    Tokenizer tokenizer = new MockTokenizer(reader);                  //    return new TokenStreamComponents(tokenizer' new CrazyTokenFilter(tokenizer));                  //}                  //      };                  default: return new MockAnalyzer(Random' MockTokenizer.WHITESPACE' false);              }
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDocsEnumStart,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDocsEnumStart,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDocsEnumStart,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RestDocsAndPositionsEnumStart,The following statement contains a magic number: int numIters = AtLeast(3);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RestDocsAndPositionsEnumStart,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(true' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RestDocsAndPositionsEnumStart,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(true' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RestDocsAndPositionsEnumStart,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(true' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,RestDocsAndPositionsEnumStart,The following statement contains a magic number: assertEquals(3' disi.EndOffset);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNullPointerException,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNullPointerException,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNullPointerException,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNullPointerException,The following statement contains a magic number: assertEquals(0' mindex.Search(wrappedquery)' 0.00001f);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestPassesIfWrapped,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestPassesIfWrapped,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestPassesIfWrapped,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestPassesIfWrapped,The following statement contains a magic number: assertEquals(0' mindex.Search(wrappedquery)' 0.00001f);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: assertEquals(7' reader.GetTerms("field").SumTotalTermFreq);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: assertTrue(mindex.Search(query) > 0.1);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: mockAnalyzer.SetPositionIncrementGap(1 + Random.nextInt(10));
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: assertEquals(0' mindex.Search(query)' 0.00001f);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: query.Slop = (10);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestSameFieldAddedMultipleTimes,The following statement contains a magic number: assertTrue("posGap" + mockAnalyzer.GetPositionIncrementGap("field")' mindex.Search(query) > 0.0001);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNonExistingsField,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNonExistingsField,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestNonExistingsField,The following statement contains a magic number: MemoryIndex mindex = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDuellMemIndex,The following statement contains a magic number: int numDocs = AtLeast(10);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDuellMemIndex,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDuellMemIndex,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDuellMemIndex,The following statement contains a magic number: MemoryIndex memory = new MemoryIndex(Random.nextBoolean()' Random.nextInt(50) * 1024 * 1024);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDuellMemIndex,The following statement contains a magic number: Random.nextInt(3) == 0
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestEmptyString,The following statement contains a magic number: memory.AddField("foo"' new CannedTokenStream(new Analysis.Token(""' 0' 5)));
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestEmptyString,The following statement contains a magic number: TopDocs docs = searcher.Search(new TermQuery(new Term("foo"' ""))' 10);
Magic Number,Lucene.Net.Index.Memory,MemoryIndexTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Memory\Index\Memory\MemoryIndexTest.cs,TestDuelMemoryIndexCoreDirectoryWithArrayField,The following statement contains a magic number: mockAnalyzer.SetOffsetGap(Random.nextInt(100));
