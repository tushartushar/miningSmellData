Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lucene.Net.Search.Highlight,Highlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\Highlighter.cs,GetBestTextFragments,The method has 119 lines of code.
Long Method,Lucene.Net.Search.Highlight,WeightedSpanTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\WeightedSpanTermExtractor.cs,Extract,The method has 117 lines of code.
Complex Method,Lucene.Net.Search.Highlight,Highlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\Highlighter.cs,GetBestTextFragments,Cyclomatic complexity of the method is 14
Complex Method,Lucene.Net.Search.Highlight,Highlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\Highlighter.cs,MergeContiguousFragments,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.Search.Highlight,SimpleHTMLEncoder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\SimpleHTMLEncoder.cs,HtmlEncode,Cyclomatic complexity of the method is 24
Complex Method,Lucene.Net.Search.Highlight,TokenSources,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\TokenSources.cs,GetTokenStream,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.Search.Highlight,WeightedSpanTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\WeightedSpanTermExtractor.cs,Extract,Cyclomatic complexity of the method is 30
Complex Method,Lucene.Net.Search.Highlight,WeightedSpanTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\WeightedSpanTermExtractor.cs,ExtractWeightedSpanTerms,Cyclomatic complexity of the method is 13
Complex Method,Lucene.Net.Search.Highlight,WeightedSpanTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\WeightedSpanTermExtractor.cs,CollectSpanQueryFields,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.Search.Highlight,WeightedSpanTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\WeightedSpanTermExtractor.cs,MustRewriteQuery,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.Search.VectorHighlight,BaseFragListBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragListBuilder.cs,CreateFieldFragList,Cyclomatic complexity of the method is 10
Complex Method,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,DiscreteMultiValueHighlighting,Cyclomatic complexity of the method is 17
Complex Method,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,Cyclomatic complexity of the method is 12
Complex Method,Lucene.Net.Search.VectorHighlight,FieldQuery,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldQuery.cs,Flatten,Cyclomatic complexity of the method is 19
Complex Method,Lucene.Net.Search.VectorHighlight,FieldQuery,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldQuery.cs,CheckOverlap,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.Search.VectorHighlight,FieldQuery,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldQuery.cs,SaveTerms,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.Search.VectorHighlight,FieldTermStack,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldTermStack.cs,FieldTermStack,Cyclomatic complexity of the method is 12
Long Parameter List,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.Highlight,SpanGradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\SpanGradientFormatter.cs,SpanGradientFormatter,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.Highlight,TokenSources,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\TokenSources.cs,GetAnyTokenStream,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,CreateFragments,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,CreateFragment,The method has 7 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,CreateFragments,The method has 8 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,MakeFragment,The method has 7 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,GetFragmentSourceMSO,The method has 6 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,GetFragmentSource,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragment,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragments,The method has 6 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragment,The method has 10 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragments,The method has 11 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragments,The method has 12 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetFieldFragList,The method has 6 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetFieldFragList,The method has 6 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,FieldQuery,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldQuery.cs,CheckOverlap,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,IFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FragmentsBuilder.cs,CreateFragments,The method has 5 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,IFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FragmentsBuilder.cs,CreateFragment,The method has 7 parameters.
Long Parameter List,Lucene.Net.Search.VectorHighlight,IFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FragmentsBuilder.cs,CreateFragments,The method has 8 parameters.
Long Identifier,Lucene.Net.Search.Highlight,TokenSources,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\TokenSources.cs,GetTokenStream,The length of the parameter tokenPositionsGuaranteedContiguous is 34.
Long Statement,Lucene.Net.Search.Highlight,Highlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\Highlighter.cs,GetBestTextFragments,The length of the statement  "		for (bool next = tokenStream.IncrementToken (); next && (offsetAtt.StartOffset < _maxDocCharsToAnalyze); next = tokenStream.IncrementToken ()) { " is 144.
Long Statement,Lucene.Net.Search.Highlight,Highlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\Highlighter.cs,GetBestTextFragments,The length of the statement  "				throw new InvalidTokenOffsetsException ("Token " + termAtt.ToString () + " exceeds length of provided text sized " + text.Length); " is 130.
Long Statement,Lucene.Net.Search.Highlight,SimpleSpanFragmenter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\SimpleSpanFragmenter.cs,IsNewFragment,The length of the statement  "	bool isNewFrag = offsetAtt.EndOffset >= (fragmentSize * currentNumFrags) && (textSize - offsetAtt.EndOffset) >= (int)((uint)fragmentSize >> 1); " is 143.
Long Statement,Lucene.Net.Search.VectorHighlight,BaseFragListBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragListBuilder.cs,CreateFieldFragList,The length of the statement  "		throw new ArgumentException ("fragCharSize(" + fragCharSize + ") is too small. It must be " + minFragCharSize + " or higher."); " is 127.
Long Statement,Lucene.Net.Search.VectorHighlight,BaseFragListBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragListBuilder.cs,CreateFieldFragList,The length of the statement  "	IteratorQueue<WeightedPhraseInfo> queue = new IteratorQueue<WeightedPhraseInfo> (fieldPhraseList.PhraseList.GetEnumerator ()); " is 126.
Long Statement,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,MakeFragment,The length of the statement  "			fragment.Append (encoder.EncodeText (src.Substring (srcIndex' (to.StartOffset - modifiedStartOffset [0]) - srcIndex))).Append (GetPreTag (preTags' subInfo.Seqnum)).Append (encoder.EncodeText (src.Substring (to.StartOffset - modifiedStartOffset [0]' (to.EndOffset - modifiedStartOffset [0]) - (to.StartOffset - modifiedStartOffset [0])))).Append (GetPostTag (postTags' subInfo.Seqnum)); " is 385.
Long Statement,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,DiscreteMultiValueHighlighting,The length of the statement  "			if (fragInfo.StartOffset >= fieldStart && fragInfo.EndOffset >= fieldStart && fragInfo.StartOffset <= fieldEnd && fragInfo.EndOffset <= fieldEnd) { " is 147.
Long Statement,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragments,The length of the statement  "	return fragmentsBuilder.CreateFragments (reader' docId' fieldName' fieldFragList' maxNumFragments' preTags' postTags' encoder); " is 127.
Long Statement,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragments,The length of the statement  "	FieldFragList fieldFragList = GetFieldFragList (fragListBuilder' fieldQuery' reader' docId' matchedFields' fragCharSize); " is 121.
Long Statement,Lucene.Net.Search.VectorHighlight,FastVectorHighlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FastVectorHighlighter.cs,GetBestFragments,The length of the statement  "	return fragmentsBuilder.CreateFragments (reader' docId' storedField' fieldFragList' maxNumFragments' preTags' postTags' encoder); " is 129.
Complex Conditional,Lucene.Net.Search.VectorHighlight,BaseFragmentsBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragmentsBuilder.cs,DiscreteMultiValueHighlighting,The conditional expression  "fragInfo.StartOffset >= fieldStart && fragInfo.EndOffset >= fieldStart && fragInfo.StartOffset <= fieldEnd && fragInfo.EndOffset <= fieldEnd"  is complex.
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "Pop".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "GetFieldTermMap".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "GetFieldTermMap".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "Pop".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "Push".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "AddIfNoOverlap".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "Push".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "SearchPhrase".
Virtual Method Call from Constructor,Lucene.Net.Search.VectorHighlight,FieldPhraseList,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\FieldPhraseList.cs,FieldPhraseList,The constructor "FieldPhraseList" calls a virtual method "AddIfNoOverlap".
Empty Catch Block,Lucene.Net.Search.Highlight,Highlighter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\Highlighter.cs,GetBestTextFragments,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Search.Highlight,QueryTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\QueryTermExtractor.cs,GetIdfWeightedTerms,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Search.Highlight,QueryTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\QueryTermExtractor.cs,GetTerms,The method has an empty catch block.
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightForeground) {  	if (minForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxForegroundColor.Length != 7) {  		throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  	m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  	m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  	m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  	m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  	m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (minForegroundColor.Length != 7) {  	throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (maxForegroundColor.Length != 7) {  	throw new ArgumentException ("minForegroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgRMin = HexToInt32 (minForegroundColor.Substring (1' 3 - 1));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgGMin = HexToInt32 (minForegroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgBMin = HexToInt32 (minForegroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgRMax = HexToInt32 (maxForegroundColor.Substring (1' 3 - 1));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgGMax = HexToInt32 (maxForegroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_fgBMax = HexToInt32 (maxForegroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (m_highlightBackground) {  	if (minBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	if (maxBackgroundColor.Length != 7) {  		throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  	}  	m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  	m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  	m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  	m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  	m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  	m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (minBackgroundColor.Length != 7) {  	throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: if (maxBackgroundColor.Length != 7) {  	throw new ArgumentException ("minBackgroundColor is not 7 bytes long eg a hex " + "RGB value such as #FFFFFF");  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgRMin = HexToInt32 (minBackgroundColor.Substring (1' 3 - 1));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgGMin = HexToInt32 (minBackgroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgBMin = HexToInt32 (minBackgroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgRMax = HexToInt32 (maxBackgroundColor.Substring (1' 3 - 1));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgGMax = HexToInt32 (maxBackgroundColor.Substring (3' 5 - 3));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,GradientFormatter,The following statement contains a magic number: m_bgBMax = HexToInt32 (maxBackgroundColor.Substring (5' 7 - 5));  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,Int32ToHex,The following statement contains a magic number: return "" + hexDigits [(i & 0xF0) >> 4] + hexDigits [i & 0x0F];  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,HexToInt32,The following statement contains a magic number: if (len > 16)  	throw new FormatException ();  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,HexToInt32,The following statement contains a magic number: try {  	// LUCENENET NOTE: Convert.ToInt32(string' int) throws a  	// System.FormatException if the character does not fall in  	// the correct range' which is the behavior we are expecting.  	// But throws an ArgumentException if passed a negative number.  	// So we need to convert to FormatException to provide the correct behavior.  	return Convert.ToInt32 (hex' 16);  } catch (ArgumentException e) {  	throw new FormatException (e.Message' e);  }  
Magic Number,Lucene.Net.Search.Highlight,GradientFormatter,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\GradientFormatter.cs,HexToInt32,The following statement contains a magic number: return Convert.ToInt32 (hex' 16);  
Magic Number,Lucene.Net.Search.Highlight,QueryTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\QueryTermExtractor.cs,GetTerms,The following statement contains a magic number: try {  	if (query is BooleanQuery)  		GetTermsFromBooleanQuery ((BooleanQuery)query' terms' prohibited' fieldName);  	else if (query is FilteredQuery)  		GetTermsFromFilteredQuery ((FilteredQuery)query' terms' prohibited' fieldName);  	else {  		var nonWeightedTerms = new HashSet<Term> ();  		query.ExtractTerms (nonWeightedTerms);  		foreach (var term in nonWeightedTerms) {  			if ((fieldName == null) || (term.Field.Equals (fieldName))) {  				terms.Add (new WeightedTerm (query.Boost' term.Text ()));  			}  		}  	}  }   #pragma  catch (NotSupportedException ignore)  #pragma   {  	//this is non-fatal for our purposes  }  
Magic Number,Lucene.Net.Search.Highlight,QueryTermExtractor,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\QueryTermExtractor.cs,GetTerms,The following statement contains a magic number: try {  	if (query is BooleanQuery)  		GetTermsFromBooleanQuery ((BooleanQuery)query' terms' prohibited' fieldName);  	else if (query is FilteredQuery)  		GetTermsFromFilteredQuery ((FilteredQuery)query' terms' prohibited' fieldName);  	else {  		var nonWeightedTerms = new HashSet<Term> ();  		query.ExtractTerms (nonWeightedTerms);  		foreach (var term in nonWeightedTerms) {  			if ((fieldName == null) || (term.Field.Equals (fieldName))) {  				terms.Add (new WeightedTerm (query.Boost' term.Text ()));  			}  		}  	}  }   #pragma  catch (NotSupportedException ignore)  #pragma   {  	//this is non-fatal for our purposes  }  
Magic Number,Lucene.Net.Search.Highlight,SimpleHTMLEncoder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\SimpleHTMLEncoder.cs,HtmlEncode,The following statement contains a magic number: for (int index = 0; index < plainText.Length; index++) {  	char ch = plainText [index];  	switch (ch) {  	case '"':  		result.Append ("&quot;");  		break;  	case '&':  		result.Append ("&amp;");  		break;  	case '<':  		result.Append ("&lt;");  		break;  	case '>':  		result.Append ("&gt;");  		break;  	case '\'':  		result.Append ("&#x27;");  		break;  	case '/':  		result.Append ("&#x2F;");  		break;  	default:  		// LUCENENET TODO: This logic appears to be correct' but need to   		// verify and create/alter unit tests to accommodate this change  		if (ch < 128) {  			result.Append (ch);  		} else {  			result.Append ("&#").Append ((int)ch).Append (";");  		}  		break;  	}  }  
Magic Number,Lucene.Net.Search.Highlight,SimpleHTMLEncoder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\SimpleHTMLEncoder.cs,HtmlEncode,The following statement contains a magic number: switch (ch) {  case '"':  	result.Append ("&quot;");  	break;  case '&':  	result.Append ("&amp;");  	break;  case '<':  	result.Append ("&lt;");  	break;  case '>':  	result.Append ("&gt;");  	break;  case '\'':  	result.Append ("&#x27;");  	break;  case '/':  	result.Append ("&#x2F;");  	break;  default:  	// LUCENENET TODO: This logic appears to be correct' but need to   	// verify and create/alter unit tests to accommodate this change  	if (ch < 128) {  		result.Append (ch);  	} else {  		result.Append ("&#").Append ((int)ch).Append (";");  	}  	break;  }  
Magic Number,Lucene.Net.Search.Highlight,SimpleHTMLEncoder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\Highlight\SimpleHTMLEncoder.cs,HtmlEncode,The following statement contains a magic number: if (ch < 128) {  	result.Append (ch);  } else {  	result.Append ("&#").Append ((int)ch).Append (";");  }  
Magic Number,Lucene.Net.Search.VectorHighlight,BaseFragListBuilder,F:\newReposMay17\apache_lucenenet\src\Lucene.Net.Highlighter\VectorHighlight\BaseFragListBuilder.cs,CreateFieldFragList,The following statement contains a magic number: while ((phraseInfo = queue.Top ()) != null) {  	// if the phrase violates the border of previous fragment' discard it and try next phrase  	if (phraseInfo.StartOffset < startOffset) {  		queue.RemoveTop ();  		continue;  	}  	wpil.Clear ();  	int currentPhraseStartOffset = phraseInfo.StartOffset;  	int currentPhraseEndOffset = phraseInfo.EndOffset;  	int spanStart = Math.Max (currentPhraseStartOffset - margin' startOffset);  	int spanEnd = Math.Max (currentPhraseEndOffset' spanStart + fragCharSize);  	if (AcceptPhrase (queue.RemoveTop ()' currentPhraseEndOffset - currentPhraseStartOffset' fragCharSize)) {  		wpil.Add (phraseInfo);  	}  	while ((phraseInfo = queue.Top ()) != null) {  		// pull until we crossed the current spanEnd  		if (phraseInfo.EndOffset <= spanEnd) {  			currentPhraseEndOffset = phraseInfo.EndOffset;  			if (AcceptPhrase (queue.RemoveTop ()' currentPhraseEndOffset - currentPhraseStartOffset' fragCharSize)) {  				wpil.Add (phraseInfo);  			}  		} else {  			break;  		}  	}  	if (!wpil.Any ()) {  		continue;  	}  	int matchLen = currentPhraseEndOffset - currentPhraseStartOffset;  	// now recalculate the start and end position to "center" the result  	int newMargin = Math.Max (0' (fragCharSize - matchLen) / 2);  	// matchLen can be > fragCharSize prevent IAOOB here  	spanStart = currentPhraseStartOffset - newMargin;  	if (spanStart < startOffset) {  		spanStart = startOffset;  	}  	// whatever is bigger here we grow this out  	spanEnd = spanStart + Math.Max (matchLen' fragCharSize);  	startOffset = spanEnd;  	fieldFragList.Add (spanStart' spanEnd' wpil);  }  
