Implementation smell,Namespace,Class,File,Method,Description
Long Method,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The method has 121 lines of code.
Long Method,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The method has 110 lines of code.
Complex Method,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestRandomIndex,Cyclomatic complexity of the method is 9
Complex Method,Lucene.Net.Tests.Queries.Function,FunctionTestSetup,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\FunctionTestSetup.cs,CreateIndex,Cyclomatic complexity of the method is 8
Complex Method,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,Cyclomatic complexity of the method is 15
Long Parameter List,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,AddDoc,The method has 5 parameters. Parameters: writer' accessRights' price' date' inStock
Long Parameter List,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,VerifyResults,The method has 12 parameters. Parameters: boost' s' h1' h2customNeutral' h3CustomMul' h4CustomAdd' h5CustomMulAdd' q1' q2' q3' q4' q5
Long Parameter List,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,LogResult,The method has 5 parameters. Parameters: msg' s' q' doc' score1
Long Statement,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestToStringOfWrappedBooleanFilters,The length of the statement  "            assertEquals(@"BooleanFilter(+BooleanFilter(BooleanFilter(+inStock:Y +barCode:12345678) BooleanFilter(+isHeavy:N +isDamaged:Y)))"' composedFilter.ToString()); " is 158.
Long Statement,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestANDNOT,The length of the statement  "            ChainedFilter chain = GetChainedFilter(new Filter[] { dateFilter' sueFilter }' new int[] { ChainedFilter.AND' ChainedFilter.ANDNOT }); " is 134.
Long Statement,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestANDNOT,The length of the statement  "            chain = GetChainedFilter(new Filter[] { bobFilter' bobFilter }' new int[] { ChainedFilter.ANDNOT' ChainedFilter.ANDNOT }); " is 122.
Long Statement,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The length of the statement  "            CommonTermsQuery query = new CommonTermsQuery(RandomOccur(Random)' RandomOccur(Random)' Random.NextSingle()' Random.NextBoolean()); " is 131.
Long Statement,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The length of the statement  "            QueryUtils.CheckUnequal(new CommonTermsQuery(RandomOccur(Random)' RandomOccur(Random)' Random.NextSingle()' Random.NextBoolean())' query); " is 138.
Long Statement,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The length of the statement  "                assertEquals(new HashSet<string>(Arrays.AsList(@"2"' @"3"))' new HashSet<string>(Arrays.AsList(r.Document(search.ScoreDocs[1].Doc).Get(@"id")' r.Document(search.ScoreDocs[2].Doc).Get(@"id")))); " is 193.
Long Statement,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The length of the statement  "                assertEquals(new HashSet<string>(Arrays.AsList(@"0"' @"2"))' new HashSet<string>(Arrays.AsList(r.Document(search.ScoreDocs[0].Doc).Get(@"id")' r.Document(search.ScoreDocs[1].Doc).Get(@"id")))); " is 193.
Long Statement,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestCachability,The length of the statement  "            assertTrue("Must be cached"' cachedFilters.Contains(TermsFilter(true' new Term("field1"' "a")' new Term("field1"' "a")' new Term("field1"' "b")))); " is 147.
Long Statement,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestCachability,The length of the statement  "            assertFalse("Must not be cached"' cachedFilters.Contains(TermsFilter(Random.NextBoolean()' new Term("field1"' "a")' new Term("field1"' "a")' new Term("field1"' "b")' new Term("field1"' "v")))); " is 193.
Long Statement,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestMissingTerms,The length of the statement  "            FixedBitSet bits = (FixedBitSet)TermsFilter(Random.NextBoolean()' terms).GetDocIdSet(context' context.AtomicReader.LiveDocs); " is 125.
Long Statement,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,DoTestCustomScore,The length of the statement  "            VerifyResults(boost' s' h1' h2CustomNeutral' h3CustomMul' h4CustomAdd' h5CustomMulAdd' q1' q2CustomNeutral' q3CustomMul' q4CustomAdd' q5CustomMulAdd); " is 150.
Long Statement,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,VerifyResults,The length of the statement  "                assertEquals("same score (just boosted) for neutral"' boost * score1' score2' CheckHits.ExplainToleranceDelta(boost * score1' score2)); " is 135.
Long Statement,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,VerifyResults,The length of the statement  "                assertEquals("new score for custom mul"' boost * fieldScore * score1' score3' CheckHits.ExplainToleranceDelta(boost * fieldScore * score1' score3)); " is 148.
Long Statement,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,VerifyResults,The length of the statement  "                assertEquals("new score for custom add"' boost * (fieldScore + score1)' score4' CheckHits.ExplainToleranceDelta(boost * (fieldScore + score1)' score4)); " is 152.
Long Statement,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,VerifyResults,The length of the statement  "                assertEquals("new score for custom mul add"' boost * fieldScore * (score1 + fieldScore)' score5' CheckHits.ExplainToleranceDelta(boost * fieldScore * (score1 + fieldScore)' score5)); " is 182.
Long Statement,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,Test,The length of the statement  "                if (type != DocValuesType.SORTED_SET && type != DocValuesType.NONE) // LUCENENET specific: eliminate our NONE option from test " is 126.
Long Statement,Lucene.Net.Tests.Queries.Function,TestFieldScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestFieldScoreQuery.cs,doTestExactScore,The length of the statement  "                assertEquals("score of " + id + " shuould be " + expectedScore + " != " + score' expectedScore' score' TEST_SCORE_TOLERANCE_DELTA); " is 131.
Long Statement,Lucene.Net.Tests.Queries.Function,TestOrdValues,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestOrdValues.cs,DoTestRank,The length of the statement  "            string prevID = inOrder ? "IE" : "IC"; // smaller than all ids of docs in this test ("ID0001"' etc.) -  greater than all ids of docs in this test ("ID0001"' etc.) " is 162.
Long Statement,Lucene.Net.Tests.Queries.Function,TestOrdValues,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestOrdValues.cs,DoTestExactScore,The length of the statement  "                assertEquals("score of result " + i + " shuould be " + expectedScore + " != " + score' expectedScore' score' TEST_SCORE_TOLERANCE_DELTA); " is 137.
Long Statement,Lucene.Net.Tests.Queries.Function,TestOrdValues,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestOrdValues.cs,DoTestExactScore,The length of the statement  "                string expectedId = inOrder ? Id2String(N_DOCS - i) : Id2String(i + 1); // reverse  ==> smaller values first -  in-order ==> larger  values first " is 145.
Long Statement,Lucene.Net.Tests.Queries.Function,TestOrdValues,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestOrdValues.cs,DoTestExactScore,The length of the statement  "                assertTrue("id of result " + i + " shuould be " + expectedId + " != " + score' expectedId.Equals(id' StringComparison.Ordinal)); " is 128.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDiv,The length of the statement  "            AssertHits(new FunctionQuery(new DivSingleFunction(new ConstValueSource(10f)' new ConstValueSource(5f)))' new[] { 2f' 2f }); " is 124.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDocFreq,The length of the statement  "            AssertHits(new FunctionQuery(new DocFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 2f' 2f }); " is 120.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIDF,The length of the statement  "                AssertHits(new FunctionQuery(new IDFValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 0.5945349f' 0.5945349f }); " is 132.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIf,The length of the statement  "            AssertHits(new FunctionQuery(new IfFunction(new BytesRefFieldSource("id")' new ConstValueSource(1.0f)' new ConstValueSource(2.0f) " is 129.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIf,The length of the statement  "            AssertHits(new FunctionQuery(new IfFunction(new LiteralValueSource("false")' new ConstValueSource(1.0f)' new ConstValueSource(2.0f) " is 131.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMaxFloat,The length of the statement  "            AssertHits(new FunctionQuery(new MaxSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 2f' 2f }); " is 145.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMinFloat,The length of the statement  "            AssertHits(new FunctionQuery(new MinSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 1f' 1f }); " is 145.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestPow,The length of the statement  "            AssertHits(new FunctionQuery(new PowSingleFunction(new ConstValueSource(2f)' new ConstValueSource(3f)))' new[] { 8f' 8f }); " is 123.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestProduct,The length of the statement  "            AssertHits(new FunctionQuery(new ProductSingleFunction(new ValueSource[] { new ConstValueSource(2f)' new ConstValueSource(3f) }))' new[] { 6f' 6f }); " is 149.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The length of the statement  "            AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' 1' 0f))' new[] { 1f' 0f }); " is 121.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The length of the statement  "            AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f }); " is 239.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestSumFloat,The length of the statement  "            AssertHits(new FunctionQuery(new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 3f' 3f }); " is 145.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTermFreq,The length of the statement  "            AssertHits(new FunctionQuery(new TermFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 3f' 1f }); " is 121.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTermFreq,The length of the statement  "            AssertHits(new FunctionQuery(new TermFreqValueSource("bogus"' "bogus"' "string"' new BytesRef("bar")))' new[] { 0f' 1f }); " is 122.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTF,The length of the statement  "                AssertHits(new FunctionQuery(new TFValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { (float)Math.Sqrt(3d)' (float)Math.Sqrt(1d) }); " is 151.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTotalTermFreq,The length of the statement  "                AssertHits(new FunctionQuery(new TotalTermFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { -1f' -1f }); " is 128.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTotalTermFreq,The length of the statement  "                AssertHits(new FunctionQuery(new TotalTermFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 4f' 4f }); " is 126.
Long Statement,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,AssertHits,The length of the statement  "            TopDocs docs = searcher.Search(q' null' documents.Count' new Sort(new SortField("id"' SortFieldType.STRING))' true' false); " is 123.
Long Statement,Lucene.Net.Tests.Queries.Mlt,TestMoreLikeThis,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Mlt\TestMoreLikeThis.cs,TestBoostFactor,The length of the statement  "                assertEquals("Expected boost of " + totalBoost + " for term '" + tq.Term.Text() + "' got " + tq.Boost' totalBoost' tq.Boost' 0.0001); " is 133.
Empty Catch Block,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestNullTerm,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestIllegalOccur,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestIllegalOccur,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Tests.Queries,TermFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermFilterTest.cs,TestNoTerms,The method has an empty catch block.
Empty Catch Block,Lucene.Net.Tests.Queries,TermFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermFilterTest.cs,TestNoTerms,The method has an empty catch block.
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShoulds,The following statement contains a magic number: TstFilterCard(@"Shoulds are Ored together"' 5' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShouldsAndMustNot,The following statement contains a magic number: TstFilterCard(@"Shoulds Ored but AndNot"' 4' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShouldsAndMustNot,The following statement contains a magic number: TstFilterCard(@"Shoulds Ored but AndNots"' 3' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShouldsAndMustNot,The following statement contains a magic number: TstFilterCard(@"Shoulds Ored but AndNot"' 4' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShouldsAndMustNot,The following statement contains a magic number: TstFilterCard(@"Shoulds Ored but AndNots"' 3' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShouldsAndMust,The following statement contains a magic number: TstFilterCard(@"Shoulds Ored but MUST"' 3' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestShouldsAndMust,The following statement contains a magic number: TstFilterCard(@"Shoulds Ored but MUST"' 3' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestJustMust,The following statement contains a magic number: TstFilterCard(@"MUST"' 3' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestJustMust,The following statement contains a magic number: TstFilterCard(@"MUST"' 3' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestJustMustNot,The following statement contains a magic number: TstFilterCard(@"MUST_NOT"' 4' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestJustMustNot,The following statement contains a magic number: TstFilterCard(@"MUST_NOT"' 4' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestJustNullDocIdSets,The following statement contains a magic number: TstFilterCard(@"A single MUST_NOT filter that returns a null DIS should be invisible"' 5' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BooleanFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BooleanFilterTest.cs,TestJustNullDocIdSets,The following statement contains a magic number: TstFilterCard(@"A single MUST_NOT filter that returns a null DIS should be invisible"' 5' booleanFilter);
Magic Number,Lucene.Net.Tests.Queries,BoostingQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BoostingQueryTest.cs,TestBoostingQueryEquals,The following statement contains a magic number: BoostingQuery bq1 = new BoostingQuery(q1' q2' 0.1f);
Magic Number,Lucene.Net.Tests.Queries,BoostingQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\BoostingQueryTest.cs,TestBoostingQueryEquals,The following statement contains a magic number: BoostingQuery bq2 = new BoostingQuery(q1' q2' 0.1f);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,SetUp,The following statement contains a magic number: var cal = new GregorianCalendar().ToDateTime(2003' 1' 1' 0' 0' 0' 0);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,SetUp,The following statement contains a magic number: doc.Add(NewStringField("owner"' (i < Max / 2) ? "bob" : "sue"' Field.Store.YES));
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: int numHits = searcher.Search(query' chain' 1000).TotalHits;
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: numHits = searcher.Search(query' chain' 1000).TotalHits;
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: assertEquals(Max / 2' numHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: TopDocs hits = searcher.Search(query' chain' 1000);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: assertEquals(Max / 2' numHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: hits = searcher.Search(query' chain' 1000);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestSingleFilter,The following statement contains a magic number: assertEquals(Max / 2' numHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestOR,The following statement contains a magic number: int numHits = searcher.Search(query' chain' 1000).TotalHits;
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestAND,The following statement contains a magic number: TopDocs hits = searcher.Search(query' chain' 1000);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestAND,The following statement contains a magic number: assertEquals("AND matches just bob"' Max / 2' hits.TotalHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestXOR,The following statement contains a magic number: TopDocs hits = searcher.Search(query' chain' 1000);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestXOR,The following statement contains a magic number: assertEquals("XOR matches sue"' Max / 2' hits.TotalHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestANDNOT,The following statement contains a magic number: TopDocs hits = searcher.Search(query' chain' 1000);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestANDNOT,The following statement contains a magic number: assertEquals("ANDNOT matches just bob"' Max / 2' hits.TotalHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestANDNOT,The following statement contains a magic number: hits = searcher.Search(query' chain' 1000);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestANDNOT,The following statement contains a magic number: assertEquals("ANDNOT bob ANDNOT bob matches all sues"' Max / 2' hits.TotalHits);
Magic Number,Lucene.Net.Tests.Queries,ChainedFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\ChainedFilterTest.cs,TestWithCachingFilter,The following statement contains a magic number: Filter[] chain = new Filter[2];
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: assertEquals(search.TotalHits' 3);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: assertEquals(@"3"' r.Document(search.ScoreDocs[2].Doc).Get(@"id"));
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: assertEquals(search.TotalHits' 2);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.MUST' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.MUST' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.MUST' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.MUST' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestBasics,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: int terms = AtLeast(2);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: int leftTerms = AtLeast(r' 2);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: left.HighFreqMinimumNumberShouldMatch = r.nextInt(4);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: left.LowFreqMinimumNumberShouldMatch = r.nextInt(4);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: int rightTerms = AtLeast(r' 2);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: right.HighFreqMinimumNumberShouldMatch = r.nextInt(4);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestEqualsHashCode,The following statement contains a magic number: right.LowFreqMinimumNumberShouldMatch = r.nextInt(4);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: query.LowFreqMinimumNumberShouldMatch = 0.5F;
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: query.LowFreqMinimumNumberShouldMatch = 2F;
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: query.LowFreqMinimumNumberShouldMatch = 0.49F;
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(search.TotalHits' 3);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(@"3"' r.Document(search.ScoreDocs[2].Doc).Get(@"id"));
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(search.TotalHits' 3);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(@"3"' r.Document(search.ScoreDocs[2].Doc).Get(@"id"));
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertTrue(search.ScoreDocs[1].Score > search.ScoreDocs[2].Score);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: query.HighFreqMinimumNumberShouldMatch = 4F;
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(search.TotalHits' 3);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(search.ScoreDocs[1].Score' search.ScoreDocs[2].Score' 0F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(new HashSet<string>(Arrays.AsList(@"2"' @"3"))' new HashSet<string>(Arrays.AsList(r.Document(search.ScoreDocs[1].Doc).Get(@"id")' r.Document(search.ScoreDocs[2].Doc).Get(@"id"))));
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: query.HighFreqMinimumNumberShouldMatch = 2F;
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(search.TotalHits' 4);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.MUST' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.MUST' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: query.HighFreqMinimumNumberShouldMatch = 2F;
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestMinShouldMatch,The following statement contains a magic number: assertEquals(search.TotalHits' 2);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: CommonTermsQuery query = new CommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: assertEquals(search.TotalHits' 3);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: assertEquals(@"3"' r.Document(search.ScoreDocs[2].Doc).Get(@"id"));
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: CommonTermsQuery query = new ExtendedCommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: CommonTermsQuery query = new ExtendedCommonTermsQuery(Occur.SHOULD' Occur.SHOULD' Random.NextBoolean() ? 2F : 0.5F);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: TopDocs search = s.Search(query' 10);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: assertEquals(search.TotalHits' 3);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestExtend,The following statement contains a magic number: assertEquals(@"0"' r.Document(search.ScoreDocs[2].Doc).Get(@"id"));
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestRandomIndex,The following statement contains a magic number: CreateRandomIndex(AtLeast(50)' w' Random.NextInt64());
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestRandomIndex,The following statement contains a magic number: var lowFreqQueue = new AnonymousPriorityQueue(this' 5);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestRandomIndex,The following statement contains a magic number: Util.PriorityQueue<TermAndFreq> highFreqQueue = new AnonymousPriorityQueue1(this' 5);
Magic Number,Lucene.Net.Tests.Queries,CommonTermsQueryTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,TestRandomIndex,The following statement contains a magic number: highFreqQueue.Count < 5
Magic Number,Lucene.Net.Tests.Queries,ExtendedCommonTermsQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\CommonTermsQueryTest.cs,NewTermQuery,The following statement contains a magic number: query.Boost = 100F;
Magic Number,Lucene.Net.Tests.Queries,TermFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermFilterTest.cs,TestRandom,The following statement contains a magic number: int num = AtLeast(100);
Magic Number,Lucene.Net.Tests.Queries,TermFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermFilterTest.cs,TestRandom,The following statement contains a magic number: int numQueries = AtLeast(10);
Magic Number,Lucene.Net.Tests.Queries,TermFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermFilterTest.cs,TestHashCodeAndEquals,The following statement contains a magic number: int num = AtLeast(100);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestMissingTerms,The following statement contains a magic number: int term = i * 10;
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestMissingTerms,The following statement contains a magic number: i < 100
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestMissingTerms,The following statement contains a magic number: assertEquals("Must match 2"' 2' bits.Cardinality());
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestMissingTerms,The following statement contains a magic number: assertEquals("Must match 2"' 2' bits.Cardinality());
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestFieldNotPresent,The following statement contains a magic number: int num = AtLeast(3);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestSkipField,The following statement contains a magic number: int num = AtLeast(10);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestSkipField,The following statement contains a magic number: string field = "field" + Random.Next(100);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestSkipField,The following statement contains a magic number: int randomFields = Random.Next(10);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestSkipField,The following statement contains a magic number: string field = "field" + Random.Next(100);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestRandom,The following statement contains a magic number: int num = AtLeast(100);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestRandom,The following statement contains a magic number: string field = "field" + (singleField ? "1" : Random.Next(100).ToString());
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestRandom,The following statement contains a magic number: int numQueries = AtLeast(10);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestHashCodeAndEquals,The following statement contains a magic number: int num = AtLeast(100);
Magic Number,Lucene.Net.Tests.Queries,TermsFilterTest,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TermsFilterTest.cs,TestHashCodeAndEquals,The following statement contains a magic number: string field = "field" + (singleField ? "1" : Random.Next(100).ToString());
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomScoreByte,The following statement contains a magic number: DoTestCustomScore(BYTE_VALUESOURCE' 2.0);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomScoreShort,The following statement contains a magic number: DoTestCustomScore(SHORT_VALUESOURCE' 3.0);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomScoreInt,The following statement contains a magic number: DoTestCustomScore(INT_VALUESOURCE' 4.0);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomScoreFloat,The following statement contains a magic number: DoTestCustomScore(INT_AS_FLOAT_VALUESOURCE' 5.0);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomScoreFloat,The following statement contains a magic number: DoTestCustomScore(FLOAT_VALUESOURCE' 6.0);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomExternalQuery,The following statement contains a magic number: TopDocs hits = s.Search(q' 1000);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomExternalQuery,The following statement contains a magic number: assertEquals("doc=" + doc' (float)1 + (4 * doc) % N_DOCS' score' 0.0001);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,TestCustomExternalQuery,The following statement contains a magic number: assertEquals("doc=" + doc' (float)1 + (4 * doc) % N_DOCS' score' 0.0001);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,DoTestCustomScore,The following statement contains a magic number: TopDocs td1 = s.Search(q1' null' 1000);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,DoTestCustomScore,The following statement contains a magic number: TopDocs td2CustomNeutral = s.Search(q2CustomNeutral' null' 1000);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,DoTestCustomScore,The following statement contains a magic number: TopDocs td3CustomMul = s.Search(q3CustomMul' null' 1000);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,DoTestCustomScore,The following statement contains a magic number: TopDocs td4CustomAdd = s.Search(q4CustomAdd' null' 1000);
Magic Number,Lucene.Net.Tests.Queries,TestCustomScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\TestCustomScoreQuery.cs,DoTestCustomScore,The following statement contains a magic number: TopDocs td5CustomMulAdd = s.Search(q5CustomMulAdd' null' 1000);
Magic Number,Lucene.Net.Tests.Queries.Function,FunctionTestSetup,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\FunctionTestSetup.cs,CreateIndex,The following statement contains a magic number: iwc.SetMaxBufferedDocs(TestUtil.NextInt32(Random' 2' 7));
Magic Number,Lucene.Net.Tests.Queries.Function,FunctionTestSetup,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\FunctionTestSetup.cs,CreateIndex,The following statement contains a magic number: iwc.SetMaxBufferedDocs(TestUtil.NextInt32(Random' 2' 7));
Magic Number,Lucene.Net.Tests.Queries.Function,FunctionTestSetup,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\FunctionTestSetup.cs,CreateIndex,The following statement contains a magic number: i = (i + 4) % N_DOCS;
Magic Number,Lucene.Net.Tests.Queries.Function,FunctionTestSetup,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\FunctionTestSetup.cs,Id2String,The following statement contains a magic number: int n = ("" + N_DOCS).Length + 3;
Magic Number,Lucene.Net.Tests.Queries.Function,FunctionTestSetup,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\FunctionTestSetup.cs,ExpectedFieldScore,The following statement contains a magic number: return Convert.ToSingle(docIDFieldVal.Substring(2));
Magic Number,Lucene.Net.Tests.Queries.Function,TestBoostedQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestBoostedQuery.cs,TestBasic,The following statement contains a magic number: TopDocs docs = @is.Search(q' 10);
Magic Number,Lucene.Net.Tests.Queries.Function,TestBoostedQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestBoostedQuery.cs,TestBasic,The following statement contains a magic number: Query boostedQ = new BoostedQuery(q' new ConstValueSource(2.0f));
Magic Number,Lucene.Net.Tests.Queries.Function,TestBoostedQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestBoostedQuery.cs,TestBasic,The following statement contains a magic number: AssertHits(boostedQ' new float[] { score * 2 });
Magic Number,Lucene.Net.Tests.Queries.Function,TestBoostedQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestBoostedQuery.cs,AssertHits,The following statement contains a magic number: TopDocs docs = @is.Search(q' 10' new Sort(new SortField("id"' SortFieldType.STRING)));
Magic Number,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following statement contains a magic number: int nDocs = AtLeast(50);
Magic Number,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following statement contains a magic number: switch (type)                  {                      case DocValuesType.SORTED:                      case DocValuesType.BINARY:                          do                          {                              vals[i] = TestUtil.RandomSimpleString(Random' 20);                          } while (((string)vals[i]).Length == 0);                          f.SetBytesValue(new BytesRef((string)vals[i]));                          break;                      case DocValuesType.NUMERIC:                          int bitsPerValue = RandomInts.RandomInt32Between(Random' 1' 31); // keep it an int                          vals[i] = (long)Random.Next((int)PackedInt32s.MaxValue(bitsPerValue));                          f.SetInt64Value((long) vals[i]);                          break;                  }
Magic Number,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following statement contains a magic number: switch (type)                  {                      case DocValuesType.SORTED:                      case DocValuesType.BINARY:                          do                          {                              vals[i] = TestUtil.RandomSimpleString(Random' 20);                          } while (((string)vals[i]).Length == 0);                          f.SetBytesValue(new BytesRef((string)vals[i]));                          break;                      case DocValuesType.NUMERIC:                          int bitsPerValue = RandomInts.RandomInt32Between(Random' 1' 31); // keep it an int                          vals[i] = (long)Random.Next((int)PackedInt32s.MaxValue(bitsPerValue));                          f.SetInt64Value((long) vals[i]);                          break;                  }
Magic Number,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following statement contains a magic number: Random.NextBoolean() && i % 10 == 9
Magic Number,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following statement contains a magic number: Random.NextBoolean() && i % 10 == 9
Magic Number,Lucene.Net.Tests.Queries.Function,TestFieldScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestFieldScoreQuery.cs,DoTestRank,The following statement contains a magic number: ScoreDoc[] h = s.Search(functionQuery' null' 1000).ScoreDocs;
Magic Number,Lucene.Net.Tests.Queries.Function,TestFieldScoreQuery,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestFieldScoreQuery.cs,doTestExactScore,The following statement contains a magic number: TopDocs td = s.Search(functionQuery' null' 1000);
Magic Number,Lucene.Net.Tests.Queries.Function,TestFunctionQuerySort,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestFunctionQuerySort.cs,TestSearchAfterWhenSortingByFunctionValues,The following statement contains a magic number: const int NUM_VALS = 5;
Magic Number,Lucene.Net.Tests.Queries.Function,TestLongNormValueSource,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestLongNormValueSource.cs,AssertHits,The following statement contains a magic number: TopDocs docs = searcher.Search(q' 2' new Sort(new SortField("id"' SortFieldType.STRING)));
Magic Number,Lucene.Net.Tests.Queries.Function,TestOrdValues,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestOrdValues.cs,DoTestRank,The following statement contains a magic number: ScoreDoc[] h = s.Search(q' null' 1000).ScoreDocs;
Magic Number,Lucene.Net.Tests.Queries.Function,TestOrdValues,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestOrdValues.cs,DoTestExactScore,The following statement contains a magic number: TopDocs td = s.Search(q' null' 1000);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: doubleField.SetStringValue(doc[2]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: floatField.SetStringValue(doc[3]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: intField.SetStringValue(doc[4]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: longField.SetStringValue(doc[5]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: shortField.SetStringValue(doc[6]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: stringField.SetStringValue(doc[7]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,SetUp,The following statement contains a magic number: textField.SetStringValue(doc[8]);
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestByte,The following statement contains a magic number: AssertHits(new FunctionQuery(new ByteFieldSource("byte"))' new[] { 5f' 12f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestByte,The following statement contains a magic number: AssertHits(new FunctionQuery(new ByteFieldSource("byte"))' new[] { 5f' 12f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestConst,The following statement contains a magic number: AssertHits(new FunctionQuery(new ConstValueSource(0.3f))' new[] { 0.3f' 0.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestConst,The following statement contains a magic number: AssertHits(new FunctionQuery(new ConstValueSource(0.3f))' new[] { 0.3f' 0.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestConst,The following statement contains a magic number: AssertHits(new FunctionQuery(new ConstValueSource(0.3f))' new[] { 0.3f' 0.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDiv,The following statement contains a magic number: AssertHits(new FunctionQuery(new DivSingleFunction(new ConstValueSource(10f)' new ConstValueSource(5f)))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDiv,The following statement contains a magic number: AssertHits(new FunctionQuery(new DivSingleFunction(new ConstValueSource(10f)' new ConstValueSource(5f)))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDiv,The following statement contains a magic number: AssertHits(new FunctionQuery(new DivSingleFunction(new ConstValueSource(10f)' new ConstValueSource(5f)))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDiv,The following statement contains a magic number: AssertHits(new FunctionQuery(new DivSingleFunction(new ConstValueSource(10f)' new ConstValueSource(5f)))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDocFreq,The following statement contains a magic number: AssertHits(new FunctionQuery(new DocFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDocFreq,The following statement contains a magic number: AssertHits(new FunctionQuery(new DocFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDoubleConst,The following statement contains a magic number: AssertHits(new FunctionQuery(new DoubleConstValueSource(0.3d))' new[] { 0.3f' 0.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDoubleConst,The following statement contains a magic number: AssertHits(new FunctionQuery(new DoubleConstValueSource(0.3d))' new[] { 0.3f' 0.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDoubleConst,The following statement contains a magic number: AssertHits(new FunctionQuery(new DoubleConstValueSource(0.3d))' new[] { 0.3f' 0.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDouble,The following statement contains a magic number: AssertHits(new FunctionQuery(new DoubleFieldSource("double"))' new[] { 3.63f' 5.65f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestDouble,The following statement contains a magic number: AssertHits(new FunctionQuery(new DoubleFieldSource("double"))' new[] { 3.63f' 5.65f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new SingleFieldSource("float"))' new[] { 5.2f' 9.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new SingleFieldSource("float"))' new[] { 5.2f' 9.3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIDF,The following statement contains a magic number: AssertHits(new FunctionQuery(new IDFValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 0.5945349f' 0.5945349f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIDF,The following statement contains a magic number: AssertHits(new FunctionQuery(new IDFValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 0.5945349f' 0.5945349f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIf,The following statement contains a magic number: AssertHits(new FunctionQuery(new IfFunction(new BytesRefFieldSource("id")' new ConstValueSource(1.0f)' new ConstValueSource(2.0f)                 ))' new[] { 1f' 1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestIf,The following statement contains a magic number: AssertHits(new FunctionQuery(new IfFunction(new LiteralValueSource("false")' new ConstValueSource(1.0f)' new ConstValueSource(2.0f)                 ))' new[] { 1f' 1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestInt,The following statement contains a magic number: AssertHits(new FunctionQuery(new Int32FieldSource("int"))' new[] { 35f' 54f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestInt,The following statement contains a magic number: AssertHits(new FunctionQuery(new Int32FieldSource("int"))' new[] { 35f' 54f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestJoinDocFreq,The following statement contains a magic number: AssertHits(new FunctionQuery(new JoinDocFreqValueSource("string"' "text"))' new[] { 2f' 0f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestLinearFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new LinearSingleFunction(new ConstValueSource(2.0f)' 3' 1))' new[] { 7f' 7f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestLinearFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new LinearSingleFunction(new ConstValueSource(2.0f)' 3' 1))' new[] { 7f' 7f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestLinearFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new LinearSingleFunction(new ConstValueSource(2.0f)' 3' 1))' new[] { 7f' 7f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestLinearFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new LinearSingleFunction(new ConstValueSource(2.0f)' 3' 1))' new[] { 7f' 7f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestLong,The following statement contains a magic number: AssertHits(new FunctionQuery(new Int64FieldSource("long"))' new[] { 4343f' 1954f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestLong,The following statement contains a magic number: AssertHits(new FunctionQuery(new Int64FieldSource("long"))' new[] { 4343f' 1954f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMaxDoc,The following statement contains a magic number: AssertHits(new FunctionQuery(new MaxDocValueSource())' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMaxDoc,The following statement contains a magic number: AssertHits(new FunctionQuery(new MaxDocValueSource())' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMaxFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new MaxSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMaxFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new MaxSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMaxFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new MaxSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestMinFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new MinSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 1f' 1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestNumDocs,The following statement contains a magic number: AssertHits(new FunctionQuery(new NumDocsValueSource())' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestNumDocs,The following statement contains a magic number: AssertHits(new FunctionQuery(new NumDocsValueSource())' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestPow,The following statement contains a magic number: AssertHits(new FunctionQuery(new PowSingleFunction(new ConstValueSource(2f)' new ConstValueSource(3f)))' new[] { 8f' 8f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestPow,The following statement contains a magic number: AssertHits(new FunctionQuery(new PowSingleFunction(new ConstValueSource(2f)' new ConstValueSource(3f)))' new[] { 8f' 8f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestPow,The following statement contains a magic number: AssertHits(new FunctionQuery(new PowSingleFunction(new ConstValueSource(2f)' new ConstValueSource(3f)))' new[] { 8f' 8f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestPow,The following statement contains a magic number: AssertHits(new FunctionQuery(new PowSingleFunction(new ConstValueSource(2f)' new ConstValueSource(3f)))' new[] { 8f' 8f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestProduct,The following statement contains a magic number: AssertHits(new FunctionQuery(new ProductSingleFunction(new ValueSource[] { new ConstValueSource(2f)' new ConstValueSource(3f) }))' new[] { 6f' 6f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestProduct,The following statement contains a magic number: AssertHits(new FunctionQuery(new ProductSingleFunction(new ValueSource[] { new ConstValueSource(2f)' new ConstValueSource(3f) }))' new[] { 6f' 6f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestProduct,The following statement contains a magic number: AssertHits(new FunctionQuery(new ProductSingleFunction(new ValueSource[] { new ConstValueSource(2f)' new ConstValueSource(3f) }))' new[] { 6f' 6f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestProduct,The following statement contains a magic number: AssertHits(new FunctionQuery(new ProductSingleFunction(new ValueSource[] { new ConstValueSource(2f)' new ConstValueSource(3f) }))' new[] { 6f' 6f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestQuery,The following statement contains a magic number: AssertHits(new FunctionQuery(new QueryValueSource(new FunctionQuery(new ConstValueSource(2f))' 0f))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestQuery,The following statement contains a magic number: AssertHits(new FunctionQuery(new QueryValueSource(new FunctionQuery(new ConstValueSource(2f))' 0f))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestQuery,The following statement contains a magic number: AssertHits(new FunctionQuery(new QueryValueSource(new FunctionQuery(new ConstValueSource(2f))' 0f))' new[] { 2f' 2f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' 1' 0f))' new[] { 1f' 0f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' 1' 0f))' new[] { 1f' 0f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestRangeMap,The following statement contains a magic number: AssertHits(new FunctionQuery(new RangeMapSingleFunction(new SingleFieldSource("float")' 5' 6' new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) })' new ConstValueSource(11f)))' new[] { 3f' 11f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestReciprocal,The following statement contains a magic number: AssertHits(new FunctionQuery(new ReciprocalSingleFunction(new ConstValueSource(2f)' 3' 1' 4))' new[] { 0.1f' 0.1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestReciprocal,The following statement contains a magic number: AssertHits(new FunctionQuery(new ReciprocalSingleFunction(new ConstValueSource(2f)' 3' 1' 4))' new[] { 0.1f' 0.1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestReciprocal,The following statement contains a magic number: AssertHits(new FunctionQuery(new ReciprocalSingleFunction(new ConstValueSource(2f)' 3' 1' 4))' new[] { 0.1f' 0.1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestReciprocal,The following statement contains a magic number: AssertHits(new FunctionQuery(new ReciprocalSingleFunction(new ConstValueSource(2f)' 3' 1' 4))' new[] { 0.1f' 0.1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestReciprocal,The following statement contains a magic number: AssertHits(new FunctionQuery(new ReciprocalSingleFunction(new ConstValueSource(2f)' 3' 1' 4))' new[] { 0.1f' 0.1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestShort,The following statement contains a magic number: AssertHits(new FunctionQuery(new Int16FieldSource("short"))' new[] { 945f' 123f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestShort,The following statement contains a magic number: AssertHits(new FunctionQuery(new Int16FieldSource("short"))' new[] { 945f' 123f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestSumFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 3f' 3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestSumFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 3f' 3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestSumFloat,The following statement contains a magic number: AssertHits(new FunctionQuery(new SumSingleFunction(new ValueSource[] { new ConstValueSource(1f)' new ConstValueSource(2f) }))' new[] { 3f' 3f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTermFreq,The following statement contains a magic number: AssertHits(new FunctionQuery(new TermFreqValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { 3f' 1f });
Magic Number,Lucene.Net.Tests.Queries.Function,TestValueSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestValueSources.cs,TestTF,The following statement contains a magic number: AssertHits(new FunctionQuery(new TFValueSource("bogus"' "bogus"' "text"' new BytesRef("test")))' new[] { (float)Math.Sqrt(3d)' (float)Math.Sqrt(1d) });
Magic Number,Lucene.Net.Tests.Queries.Mlt,TestMoreLikeThis,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Mlt\TestMoreLikeThis.cs,TestBoostFactor,The following statement contains a magic number: float boostFactor = 5;
Magic Number,Lucene.Net.Tests.Queries.Mlt,TestMoreLikeThis,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Mlt\TestMoreLikeThis.cs,TestBoostFactor,The following statement contains a magic number: assertEquals("Expected boost of " + totalBoost + " for term '" + tq.Term.Text() + "' got " + tq.Boost' totalBoost' tq.Boost' 0.0001);
Missing Default,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following switch statement is missing a default case: switch (type)                  {                      case DocValuesType.SORTED:                      case DocValuesType.BINARY:                          do                          {                              vals[i] = TestUtil.RandomSimpleString(Random' 20);                          } while (((string)vals[i]).Length == 0);                          f.SetBytesValue(new BytesRef((string)vals[i]));                          break;                      case DocValuesType.NUMERIC:                          int bitsPerValue = RandomInts.RandomInt32Between(Random' 1' 31); // keep it an int                          vals[i] = (long)Random.Next((int)PackedInt32s.MaxValue(bitsPerValue));                          f.SetInt64Value((long) vals[i]);                          break;                  }
Missing Default,Lucene.Net.Tests.Queries.Function,TestDocValuesFieldSources,D:\research\architectureSmells\repos\apache_lucenenet\src\Lucene.Net.Tests.Queries\Function\TestDocValuesFieldSources.cs,DoTest,The following switch statement is missing a default case: switch (type)                      {                          case DocValuesType.SORTED:                              values.OrdVal(i); // no exception                              assertTrue(values.NumOrd >= 1);                              goto case DocValuesType.BINARY;                          case DocValuesType.BINARY:                              assertEquals(expected' values.ObjectVal(i));                              assertEquals(expected' values.StrVal(i));                              assertEquals(expected' values.ObjectVal(i));                              assertEquals(expected' values.StrVal(i));                              assertTrue(values.BytesVal(i' bytes));                              assertEquals(new BytesRef((string)expected)' bytes);                              break;                          case DocValuesType.NUMERIC:                              assertEquals(Convert.ToInt64(expected' CultureInfo.InvariantCulture)' values.Int64Val(i));                              break;                      }
