Implementation smell,Namespace,Class,File,Method,Description
Long Method,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,ConventionManager,The method has 129 lines of code.
Complex Method,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,Invoke,Cyclomatic complexity of the method is 9
Complex Method,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,TryFindGuardMethod,Cyclomatic complexity of the method is 9
Complex Method,Caliburn.Micro,MessageBinder,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\MessageBinder.cs,CoerceValue,Cyclomatic complexity of the method is 8
Long Parameter List,Caliburn.Micro,Action,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Action.cs,Invoke,The method has 6 parameters. Parameters: target' methodName' view' source' eventArgs' parameters
Long Parameter List,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,SetBindingWithoutBindingOverwrite,The method has 6 parameters. Parameters: viewModelType' path' property' element' convention' bindableProperty
Long Parameter List,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,SetBindingWithoutBindingOrValueOverwrite,The method has 6 parameters. Parameters: viewModelType' path' property' element' convention' bindableProperty
Long Parameter List,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,RegisterAttached,The method has 5 parameters. Parameters: name' propertyType' ownerType' defaultValue' propertyChangedCallback
Long Parameter List,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,Register,The method has 5 parameters. Parameters: name' propertyType' ownerType' defaultValue' propertyChangedCallback
Long Parameter List,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,BindParameter,The method has 5 parameters. Parameters: target' parameter' elementName' path' bindingMode
Long Identifier,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,ApplyHeaderTemplate,The length of the parameter headerTemplateSelectorProperty is 30.
Long Statement,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,ElementLoaded,The length of the statement  "            const string bindingText = "<Binding xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation\' xmlns:cal='clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform' Path='(cal:Message.Handler)' />"; " is 211.
Long Statement,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,Invoke,The length of the statement  "                var ex = new Exception(string.Format("Method {0} not found on target of type {1}."' context.Message.MethodName' context.Target.GetType())); " is 139.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,RegisterAttached,The length of the statement  "            return DependencyProperty.CreateAttached(name' propertyType' ownerType' defaultValue' propertyChanged: (obj' oldValue' newValue) => { " is 133.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,RegisterAttached,The length of the statement  "            return DependencyProperty.RegisterAttached(name' propertyType' ownerType' new PropertyMetadata(defaultValue' propertyChangedCallback)); " is 135.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,Register,The length of the statement  "            return DependencyProperty.Create(name' propertyType' ownerType' defaultValue' propertyChanged: (obj' oldValue' newValue) => " is 123.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,Register,The length of the statement  "            return DependencyProperty.Register(name' propertyType' ownerType' new PropertyMetadata(defaultValue' propertyChangedCallback)); " is 127.
Long Statement,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,CreateMessage,The length of the statement  "                    var paramString = messageText.Substring(openingParenthesisIndex + 1' closingParenthesisIndex - openingParenthesisIndex - 1); " is 124.
Long Statement,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,BindParameter,The length of the statement  "            var field = element.GetType().GetField(path + "Property"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 133.
Long Statement,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,BindParameter,The length of the statement  "            ConventionManager.ApplySilverlightTriggers(element' (DependencyProperty)field.GetValue(null)' x => expression' null' null); " is 123.
Long Statement,Caliburn.Micro,CachingFrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\CachingFrameAdapter.cs,OnNavigating,The length of the statement  "                    Log.Info("Pushing view model of type {0} on to the forward stack"' viewModel == null ? "null" : viewModel.GetType().Name); " is 122.
Long Statement,Caliburn.Micro,CachingFrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\CachingFrameAdapter.cs,OnNavigating,The length of the statement  "                    Log.Info("Pushing view model of type {0} on to the forward stack"' viewModel == null ? "null" : viewModel.GetType().Name); " is 122.
Long Statement,Caliburn.Micro,CachingFrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\CachingFrameAdapter.cs,OnNavigated,The length of the statement  "                    Log.Info("Popping view model of type {0} off the forward stack"' viewModel == null ? "null" : viewModel.GetType().Name); " is 120.
Long Statement,Caliburn.Micro,NavigateHelper<TViewModel>,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\NavigateHelper.cs,BuildUri,The length of the statement  "                throw new InvalidOperationException(string.Format("No view was found for {0}. See the log for searched views."' typeof(TViewModel).FullName)); " is 142.
Long Statement,Caliburn.Micro,XamlPlatformProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\XamlPlatformProvider.cs,OnUIThread,The length of the statement  "                    throw new System.Reflection.TargetInvocationException("An error occurred while dispatching a call to the UI Thread"' exception); " is 128.
Long Statement,Caliburn.Micro,XamlPlatformProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\XamlPlatformProvider.cs,OnUIThread,The length of the statement  "                    throw new System.Reflection.TargetInvocationException("An error occurred while dispatching a call to the UI Thread"' exception); " is 128.
Long Statement,Caliburn.Micro,XamlPlatformProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\XamlPlatformProvider.cs,GetViewCloseAction,The length of the statement  "            return () => LogManager.GetLog(typeof(Screen)).Info("TryClose requires a parent IConductor or a view with a Close method or IsOpen property."); " is 143.
Complex Conditional,Caliburn.Micro,ScopeNamingRoute,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\BindingScope.cs,AddHop,The conditional expression  "path.Count > 0 &&                      !path.ContainsKey(from) &&                      !path.ContainsKey(to) &&                      !path.ContainsValue(from) &&                      !path.ContainsValue(from)"  is complex.
Missing Default,Caliburn.Micro,AttachedCollection<T>,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\AttachedCollection.81.cs,OnVectorChanged,The following switch statement is missing a default case: switch (@event.CollectionChange) {                  case CollectionChange.ItemInserted:                      OnItemAdded(this[(int) @event.Index]);                      break;                  case CollectionChange.ItemRemoved:                      OnItemRemoved(this[(int) @event.Index]);                      break;                  case CollectionChange.Reset:                      this.Apply(OnItemRemoved);                      this.Apply(OnItemAdded);                      break;              }
Missing Default,Caliburn.Micro,CachingFrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\CachingFrameAdapter.cs,OnNavigating,The following switch statement is missing a default case: switch (e.NavigationMode)              {                  case NavigationMode.Back:                        Log.Info("Pushing view model of type {0} on to the forward stack"' viewModel == null ? "null" : viewModel.GetType().Name);                        viewModelForwardStack.Add(viewModel);                        break;                    case NavigationMode.Forward:                  case NavigationMode.Refresh:                        Log.Info("Pushing view model of type {0} on to the back stack"' viewModel == null ? "null" : viewModel.GetType().Name);                        viewModelBackStack.Add(viewModel);                        break;                    case NavigationMode.New:                        Log.Info("Pushing view model of type {0} on to the forward stack"' viewModel == null ? "null" : viewModel.GetType().Name);                      Log.Info("Clearing the forward stack");                        viewModelBackStack.Add(viewModel);                      viewModelForwardStack.Clear();                        break;              }
Missing Default,Caliburn.Micro,CachingFrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\CachingFrameAdapter.cs,OnNavigated,The following switch statement is missing a default case: switch (e.NavigationMode)              {                  case NavigationMode.Back:                  {                      var viewModel = PopOffStack(viewModelBackStack);                        Log.Info("Popping view model of type {0} off the back stack"' viewModel == null ? "null" : viewModel.GetType().Name);                        BindViewModel(view' viewModel);                        break;                  }                  case NavigationMode.Forward:                  {                      var viewModel = PopOffStack(viewModelForwardStack);                        Log.Info("Popping view model of type {0} off the forward stack"' viewModel == null ? "null" : viewModel.GetType().Name);                        BindViewModel(view' viewModel);                        break;                  }                  case NavigationMode.New:                  case NavigationMode.Refresh:                        BindViewModel(view);                        break;              }
Missing Default,Caliburn.Micro,CachingFrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\CachingFrameAdapter.cs,ApplyCollectionChanges,The following switch statement is missing a default case: switch (e.Action) {                  case NotifyCollectionChangedAction.Add:                        for (var i = 0; i < e.NewItems.Count; i++) {                          viewModels.Insert(e.NewStartingIndex + i' null);                          frameEntries.Insert(e.NewStartingIndex + i' (PageStackEntry) e.NewItems[i]);                      }                        break;                  case NotifyCollectionChangedAction.Move:                        var viewModelItems = viewModels.Skip(e.OldStartingIndex).Take(e.OldItems.Count).ToList();                      var entryItems = frameEntries.Skip(e.OldStartingIndex).Take(e.OldItems.Count).ToList();                        for (var i = 0; i < e.OldItems.Count; i++) {                          viewModels.RemoveAt(e.OldStartingIndex);                          frameEntries.RemoveAt(e.OldStartingIndex);                      }                        for (var i = 0; i < viewModelItems.Count; i++) {                          viewModels.Insert(e.NewStartingIndex + i' viewModelItems[i]);                          frameEntries.Insert(e.NewStartingIndex + i' entryItems[i]);                      }                        break;                  case NotifyCollectionChangedAction.Remove:                        for (var i = 0; i < e.OldItems.Count; i++) {                          viewModels.RemoveAt(e.OldStartingIndex);                          frameEntries.RemoveAt(e.OldStartingIndex);                      }                        break;                  case NotifyCollectionChangedAction.Replace:                        for (var i = 0; i < e.OldItems.Count; i++) {                          viewModels.RemoveAt(e.OldStartingIndex);                          frameEntries.RemoveAt(e.OldStartingIndex);                      }                        for (var i = 0; i < e.NewItems.Count; i++) {                          viewModels.Insert(e.NewStartingIndex + i' null);                          frameEntries.Insert(e.NewStartingIndex + i' (PageStackEntry)e.NewItems[i]);                      }                        break;                  case NotifyCollectionChangedAction.Reset:                        viewModels.Clear();                      frameEntries.Clear();                        break;              }
Missing Default,Caliburn.Micro,XamlTypeInfoProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\XamlMetadataProvider.cs,CreateXamlType,The following switch statement is missing a default case: switch (typeName) {                  case "Object":                      xamlType = new XamlSystemBaseType(typeName' typeof (Object));                      break;                        //case "Caliburn.Micro.Message":                      //    userType = new XamlUserType(this' typeName' typeof(Caliburn.Micro.Message)' GetXamlTypeByName("Object"));                      //    userType.AddMemberName("Handler");                      //    AddToMapOfTypeToStandardName(typeof(System.Object)'                      //                                       "Object");                      //    xamlType = userType;                      //    break;                    case "Caliburn.Micro.View":                      userType = new XamlUserType(this' typeName' typeof (View)' GetXamlTypeByName("Object"));                      userType.AddMemberName("Model");                      AddToMapOfTypeToStandardName(typeof (Object)' "Object");                      xamlType = userType;                      break;                }
Missing Default,Caliburn.Micro,XamlTypeInfoProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\win8\XamlMetadataProvider.cs,CreateXamlMember,The following switch statement is missing a default case: switch (longMemberName) {                  case "Caliburn.Micro.View.Model":                      userType = (XamlUserType) GetXamlTypeByName("Caliburn.Micro.View");                      xamlMember = new XamlMember(this' "Model"' "Object");                      xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");                      xamlMember.SetIsAttachable();                      xamlMember.Getter = get_1_View_Model;                      xamlMember.Setter = set_1_View_Model;                      break;              }
