Implementation smell,Namespace,Class,File,Method,Description
Long Method,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,ConventionManager,The method has 129 lines of code.
Complex Method,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,Invoke,Cyclomatic complexity of the method is 9
Complex Method,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,TryFindGuardMethod,Cyclomatic complexity of the method is 9
Complex Method,Caliburn.Micro,MessageBinder,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\MessageBinder.cs,CoerceValue,Cyclomatic complexity of the method is 10
Long Parameter List,Caliburn.Micro,Action,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Action.cs,Invoke,The method has 6 parameters. Parameters: target' methodName' view' source' eventArgs' parameters
Long Parameter List,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,SetBindingWithoutBindingOverwrite,The method has 6 parameters. Parameters: viewModelType' path' property' element' convention' bindableProperty
Long Parameter List,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,SetBindingWithoutBindingOrValueOverwrite,The method has 6 parameters. Parameters: viewModelType' path' property' element' convention' bindableProperty
Long Parameter List,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,RegisterAttached,The method has 5 parameters. Parameters: name' propertyType' ownerType' defaultValue' propertyChangedCallback
Long Parameter List,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,Register,The method has 5 parameters. Parameters: name' propertyType' ownerType' defaultValue' propertyChangedCallback
Long Parameter List,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,BindParameter,The method has 5 parameters. Parameters: target' parameter' elementName' path' bindingMode
Long Identifier,Caliburn.Micro,ConventionManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ConventionManager.cs,ApplyHeaderTemplate,The length of the parameter headerTemplateSelectorProperty is 30.
Long Statement,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,ElementLoaded,The length of the statement  "            const string bindingText = "<Binding xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation\' xmlns:cal='clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform' Path='(cal:Message.Handler)' />"; " is 211.
Long Statement,Caliburn.Micro,ActionMessage,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\ActionMessage.cs,Invoke,The length of the statement  "                var ex = new Exception(string.Format("Method {0} not found on target of type {1}."' context.Message.MethodName' context.Target.GetType())); " is 139.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,RegisterAttached,The length of the statement  "            return DependencyProperty.CreateAttached(name' propertyType' ownerType' defaultValue' propertyChanged: (obj' oldValue' newValue) => { " is 133.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,RegisterAttached,The length of the statement  "            return DependencyProperty.RegisterAttached(name' propertyType' ownerType' new PropertyMetadata(defaultValue' propertyChangedCallback)); " is 135.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,Register,The length of the statement  "            return DependencyProperty.Create(name' propertyType' ownerType' defaultValue' propertyChanged: (obj' oldValue' newValue) => " is 123.
Long Statement,Caliburn.Micro,DependencyPropertyHelper,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\DependencyPropertyHelper.cs,Register,The length of the statement  "            return DependencyProperty.Register(name' propertyType' ownerType' new PropertyMetadata(defaultValue' propertyChangedCallback)); " is 127.
Long Statement,Caliburn.Micro,FrameAdapter,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\net40\INavigationService.cs,OnNavigated,The length of the statement  "                throw new ArgumentException("View '" + e.Content.GetType().FullName + "' should inherit from Page or one of its descendents."); " is 127.
Long Statement,Caliburn.Micro,WindowManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\net40\WindowManager.cs,CreateWindow,The length of the statement  "            if (string.IsNullOrEmpty(view.Title) && haveDisplayName != null && !ConventionManager.HasBinding(view' Window.TitleProperty)) { " is 127.
Long Statement,Caliburn.Micro,WindowManager,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\net40\WindowManager.cs,CreatePage,The length of the statement  "            if (string.IsNullOrEmpty(view.Title) && haveDisplayName != null && !ConventionManager.HasBinding(view' Page.TitleProperty)) { " is 125.
Long Statement,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,CreateMessage,The length of the statement  "                    var paramString = messageText.Substring(openingParenthesisIndex + 1' closingParenthesisIndex - openingParenthesisIndex - 1); " is 124.
Long Statement,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,BindParameter,The length of the statement  "            var field = element.GetType().GetField(path + "Property"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 133.
Long Statement,Caliburn.Micro,Parser,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\Parser.cs,BindParameter,The length of the statement  "            ConventionManager.ApplySilverlightTriggers(element' (DependencyProperty)field.GetValue(null)' x => expression' null' null); " is 123.
Long Statement,Caliburn.Micro,XamlPlatformProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\XamlPlatformProvider.cs,OnUIThread,The length of the statement  "                    throw new System.Reflection.TargetInvocationException("An error occurred while dispatching a call to the UI Thread"' exception); " is 128.
Long Statement,Caliburn.Micro,XamlPlatformProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\XamlPlatformProvider.cs,OnUIThread,The length of the statement  "                    throw new System.Reflection.TargetInvocationException("An error occurred while dispatching a call to the UI Thread"' exception); " is 128.
Long Statement,Caliburn.Micro,XamlPlatformProvider,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\XamlPlatformProvider.cs,GetViewCloseAction,The length of the statement  "            return () => LogManager.GetLog(typeof(Screen)).Info("TryClose requires a parent IConductor or a view with a Close method or IsOpen property."); " is 143.
Complex Conditional,Caliburn.Micro,ScopeNamingRoute,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\BindingScope.cs,AddHop,The conditional expression  "path.Count > 0 &&                      !path.ContainsKey(from) &&                      !path.ContainsKey(to) &&                      !path.ContainsValue(from) &&                      !path.ContainsValue(from)"  is complex.
Missing Default,Caliburn.Micro,AttachedCollection<T>,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro.Platform\net40\AttachedCollection.cs,OnCollectionChanged,The following switch statement is missing a default case: switch(e.Action) {                  case NotifyCollectionChangedAction.Add:                      e.NewItems.OfType<T>().Where(x => !Contains(x)).Apply(OnItemAdded);                      break;                  case NotifyCollectionChangedAction.Remove:                      e.OldItems.OfType<T>().Apply(OnItemRemoved);                      break;                  case NotifyCollectionChangedAction.Replace:                      e.OldItems.OfType<T>().Apply(OnItemRemoved);                      e.NewItems.OfType<T>().Where(x => !Contains(x)).Apply(OnItemAdded);                      break;                  case NotifyCollectionChangedAction.Reset:                      this.Apply(OnItemRemoved);                      this.Apply(OnItemAdded);                      break;              }
