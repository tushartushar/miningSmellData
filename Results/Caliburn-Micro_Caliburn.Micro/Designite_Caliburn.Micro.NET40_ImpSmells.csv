Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Caliburn.Micro,DefaultCloseStrategy<T>,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\DefaultCloseStrategy.cs,DefaultCloseStrategy,The length of the parameter closeConductedItemsWhenConductorCannotClose is 43.
Long Identifier,Caliburn.Micro,DefaultCloseStrategy<T>,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\DefaultCloseStrategy.cs,,The length of the parameter closeConductedItemsWhenConductorCannotClose is 43.
Long Statement,Caliburn.Micro,EventAggregatorExtensions,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\EventAggregatorExtensions.cs,PublishOnBackgroundThread,The length of the statement  "            eventAggregator.Publish(message' action => Task.Factory.StartNew(action' CancellationToken.None' TaskCreationOptions.None' TaskScheduler.Default)); " is 147.
Long Statement,Caliburn.Micro,WeakValueDictionary<TKey;TValue>,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\WeakValueDictionary.cs,CopyTo,The length of the statement  "                    "The number of elements in the source collection is greater than the available space from arrayIndex to the end of the destination array."); " is 140.
Long Statement,Caliburn.Micro,ValueCollection,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\WeakValueDictionary.cs,CopyTo,The length of the statement  "                        "The number of elements in the source collection is greater than the available space from arrayIndex to the end of the destination array."); " is 140.
Missing Default,Caliburn.Micro,AllActive,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\ConductorWithCollectionAllActive.cs,AllActive,The following switch statement is missing a default case: switch (e.Action) {                              case NotifyCollectionChangedAction.Add:                                  e.NewItems.OfType<IChild>().Apply(x => x.Parent = this);                                  break;                              case NotifyCollectionChangedAction.Remove:                                  e.OldItems.OfType<IChild>().Apply(x => x.Parent = null);                                  break;                              case NotifyCollectionChangedAction.Replace:                                  e.NewItems.OfType<IChild>().Apply(x => x.Parent = this);                                  e.OldItems.OfType<IChild>().Apply(x => x.Parent = null);                                  break;                              case NotifyCollectionChangedAction.Reset:                                  items.OfType<IChild>().Apply(x => x.Parent = this);                                  break;                          }
Missing Default,Caliburn.Micro,OneActive,C:\repos\Caliburn-Micro_Caliburn.Micro\src\Caliburn.Micro\ConductorWithCollectionOneActive.cs,OneActive,The following switch statement is missing a default case: switch(e.Action) {                              case NotifyCollectionChangedAction.Add:                                  e.NewItems.OfType<IChild>().Apply(x => x.Parent = this);                                  break;                              case NotifyCollectionChangedAction.Remove:                                  e.OldItems.OfType<IChild>().Apply(x => x.Parent = null);                                  break;                              case NotifyCollectionChangedAction.Replace:                                  e.NewItems.OfType<IChild>().Apply(x => x.Parent = this);                                  e.OldItems.OfType<IChild>().Apply(x => x.Parent = null);                                  break;                              case NotifyCollectionChangedAction.Reset:                                  items.OfType<IChild>().Apply(x => x.Parent = this);                                  break;                          }
