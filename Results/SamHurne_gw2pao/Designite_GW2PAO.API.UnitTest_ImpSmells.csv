Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_SomeInvalid,The length of the statement  "            Console.WriteLine("To retrieve details {0} items using a valid and invalid IDs' it took {1}ms"' ids.Count' sw.ElapsedMilliseconds); " is 131.
Long Statement,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItemPrices_Multiple_Invalid,The length of the statement  "            Console.WriteLine("To retrieve prices of {0} items using invalid IDs' it took {1}ms"' ids.Count' sw.ElapsedMilliseconds); " is 121.
Long Statement,GW2PAO.API.UnitTest,MegaserverEventTimeTableTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\MegaserverEventTimeTableTests.cs,MegaserverEventTimeTable_LoadTable_Standard_UniqueTimes,The length of the statement  "                Assert.AreEqual(worldEvent.ActiveTimes.Count' worldEvent.ActiveTimes.GroupBy(t => t.XmlTime).Select(at => at.First()).ToList().Count); " is 134.
Long Statement,GW2PAO.API.UnitTest,MegaserverEventTimeTableTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\MegaserverEventTimeTableTests.cs,MegaserverEventTimeTable_LoadTable_Adjusted_UniqueTimes,The length of the statement  "                Assert.AreEqual(worldEvent.ActiveTimes.Count' worldEvent.ActiveTimes.GroupBy(t => t.XmlTime).Select(at => at.First()).ToList().Count); " is 134.
Long Statement,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_Id_Success_Warmup,The length of the statement  "            var activeTime = DateTimeOffset.UtcNow.Date.Add(validEvent.ActiveTimes[0].Time).AddMinutes((validEvent.WarmupDuration.Time.TotalMinutes * - 1) + 1); " is 148.
Long Statement,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_WorldEvent_Success_Warmup,The length of the statement  "            var activeTime = DateTimeOffset.UtcNow.Date.Add(validEvent.ActiveTimes[0].Time).AddMinutes((validEvent.WarmupDuration.Time.TotalMinutes * -1) + 1); " is 147.
Long Statement,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_TimeDistance,The length of the statement  "            expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / CalcUtil.DistanceToTimeFactor; " is 135.
Long Statement,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateAngle_Basic,The length of the statement  "            expAngle = System.Windows.Vector.AngleBetween(new System.Windows.Vector(vA.X' vA.Y)' new System.Windows.Vector(vB.X' vB.Y)); " is 124.
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_AllValid,The following statement contains a magic number: List<int> ids = new List<int>(cs.ItemsDB.Keys.Take(200));
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_AllInvalid,The following statement contains a magic number: i > -200
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_SomeInvalid,The following statement contains a magic number: i > -50
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_SomeInvalid,The following statement contains a magic number: ids.AddRange(cs.ItemsDB.Keys.Take(100));
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_SomeInvalid,The following statement contains a magic number: i > -200
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItems_ByID_SomeInvalid,The following statement contains a magic number: Assert.AreEqual(100' items.Count);
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItemPrices_Multiple_Valid,The following statement contains a magic number: List<int> ids = new List<int>(cs.ItemsDB.Keys.Take(100));
Magic Number,GW2PAO.API.UnitTest,CommerceServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\CommerceServiceTests.cs,CommerceService_GetItemPrices_Multiple_Invalid,The following statement contains a magic number: i > -200
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_Id_Success_Inactive,The following statement contains a magic number: var activeTime = DateTimeOffset.UtcNow.Date.Add(validEvent.ActiveTimes[0].Time).AddMinutes(-10);
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_WorldEvent_Success_Inactive,The following statement contains a magic number: var activeTime = DateTimeOffset.UtcNow.Date.Add(validEvent.ActiveTimes[0].Time).AddMinutes(-10);
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success,The following statement contains a magic number: testEvent.ActiveTimes.Add(new SerializableTimespan(2' 0' 0));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 0' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 0' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 0' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success,The following statement contains a magic number: Assert.AreEqual(new TimeSpan(2' 0' 0)' timeUntilActive);
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success_RollOver,The following statement contains a magic number: testEvent.ActiveTimes.Add(new SerializableTimespan(2' 0' 0));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 3' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 3' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 3' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 3' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeUntilActive_Success_RollOver,The following statement contains a magic number: Assert.AreEqual(new TimeSpan(23' 0' 0)' timeUntilActive);
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success,The following statement contains a magic number: testEvent.ActiveTimes.Add(new SerializableTimespan(2' 0' 0));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 4' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 4' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 4' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 4' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success,The following statement contains a magic number: Assert.AreEqual(new TimeSpan(2' 0' 0)' timeUntilActive);
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 23' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 23' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 23' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success_RollOver,The following statement contains a magic number: timeMock.Setup(t => t.CurrentTime).Returns(new DateTimeOffset(new DateTime(2014' 10' 22' 23' 0' 0)));
Magic Number,GW2PAO.API.UnitTest,EventsServiceTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\EventsServiceTests.cs,EventsService_GetState_GetTimeSinceActive_Success_RollOver,The following statement contains a magic number: Assert.AreEqual(new TimeSpan(22' 0' 0)' timeUntilActive);
Magic Number,GW2PAO.API.UnitTest,ItemsDatabaseBuilderTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\ItemsDatabaseBuilderTests.cs,RebuildItemDatabase_RebuildItemDatabase_Success,The following statement contains a magic number: totalRequests = dbBuilder.RebuildItemDatabase(                  CultureInfo.CurrentUICulture'                  () =>                  {                      progress++;                      Console.WriteLine("Rebuild at {0} percent"' ((double)progress / (double)totalRequests) * 100);                      progressEvent.Set();                  }'                  () =>                  {                      Console.WriteLine("Rebuild complete");                      completedEvent.Set();                  }'                  cancelToken.Token);
Magic Number,GW2PAO.API.UnitTest,ItemsDatabaseBuilderTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\ItemsDatabaseBuilderTests.cs,RebuildItemDatabase_RebuildItemDatabase_Canceled,The following statement contains a magic number: totalRequests = dbBuilder.RebuildItemDatabase(                  CultureInfo.CurrentUICulture'                  () =>                  {                      progress++;                      Console.WriteLine("Rebuild at {0} percent"' ((double)progress / (double)totalRequests) * 100);                      progressEvent.Set();                  }'                  () =>                  {                      Console.WriteLine("Rebuild complete");                      completedEvent.Set();                  }'                  cancelToken.Token);
Magic Number,GW2PAO.API.UnitTest,ItemsDatabaseBuilderTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\ItemsDatabaseBuilderTests.cs,RebuildItemDatabase_RebuildItemDatabase_Canceled,The following statement contains a magic number: Assert.IsTrue(progressEvent.WaitOne(5000));
Magic Number,GW2PAO.API.UnitTest,ItemsDatabaseBuilderTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\ItemsDatabaseBuilderTests.cs,RebuildItemDatabase_RebuildItemDatabase_Canceled,The following statement contains a magic number: i <= 3
Magic Number,GW2PAO.API.UnitTest,ItemsDatabaseBuilderTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\ItemsDatabaseBuilderTests.cs,RebuildItemDatabase_RebuildItemDatabase_Canceled,The following statement contains a magic number: Assert.IsTrue(progressEvent.WaitOne(5000));
Magic Number,GW2PAO.API.UnitTest,ItemsDatabaseBuilderTests,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\ItemsDatabaseBuilderTests.cs,RebuildItemDatabase_RebuildItemDatabase_Canceled,The following statement contains a magic number: Assert.IsFalse(progressEvent.WaitOne(5000));
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_NoUnits,The following statement contains a magic number: Point ptB = new Point(10' 0);
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_NoUnits,The following statement contains a magic number: double expDist = 10.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_NoUnits,The following statement contains a magic number: expDist = Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2));
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_NoUnits,The following statement contains a magic number: expDist = Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2));
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Feet,The following statement contains a magic number: Point ptB = new Point(0' -10);
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Feet,The following statement contains a magic number: double expDist = 10.0 / 12.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Feet,The following statement contains a magic number: double expDist = 10.0 / 12.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Feet,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / 12.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Feet,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / 12.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Feet,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / 12.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: Point ptA = new Point(0' 10);
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: Point ptB = new Point(0' -10);
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: double expDist = 20.0 / 39.3701;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: double expDist = 20.0 / 39.3701;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / 39.3701;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / 39.3701;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_Meters,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / 39.3701;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_TimeDistance,The following statement contains a magic number: Point ptA = new Point(-10' 0);
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_TimeDistance,The following statement contains a magic number: Point ptB = new Point(10' 0);
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_TimeDistance,The following statement contains a magic number: double expDist = 20.0 / CalcUtil.DistanceToTimeFactor;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_TimeDistance,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / CalcUtil.DistanceToTimeFactor;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateDistance_TimeDistance,The following statement contains a magic number: expDist = (Math.Sqrt(Math.Pow(Math.Abs((ptB.X - ptA.X))' 2) + Math.Pow(Math.Abs((ptB.Y - ptA.Y))' 2))) / CalcUtil.DistanceToTimeFactor;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateAngle_Basic,The following statement contains a magic number: double expAngle = 90.0;
Magic Number,GW2PAO.API.UnitTest.Util,CalcUtilUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\CalcUtilUnitTest.cs,CalculateAngle_Basic,The following statement contains a magic number: Assert.AreEqual(expAngle' angle' 0.0005);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: var mapRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: var mapRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: var continentRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: var continentRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: Assert.AreEqual(inputPoint.X' worldPos.X' 0.5);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: Assert.AreEqual(inputPoint.Y' worldPos.Y' 0.5);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_NoZoom,The following statement contains a magic number: Assert.AreEqual(inputPoint.Z' worldPos.Z' 0.5);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: var mapRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: var mapRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: var continentRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: var continentRectangle = new Data.Entities.Rectangle() { X = x' Y = y' Width = 100' Height = 100 };
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: Point mapPos = MapsHelper.ConvertToMapPos(continentRectangle' mapRectangle' inputPoint' maxZoom / 2' maxZoom);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: Point worldPos = MapsHelper.ConvertToWorldPos(continentRectangle' mapRectangle' mapPos' maxZoom / 2' maxZoom);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: Assert.AreEqual(inputPoint.X' worldPos.X' 0.5);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: Assert.AreEqual(inputPoint.Y' worldPos.Y' 0.5);
Magic Number,GW2PAO.API.UnitTest.Util,MapsHelperUnitTest,D:\research\architectureSmells\repos1\SamHurne_gw2pao\UnitTests\GW2PAO.API.UnitTest\Util\MapsHelperUnitTest.cs,ConvertToMapPos_ConvertToWorldPos_Equals_OriginalInput_WithZoom,The following statement contains a magic number: Assert.AreEqual(inputPoint.Z' worldPos.Z' 0.5);
