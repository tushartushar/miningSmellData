Implementation smell,Namespace,Class,File,Method,Description
Long Method,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The method has 111 lines of code.
Complex Method,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,Cyclomatic complexity of the method is 25
Complex Method,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,Cyclomatic complexity of the method is 21
Complex Method,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,Cyclomatic complexity of the method is 61
Complex Method,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Draw,Cyclomatic complexity of the method is 18
Complex Method,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,GetLevelDictFromGameObjects,Cyclomatic complexity of the method is 13
Complex Method,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,Cyclomatic complexity of the method is 26
Long Parameter List,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Gun,The method has 12 parameters.
Long Parameter List,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,HUD,The method has 6 parameters.
Long Statement,RobotRampage,Bullet,C:\repos\Cprice1771_RobotRampage\RobotRampage\Bullet.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,Bullet,C:\repos\Cprice1771_RobotRampage\RobotRampage\Bullet.cs,Draw,The length of the statement  "	sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width' texture.Height)' 1.0f' SpriteEffects.FlipHorizontally' 1.0f); " is 152.
Long Statement,RobotRampage,Bullet,C:\repos\Cprice1771_RobotRampage\RobotRampage\Bullet.cs,OffScreen,The length of the statement  "	if ((ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) > MainGame.ScreenHeight || (ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) < 0 || (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) > MainGame.ScreenWidth || (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) < 0) " is 336.
Long Statement,RobotRampage,Crosshair,C:\repos\Cprice1771_RobotRampage\RobotRampage\Crosshair.cs,Update,The length of the statement  "	position = new Vector2 ((Mouse.GetState ().X - texture.Width / 2) - parent.CameraOffset.X' (Mouse.GetState ().Y - texture.Height / 2) - parent.CameraOffset.Y); " is 159.
Long Statement,RobotRampage,Doodad,C:\repos\Cprice1771_RobotRampage\RobotRampage\Doodad.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (location.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (location.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,Doodad,C:\repos\Cprice1771_RobotRampage\RobotRampage\Doodad.cs,Draw,The length of the statement  "	sb.Draw (texture' offset' new Rectangle (0' 0' texture.Width' texture.Height)' Color.White' 0.0f' new Vector2 (0' 0)' 1.0f' SpriteEffects.None' 1.0f); " is 150.
Long Statement,RobotRampage,Explosion,C:\repos\Cprice1771_RobotRampage\RobotRampage\Explosion.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (position.X) + 75' ConvertUnits.ToDisplayUnits (position.Y) - srcRect.Height / 2); " is 140.
Long Statement,RobotRampage,Explosion,C:\repos\Cprice1771_RobotRampage\RobotRampage\Explosion.cs,Draw,The length of the statement  "	sb.Draw (this.texture' offset' srcRect' Color.White' 0.0f' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f); " is 144.
Long Statement,RobotRampage,Floor,C:\repos\Cprice1771_RobotRampage\RobotRampage\Floor.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The length of the statement  "		sb.Draw (this.Texture' offset' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.FlipVertically' 1.0f); " is 154.
Long Statement,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The length of the statement  "		sb.Draw (this.Texture' position' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.None' 1.0f); " is 146.
Long Statement,RobotRampage,HealthBar,C:\repos\Cprice1771_RobotRampage\RobotRampage\HealthBar.cs,Draw,The length of the statement  "	sb.Draw (this.texture' Position' srcRect' Color.White' 0.0f' new Vector2 (texture.Width / 2' FRAME_SIZE / 2)' 1.0f' SpriteEffects.None' 1.0f); " is 142.
Long Statement,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The length of the statement  "	//sb.DrawString(font' "Heath: " + Health' HEALTH_LOCATION - parent.CameraOffset' Color.Black' 0.0f' new Vector2(0' 0)' 1.2f' SpriteEffects.None' 1.0f); " is 151.
Long Statement,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The length of the statement  "		sb.DrawString (font' "Ammo: " + AmmoLoaded' AMMO_LOCATION - parent.CameraOffset' Color.Black' 0.0f' new Vector2 (0' 0)' 1.5f' SpriteEffects.None' 1.0f); " is 152.
Long Statement,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The length of the statement  "		sb.DrawString (font' "Reloading..."' AMMO_LOCATION - parent.CameraOffset' Color.Red' 0.0f' new Vector2 (0' 0)' 1.2f' SpriteEffects.None' 1.0f); " is 143.
Long Statement,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The length of the statement  "		sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f); " is 292.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 172.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 171.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 172.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 179.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 175.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 173.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The length of the statement  "					mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2])); " is 173.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,GetLevelDimensions,The length of the statement  "	return new Rectangle ((int)ConvertUnits.ToDisplayUnits (minX)' (int)ConvertUnits.ToDisplayUnits (minY)' (int)ConvertUnits.ToDisplayUnits (maxX - minX)' (int)ConvertUnits.ToDisplayUnits (maxY - minY)); " is 200.
Long Statement,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The length of the statement  "				SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2]))); " is 135.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Initialize,The length of the statement  "	hud = new HUD (player.Inventory' player.EquipedWeaponSlot' new Vector2 (0' 0)' font' this' new HealthBar (healthTextureSheet' this)); " is 133.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The length of the statement  "	assualtRifle = new Gun (defaultGunTexture' initialPlayerPosition' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound); " is 152.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The length of the statement  "	shotGun = new Gun (shotGunTexture' initialPlayerPosition' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound); " is 152.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The length of the statement  "	//handGun = new Gun(handGunTexture' initialPlayerPosition' this' 40' 10' 5.0f' 200' 500.0' 800.0' CreateBullet' rifleShootSound' emptyGunSound); " is 144.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The length of the statement  "	RocketLauncher = new Gun (rocketLauncherTexture' initialPlayerPosition' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound); " is 161.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The length of the statement  "	if (GamePad.GetState (PlayerIndex.One).Buttons.Back == ButtonState.Pressed || Keyboard.GetState ().IsKeyDown (Keys.Escape)) " is 123.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The length of the statement  "		if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD) " is 120.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The length of the statement  "			gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0)); " is 158.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The length of the statement  "			gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0)); " is 144.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The length of the statement  "			gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400)))); " is 129.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The length of the statement  "			gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD)))); " is 144.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Draw,The length of the statement  "		spriteBatch.Begin (SpriteSortMode.FrontToBack' BlendState.Opaque' SamplerState.LinearWrap' DepthStencilState.Default' RasterizerState.CullNone' null' viewMaxtrix * Matrix.CreateScale (new Vector3 (GetScreenScale ().X' GetScreenScale ().Y' GetScreenScale ().Z))); " is 262.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Draw,The length of the statement  "	spriteBatch.Begin (SpriteSortMode.Deferred' BlendState.NonPremultiplied' null' null' null' null' viewMaxtrix * Matrix.CreateScale (GetScreenScale ())); " is 151.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The length of the statement  "	//player.Position = new Vector2(singlePlayerLevels[currentLevel].Spawn.location.X + ConvertUnits.ToSimUnits(spawnPointTexture.Width / 2)' singlePlayerLevels[currentLevel].Spawn.location.Y + ConvertUnits.ToSimUnits(spawnPointTexture.Height / 2)); " is 245.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The length of the statement  "	player.Position = new Vector2 (singlePlayerLevels [currentLevel].SpawnLocation.X' singlePlayerLevels [currentLevel].SpawnLocation.Y); " is 133.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The length of the statement  "	assualtRifle = new Gun (defaultGunTexture' player.Position' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound); " is 146.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The length of the statement  "	shotGun = new Gun (shotGunTexture' player.Position' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound); " is 146.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The length of the statement  "	//handGun = new Gun(handGunTexture' player.Position' this' 40' 10' 5.0f' 200' 500.0' 800.0' CreateBullet' rifleShootSound' emptyGunSound); " is 138.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The length of the statement  "	RocketLauncher = new Gun (rocketLauncherTexture' player.Position' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound); " is 155.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateBullet,The length of the statement  "	bulletBody.ApplyForce (new Vector2 (-(float)Math.Cos (rotation) * muzzleVelocity' -(float)Math.Sin (rotation) * muzzleVelocity)); " is 129.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateShotgunBullet,The length of the statement  "		bulletBody.ApplyForce (new Vector2 (-(float)Math.Cos (rotation + rotDiff) * muzzleVelocity' -(float)Math.Sin (rotation + rotDiff) * muzzleVelocity)); " is 149.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateRocket,The length of the statement  "	rocketBody.LinearVelocity = new Vector2 (-(float)Math.Cos (rotation) * muzzleVelocity' -(float)Math.Sin (rotation) * muzzleVelocity); " is 133.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateLaser,The length of the statement  "	bulletBody.ApplyForce (new Vector2 (-(float)Math.Cos (rotation) * muzzleVelocity' -(float)Math.Sin (rotation) * muzzleVelocity)); " is 129.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Bullet_OnCollision,The length of the statement  "	if (fixtureB.Body.GetType () == typeof(Bullet) || fixtureB.Body.GetType () == typeof(Rocket) || fixtureB.Body.GetType () == typeof(Player)) " is 139.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Rocket_OnCollision,The length of the statement  "	if (fixtureB.Body.GetType () == typeof(Bullet) || fixtureB.Body.GetType () == typeof(Rocket) || fixtureB.Body.GetType () == typeof(Player) || obj.MarkedForRemoval) " is 163.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Rocket_OnCollision,The length of the statement  "	//    // Note that here we're using a linear falloff. If you want the explosion force on this body to fall off more sharply with distance' you can use vectorFromExplosion.LengthSquared() instead. " is 195.
Long Statement,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,OnScreen,The length of the statement  "	if ((ConvertUnits.ToDisplayUnits (pos.Y)) + CameraOffset.Y < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (pos.Y)) + CameraOffset.Y > 0 && (ConvertUnits.ToDisplayUnits (pos.X)) + CameraOffset.X < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (pos.X)) + CameraOffset.X > 0) " is 288.
Long Statement,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Draw,The length of the statement  "	sb.Draw (texture' position' null' color' 0.0f' midpoint' scale + ((0.5f) * ((float)(255 - age) / 255))' SpriteEffects.None' 1.0f); " is 130.
Long Statement,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - FRAME_WIDTH / 2' ConvertUnits.ToDisplayUnits (Position.Y) - FRAME_HEIGHT / 2); " is 151.
Long Statement,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Draw,The length of the statement  "	srcRect = new Rectangle (frameCounter * (FRAME_WIDTH + FRAME_SEPERATION)' (int)State * (FRAME_HEIGHT_SPERATION + FRAME_HEIGHT)' FRAME_WIDTH' FRAME_HEIGHT); " is 155.
Long Statement,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Draw,The length of the statement  "		sb.Draw (this.texture' offset' srcRect' Color.White' 0.0f' new Vector2 (0' 0)' 1.0f' SpriteEffects.FlipHorizontally' 1.0f); " is 123.
Long Statement,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Draw,The length of the statement  "		Vector2 weaponOffset = new Vector2 ((ConvertUnits.ToDisplayUnits (Position.X))' ConvertUnits.ToDisplayUnits (Position.Y)); " is 122.
Long Statement,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,GunLocation,The length of the statement  "	float x = ConvertUnits.ToDisplayUnits (Position.X) - (float)(Math.Cos (EquipedWeapon.Rotation) * (EquipedWeapon.Width / 2)); " is 124.
Long Statement,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,GunLocation,The length of the statement  "	float y = ConvertUnits.ToDisplayUnits (Position.Y) - (float)(Math.Sin (EquipedWeapon.Rotation) * (EquipedWeapon.Width / 2)); " is 124.
Long Statement,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Update,The length of the statement  "	if ((ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) > 0 && (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) > 0 && (lastFire == -1.0f || lastFire > fireRate)) { " is 384.
Long Statement,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - height / 2); " is 139.
Long Statement,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The length of the statement  "		sb.Draw (this.texture' offset' srcRect' Color.White' 0.0f' new Vector2 (0' 0)' 1.0f' SpriteEffects.FlipHorizontally' 1.0f); " is 123.
Long Statement,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Update,The length of the statement  "		Vector2 rocketTailLocation = new Vector2 ((ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2) + (float)(Math.Cos (Rotation) * texture.Width / 2)' (ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2) + (float)(Math.Sin (Rotation) * texture.Width / 2)); " is 273.
Long Statement,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Draw,The length of the statement  "	sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f); " is 148.
Long Statement,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,OffScreen,The length of the statement  "	if ((ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y > 0 && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X > 0) " is 336.
Long Statement,RobotRampage,SpawnPoint,C:\repos\Cprice1771_RobotRampage\RobotRampage\SpawnPoint.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (location.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (location.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,SpawnPoint,C:\repos\Cprice1771_RobotRampage\RobotRampage\SpawnPoint.cs,Draw,The length of the statement  "	sb.Draw (texture' offset' new Rectangle (0' 0' texture.Width' texture.Height)' Color.White' 0.0f' new Vector2 (0' 0)' 1.0f' SpriteEffects.None' 1.0f); " is 150.
Long Statement,RobotRampage,Spikes,C:\repos\Cprice1771_RobotRampage\RobotRampage\Spikes.cs,Draw,The length of the statement  "	sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f); " is 148.
Long Statement,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Update,The length of the statement  "	if ((ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y > 0 && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X > 0) { " is 338.
Long Statement,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - height / 2); " is 139.
Long Statement,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Draw,The length of the statement  "		sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (0' 0)' 1.0f' SpriteEffects.FlipHorizontally' 1.0f); " is 127.
Long Statement,RobotRampage,Wall,C:\repos\Cprice1771_RobotRampage\RobotRampage\Wall.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,WinPoint,C:\repos\Cprice1771_RobotRampage\RobotRampage\WinPoint.cs,Draw,The length of the statement  "	Vector2 offset = new Vector2 (ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2' ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2); " is 155.
Long Statement,RobotRampage,WinPoint,C:\repos\Cprice1771_RobotRampage\RobotRampage\WinPoint.cs,Draw,The length of the statement  "	sb.Draw (texture' offset' new Rectangle (0' 0' texture.Width' texture.Height)' Color.White' Rotation' new Vector2 (0' 0)' 1.0f' SpriteEffects.None' 1.0f); " is 154.
Complex Conditional,RobotRampage,Bullet,C:\repos\Cprice1771_RobotRampage\RobotRampage\Bullet.cs,OffScreen,The conditional expression  "(ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) > MainGame.ScreenHeight || (ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) < 0 || (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) > MainGame.ScreenWidth || (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) < 0"  is complex.
Complex Conditional,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Rocket_OnCollision,The conditional expression  "fixtureB.Body.GetType () == typeof(Bullet) || fixtureB.Body.GetType () == typeof(Rocket) || fixtureB.Body.GetType () == typeof(Player) || obj.MarkedForRemoval"  is complex.
Complex Conditional,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,OnScreen,The conditional expression  "(ConvertUnits.ToDisplayUnits (pos.Y)) + CameraOffset.Y < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (pos.Y)) + CameraOffset.Y > 0 && (ConvertUnits.ToDisplayUnits (pos.X)) + CameraOffset.X < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (pos.X)) + CameraOffset.X > 0"  is complex.
Complex Conditional,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Update,The conditional expression  "(ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (Position.Y) + parent.CameraOffset.Y) > 0 && (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (Position.X) + parent.CameraOffset.X) > 0 && (lastFire == -1.0f || lastFire > fireRate)"  is complex.
Complex Conditional,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,OffScreen,The conditional expression  "(ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y > 0 && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X > 0"  is complex.
Complex Conditional,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Update,The conditional expression  "(ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y < MainGame.ScreenHeight && (ConvertUnits.ToDisplayUnits (Position.Y)) + parent.CameraOffset.Y > 0 && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X < MainGame.ScreenWidth && (ConvertUnits.ToDisplayUnits (Position.X)) + parent.CameraOffset.X > 0"  is complex.
Magic Number,RobotRampage,Bullet,C:\repos\Cprice1771_RobotRampage\RobotRampage\Bullet.cs,Bullet,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Bullet,C:\repos\Cprice1771_RobotRampage\RobotRampage\Bullet.cs,Bullet,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Crosshair,C:\repos\Cprice1771_RobotRampage\RobotRampage\Crosshair.cs,Update,The following statement contains a magic number: position = new Vector2 ((Mouse.GetState ().X - texture.Width / 2) - parent.CameraOffset.X' (Mouse.GetState ().Y - texture.Height / 2) - parent.CameraOffset.Y);  
Magic Number,RobotRampage,Crosshair,C:\repos\Cprice1771_RobotRampage\RobotRampage\Crosshair.cs,Update,The following statement contains a magic number: position = new Vector2 ((Mouse.GetState ().X - texture.Width / 2) - parent.CameraOffset.X' (Mouse.GetState ().Y - texture.Height / 2) - parent.CameraOffset.Y);  
Magic Number,RobotRampage,Explosion,C:\repos\Cprice1771_RobotRampage\RobotRampage\Explosion.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' offset' srcRect' Color.White' 0.0f' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,Explosion,C:\repos\Cprice1771_RobotRampage\RobotRampage\Explosion.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' offset' srcRect' Color.White' 0.0f' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,Floor,C:\repos\Cprice1771_RobotRampage\RobotRampage\Floor.cs,Floor,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Floor,C:\repos\Cprice1771_RobotRampage\RobotRampage\Floor.cs,Floor,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: if (Direction == PlayerDirection.RIGHT) {  	offset = new Vector2 (position.X + 10' position.Y);  	sb.Draw (this.Texture' offset' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.FlipVertically' 1.0f);  }  else {  	offset = new Vector2 (position.X - 100' position.Y);  	sb.Draw (this.Texture' position' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: if (Direction == PlayerDirection.RIGHT) {  	offset = new Vector2 (position.X + 10' position.Y);  	sb.Draw (this.Texture' offset' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.FlipVertically' 1.0f);  }  else {  	offset = new Vector2 (position.X - 100' position.Y);  	sb.Draw (this.Texture' position' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: if (Direction == PlayerDirection.RIGHT) {  	offset = new Vector2 (position.X + 10' position.Y);  	sb.Draw (this.Texture' offset' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.FlipVertically' 1.0f);  }  else {  	offset = new Vector2 (position.X - 100' position.Y);  	sb.Draw (this.Texture' position' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: if (Direction == PlayerDirection.RIGHT) {  	offset = new Vector2 (position.X + 10' position.Y);  	sb.Draw (this.Texture' offset' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.FlipVertically' 1.0f);  }  else {  	offset = new Vector2 (position.X - 100' position.Y);  	sb.Draw (this.Texture' position' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: offset = new Vector2 (position.X + 10' position.Y);  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: sb.Draw (this.Texture' offset' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.FlipVertically' 1.0f);  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: offset = new Vector2 (position.X - 100' position.Y);  
Magic Number,RobotRampage,Gun,C:\repos\Cprice1771_RobotRampage\RobotRampage\Gun.cs,Draw,The following statement contains a magic number: sb.Draw (this.Texture' position' srcRect' Color.White' Rotation' new Vector2 (Texture.Width' Texture.Height / 2)' .75f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,HealthBar,C:\repos\Cprice1771_RobotRampage\RobotRampage\HealthBar.cs,Draw,The following statement contains a magic number: srcRect = new Rectangle (0' (10 - (Health / 10)) * FRAME_SIZE' texture.Width' FRAME_SIZE);  
Magic Number,RobotRampage,HealthBar,C:\repos\Cprice1771_RobotRampage\RobotRampage\HealthBar.cs,Draw,The following statement contains a magic number: srcRect = new Rectangle (0' (10 - (Health / 10)) * FRAME_SIZE' texture.Width' FRAME_SIZE);  
Magic Number,RobotRampage,HealthBar,C:\repos\Cprice1771_RobotRampage\RobotRampage\HealthBar.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' Position' srcRect' Color.White' 0.0f' new Vector2 (texture.Width / 2' FRAME_SIZE / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,HealthBar,C:\repos\Cprice1771_RobotRampage\RobotRampage\HealthBar.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' Position' srcRect' Color.White' 0.0f' new Vector2 (texture.Width / 2' FRAME_SIZE / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,HUD,The following statement contains a magic number: Health = 100;  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,HUD,The following statement contains a magic number: AmmoLoaded = 30;  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,HUD,The following statement contains a magic number: AmmoReserve = 150;  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: myColor.A = 200;  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: for (int i = 0; i < inventory.Count; i++) {  	myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  	sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: for (int i = 0; i < inventory.Count; i++) {  	myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  	sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: for (int i = 0; i < inventory.Count; i++) {  	myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  	sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: for (int i = 0; i < inventory.Count; i++) {  	myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  	sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: for (int i = 0; i < inventory.Count; i++) {  	myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  	sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: for (int i = 0; i < inventory.Count; i++) {  	myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  	sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  }  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: myColor.A = ((int)selection == i) ? (byte)255 : (byte)50;  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,HUD,C:\repos\Cprice1771_RobotRampage\RobotRampage\HUD.cs,Draw,The following statement contains a magic number: sb.Draw (inventory [i].Texture' new Vector2 (i * 100 + 100' 40) - parent.CameraOffset' new Rectangle (0' 0' inventory [i].Texture.Width' inventory [i].Texture.Height)' myColor' -.5f' new Vector2 (inventory [i].Texture.Width' inventory [i].Texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: using (StreamWriter mapWriter = new StreamWriter (Directory.GetCurrentDirectory () + "\\" + Name + ".map")) {  	mapWriter.WriteLine ("SpawnPoint'" + SpawnLocation.X + "'" + SpawnLocation.Y);  	foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  		if (kvp.Key == typeof(Floor)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Wall)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Robot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(SuicideRobot)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(WinPoint)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Spikes)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  		else if (kvp.Key == typeof(Doodad)) {  			foreach (List<float> values in kvp.Value)  				mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in Objects) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> values in kvp.Value)  			mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("Floor'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("Wall'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Robot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("Robot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("SuicideRobot'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("WinPoint'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("Spikes'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> values in kvp.Value)  		mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: foreach (List<float> values in kvp.Value)  	mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Write,The following statement contains a magic number: mapWriter.WriteLine ("Doodad'" + ConvertUnits.ToDisplayUnits (values [0]) + "'" + ConvertUnits.ToDisplayUnits (values [1]) + "'" + ConvertUnits.ToDisplayUnits (values [2]));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: using (StreamReader mapReader = new StreamReader (fileName)) {  	Name = fileName;  	string line;  	while ((line = mapReader.ReadLine ()) != null) {  		string[] objects = line.Split (''');  		float rotation = 0.0f;  		if (objects.Count () > 3)  			rotation = float.Parse (objects [3]);  		if (objects [0] == "Floor") {  			if (!Objects.ContainsKey (typeof(Floor)))  				Objects.Add (typeof(Floor)' new List<List<float>> ());  			Objects [typeof(Floor)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Wall") {  			if (!Objects.ContainsKey (typeof(Wall)))  				Objects.Add (typeof(Wall)' new List<List<float>> ());  			Objects [typeof(Wall)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Robot") {  			if (!Objects.ContainsKey (typeof(Robot)))  				Objects.Add (typeof(Robot)' new List<List<float>> ());  			Objects [typeof(Robot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SuicideRobot") {  			if (!Objects.ContainsKey (typeof(SuicideRobot)))  				Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  			Objects [typeof(SuicideRobot)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "WinPoint") {  			if (!Objects.ContainsKey (typeof(WinPoint)))  				Objects.Add (typeof(WinPoint)' new List<List<float>> ());  			Objects [typeof(WinPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "SpawnPoint") {  			if (!Objects.ContainsKey (typeof(SpawnPoint)))  				Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  			SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  			Objects [typeof(SpawnPoint)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Spikes") {  			if (!Objects.ContainsKey (typeof(Spikes)))  				Objects.Add (typeof(Spikes)' new List<List<float>> ());  			Objects [typeof(Spikes)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  		else if (objects [0] == "Doodad") {  			if (!Objects.ContainsKey (typeof(Doodad)))  				Objects.Add (typeof(Doodad)' new List<List<float>> ());  			Objects [typeof(Doodad)].Add (new List<float> () {  				ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  				ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  				rotation  			});  		}  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: while ((line = mapReader.ReadLine ()) != null) {  	string[] objects = line.Split (''');  	float rotation = 0.0f;  	if (objects.Count () > 3)  		rotation = float.Parse (objects [3]);  	if (objects [0] == "Floor") {  		if (!Objects.ContainsKey (typeof(Floor)))  			Objects.Add (typeof(Floor)' new List<List<float>> ());  		Objects [typeof(Floor)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Wall") {  		if (!Objects.ContainsKey (typeof(Wall)))  			Objects.Add (typeof(Wall)' new List<List<float>> ());  		Objects [typeof(Wall)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Robot") {  		if (!Objects.ContainsKey (typeof(Robot)))  			Objects.Add (typeof(Robot)' new List<List<float>> ());  		Objects [typeof(Robot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SuicideRobot") {  		if (!Objects.ContainsKey (typeof(SuicideRobot)))  			Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  		Objects [typeof(SuicideRobot)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "WinPoint") {  		if (!Objects.ContainsKey (typeof(WinPoint)))  			Objects.Add (typeof(WinPoint)' new List<List<float>> ());  		Objects [typeof(WinPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "SpawnPoint") {  		if (!Objects.ContainsKey (typeof(SpawnPoint)))  			Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  		SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  		Objects [typeof(SpawnPoint)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Spikes") {  		if (!Objects.ContainsKey (typeof(Spikes)))  			Objects.Add (typeof(Spikes)' new List<List<float>> ());  		Objects [typeof(Spikes)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  	else if (objects [0] == "Doodad") {  		if (!Objects.ContainsKey (typeof(Doodad)))  			Objects.Add (typeof(Doodad)' new List<List<float>> ());  		Objects [typeof(Doodad)].Add (new List<float> () {  			ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  			ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  			rotation  		});  	}  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects.Count () > 3)  	rotation = float.Parse (objects [3]);  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects.Count () > 3)  	rotation = float.Parse (objects [3]);  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: rotation = float.Parse (objects [3]);  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Floor") {  	if (!Objects.ContainsKey (typeof(Floor)))  		Objects.Add (typeof(Floor)' new List<List<float>> ());  	Objects [typeof(Floor)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(Floor)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Wall") {  	if (!Objects.ContainsKey (typeof(Wall)))  		Objects.Add (typeof(Wall)' new List<List<float>> ());  	Objects [typeof(Wall)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(Wall)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Robot") {  	if (!Objects.ContainsKey (typeof(Robot)))  		Objects.Add (typeof(Robot)' new List<List<float>> ());  	Objects [typeof(Robot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(Robot)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SuicideRobot") {  	if (!Objects.ContainsKey (typeof(SuicideRobot)))  		Objects.Add (typeof(SuicideRobot)' new List<List<float>> ());  	Objects [typeof(SuicideRobot)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(SuicideRobot)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "WinPoint") {  	if (!Objects.ContainsKey (typeof(WinPoint)))  		Objects.Add (typeof(WinPoint)' new List<List<float>> ());  	Objects [typeof(WinPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(WinPoint)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "SpawnPoint") {  	if (!Objects.ContainsKey (typeof(SpawnPoint)))  		Objects.Add (typeof(SpawnPoint)' new List<List<float>> ());  	SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  	Objects [typeof(SpawnPoint)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: SpawnLocation = new Vector2 (ConvertUnits.ToSimUnits (float.Parse (objects [1]))' ConvertUnits.ToSimUnits (float.Parse (objects [2])));  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(SpawnPoint)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Spikes") {  	if (!Objects.ContainsKey (typeof(Spikes)))  		Objects.Add (typeof(Spikes)' new List<List<float>> ());  	Objects [typeof(Spikes)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  else if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(Spikes)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: if (objects [0] == "Doodad") {  	if (!Objects.ContainsKey (typeof(Doodad)))  		Objects.Add (typeof(Doodad)' new List<List<float>> ());  	Objects [typeof(Doodad)].Add (new List<float> () {  		ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  		ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  		rotation  	});  }  
Magic Number,RobotRampage,Level,C:\repos\Cprice1771_RobotRampage\RobotRampage\Level.cs,Parse,The following statement contains a magic number: Objects [typeof(Doodad)].Add (new List<float> () {  	ConvertUnits.ToSimUnits (float.Parse (objects [1]))'  	ConvertUnits.ToSimUnits (float.Parse (objects [2]))'  	rotation  });  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: titleRect = new Rectangle ((MainGame.ScreenWidth / 2) - title.Width / 2' 75' title.Width' title.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: titleRect = new Rectangle ((MainGame.ScreenWidth / 2) - title.Width / 2' 75' title.Width' title.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: titleRect = new Rectangle ((MainGame.ScreenWidth / 2) - title.Width / 2' 75' title.Width' title.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: nextLevelRect = new Rectangle (MainGame.ScreenWidth / 2 - nextLevel.Width / 2' (int)(1.4f * MainGame.ScreenHeight / 3)' nextLevel.Width' nextLevel.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: nextLevelRect = new Rectangle (MainGame.ScreenWidth / 2 - nextLevel.Width / 2' (int)(1.4f * MainGame.ScreenHeight / 3)' nextLevel.Width' nextLevel.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: nextLevelRect = new Rectangle (MainGame.ScreenWidth / 2 - nextLevel.Width / 2' (int)(1.4f * MainGame.ScreenHeight / 3)' nextLevel.Width' nextLevel.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: backToMenuRect = new Rectangle (MainGame.ScreenWidth / 2 - backToMenu.Width / 2' (int)(2.2f * MainGame.ScreenHeight / 3)' backToMenu.Width' backToMenu.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: backToMenuRect = new Rectangle (MainGame.ScreenWidth / 2 - backToMenu.Width / 2' (int)(2.2f * MainGame.ScreenHeight / 3)' backToMenu.Width' backToMenu.Height);  
Magic Number,RobotRampage,LevelCompleteMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\LevelCompleteMenu.cs,LevelCompleteMenu,The following statement contains a magic number: backToMenuRect = new Rectangle (MainGame.ScreenWidth / 2 - backToMenu.Width / 2' (int)(2.2f * MainGame.ScreenHeight / 3)' backToMenu.Width' backToMenu.Height);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: crosshair = new Crosshair (crosshairTexture' new Vector2 (ScreenWidth / 2' ScreenHeight / 2)' this);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: crosshair = new Crosshair (crosshairTexture' new Vector2 (ScreenWidth / 2' ScreenHeight / 2)' this);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' initialPlayerPosition' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' initialPlayerPosition' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' initialPlayerPosition' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' initialPlayerPosition' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' initialPlayerPosition' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' initialPlayerPosition' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' initialPlayerPosition' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' initialPlayerPosition' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' initialPlayerPosition' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' initialPlayerPosition' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' initialPlayerPosition' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' initialPlayerPosition' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' initialPlayerPosition' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' initialPlayerPosition' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,LoadContent,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' initialPlayerPosition' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: switch (State) {  case GameState.LEVEL:  	physicsWorld.Step ((float)gameTime.ElapsedGameTime.TotalMilliseconds * 0.001f);  	#region Mouse Inputs  	if (Mouse.GetState ().ScrollWheelValue < mouseWheelLoc)  		player.CycleNextWeapon ();  	else if (Mouse.GetState ().ScrollWheelValue > mouseWheelLoc)  		player.CyclePreviousWeapon ();  	mouseWheelLoc = Mouse.GetState ().ScrollWheelValue;  	#endregion  	#region Camera  	int Y_CAMERA_THRESHOLD = (ScreenHeight / 2) + 100;  	//X movement  	if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0));  	else if (ConvertUnits.ToDisplayUnits (player.Position.X) < (-1 * (gameCamera.Position.X)) + X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0));  	//Y movement  	float playerY = ConvertUnits.ToDisplayUnits (player.Position.Y);  	if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  	else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  	CameraOffset = gameCamera.Position;  	#endregion  	#region Keyboard inputs  	if (player.LinearVelocity.Y != 0)  		player.State = PlayerState.JUMPING;  	else if (Keyboard.GetState ().IsKeyDown (Keys.D) || Keyboard.GetState ().IsKeyDown (Keys.A))  		player.State = PlayerState.RUNNING;  	else  		player.State = PlayerState.IDLE;  	//TODO: fix ground colloision detection  	if (Keyboard.GetState ().IsKeyDown (Keys.Space) && player.LinearVelocity.Y == 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (JumpEffect);  		player.ApplyForce (new Vector2 (0' -200.0f));  	}  	if (Keyboard.GetState ().IsKeyDown (Keys.D) && player.LinearVelocity.X < 5.0f)  		player.ApplyForce (new Vector2 (20.0f' 0));  	else if (Keyboard.GetState ().IsKeyDown (Keys.A) && player.LinearVelocity.X > -5.0f)  		player.ApplyForce (new Vector2 (-20.0f' 0));  	if (Keyboard.GetState ().IsKeyDown (Keys.R))  		player.EquipedWeapon.Reload ();  	#endregion  	#region Update HUD  	hud.Health = player.Health;  	hud.AmmoLoaded = player.EquipedWeapon.LoadedAmmo;  	hud.AmmoReserve = player.EquipedWeapon.ReserveAmmo;  	hud.Reloading = player.EquipedWeapon.Reloading;  	hud.selection = player.EquipedWeaponSlot;  	#endregion  	#region world cleanup  	for (int i = gameObjects.Count - 1; i >= 0; i--) {  		if (gameObjects [i] is ILivingThing) {  			ILivingThing deadObject = gameObjects [i] as ILivingThing;  			if (deadObject.Health <= 0) {  				if (!(deadObject is Player)) {  					Body deadBody = deadObject as Body;  					CreateExplosion (deadBody.Position);  				}  				physicsWorld.RemoveBody (deadObject as Body);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Bullet) {  			Bullet bullet = gameObjects [i] as Bullet;  			if (bullet.OffScreen ()) {  				physicsWorld.RemoveBody (bullet);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Explosion) {  			Explosion explosion = gameObjects [i] as Explosion;  			if (!explosion.IsAlive)  				gameObjects.RemoveAt (i);  		}  		else if (gameObjects [i] is SmokeParticle) {  			SmokeParticle smoke = gameObjects [i] as SmokeParticle;  			if (!smoke.IsAlive)  				gameObjects.RemoveAt (i);  		}  	}  	if (player.Health <= 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (deathEffect);  		respawnPlayer ();  	}  	#endregion  	#region Misc Updates  	player.Update (gameTime);  	crosshair.Update (gameTime);  	for (int i = gameObjects.Count - 1; i >= 0; i--)  		gameObjects [i].Update (gameTime);  	#endregion  	break;  case GameState.MAIN_MENU:  	mainMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: switch (State) {  case GameState.LEVEL:  	physicsWorld.Step ((float)gameTime.ElapsedGameTime.TotalMilliseconds * 0.001f);  	#region Mouse Inputs  	if (Mouse.GetState ().ScrollWheelValue < mouseWheelLoc)  		player.CycleNextWeapon ();  	else if (Mouse.GetState ().ScrollWheelValue > mouseWheelLoc)  		player.CyclePreviousWeapon ();  	mouseWheelLoc = Mouse.GetState ().ScrollWheelValue;  	#endregion  	#region Camera  	int Y_CAMERA_THRESHOLD = (ScreenHeight / 2) + 100;  	//X movement  	if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0));  	else if (ConvertUnits.ToDisplayUnits (player.Position.X) < (-1 * (gameCamera.Position.X)) + X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0));  	//Y movement  	float playerY = ConvertUnits.ToDisplayUnits (player.Position.Y);  	if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  	else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  	CameraOffset = gameCamera.Position;  	#endregion  	#region Keyboard inputs  	if (player.LinearVelocity.Y != 0)  		player.State = PlayerState.JUMPING;  	else if (Keyboard.GetState ().IsKeyDown (Keys.D) || Keyboard.GetState ().IsKeyDown (Keys.A))  		player.State = PlayerState.RUNNING;  	else  		player.State = PlayerState.IDLE;  	//TODO: fix ground colloision detection  	if (Keyboard.GetState ().IsKeyDown (Keys.Space) && player.LinearVelocity.Y == 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (JumpEffect);  		player.ApplyForce (new Vector2 (0' -200.0f));  	}  	if (Keyboard.GetState ().IsKeyDown (Keys.D) && player.LinearVelocity.X < 5.0f)  		player.ApplyForce (new Vector2 (20.0f' 0));  	else if (Keyboard.GetState ().IsKeyDown (Keys.A) && player.LinearVelocity.X > -5.0f)  		player.ApplyForce (new Vector2 (-20.0f' 0));  	if (Keyboard.GetState ().IsKeyDown (Keys.R))  		player.EquipedWeapon.Reload ();  	#endregion  	#region Update HUD  	hud.Health = player.Health;  	hud.AmmoLoaded = player.EquipedWeapon.LoadedAmmo;  	hud.AmmoReserve = player.EquipedWeapon.ReserveAmmo;  	hud.Reloading = player.EquipedWeapon.Reloading;  	hud.selection = player.EquipedWeaponSlot;  	#endregion  	#region world cleanup  	for (int i = gameObjects.Count - 1; i >= 0; i--) {  		if (gameObjects [i] is ILivingThing) {  			ILivingThing deadObject = gameObjects [i] as ILivingThing;  			if (deadObject.Health <= 0) {  				if (!(deadObject is Player)) {  					Body deadBody = deadObject as Body;  					CreateExplosion (deadBody.Position);  				}  				physicsWorld.RemoveBody (deadObject as Body);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Bullet) {  			Bullet bullet = gameObjects [i] as Bullet;  			if (bullet.OffScreen ()) {  				physicsWorld.RemoveBody (bullet);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Explosion) {  			Explosion explosion = gameObjects [i] as Explosion;  			if (!explosion.IsAlive)  				gameObjects.RemoveAt (i);  		}  		else if (gameObjects [i] is SmokeParticle) {  			SmokeParticle smoke = gameObjects [i] as SmokeParticle;  			if (!smoke.IsAlive)  				gameObjects.RemoveAt (i);  		}  	}  	if (player.Health <= 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (deathEffect);  		respawnPlayer ();  	}  	#endregion  	#region Misc Updates  	player.Update (gameTime);  	crosshair.Update (gameTime);  	for (int i = gameObjects.Count - 1; i >= 0; i--)  		gameObjects [i].Update (gameTime);  	#endregion  	break;  case GameState.MAIN_MENU:  	mainMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: switch (State) {  case GameState.LEVEL:  	physicsWorld.Step ((float)gameTime.ElapsedGameTime.TotalMilliseconds * 0.001f);  	#region Mouse Inputs  	if (Mouse.GetState ().ScrollWheelValue < mouseWheelLoc)  		player.CycleNextWeapon ();  	else if (Mouse.GetState ().ScrollWheelValue > mouseWheelLoc)  		player.CyclePreviousWeapon ();  	mouseWheelLoc = Mouse.GetState ().ScrollWheelValue;  	#endregion  	#region Camera  	int Y_CAMERA_THRESHOLD = (ScreenHeight / 2) + 100;  	//X movement  	if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0));  	else if (ConvertUnits.ToDisplayUnits (player.Position.X) < (-1 * (gameCamera.Position.X)) + X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0));  	//Y movement  	float playerY = ConvertUnits.ToDisplayUnits (player.Position.Y);  	if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  	else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  	CameraOffset = gameCamera.Position;  	#endregion  	#region Keyboard inputs  	if (player.LinearVelocity.Y != 0)  		player.State = PlayerState.JUMPING;  	else if (Keyboard.GetState ().IsKeyDown (Keys.D) || Keyboard.GetState ().IsKeyDown (Keys.A))  		player.State = PlayerState.RUNNING;  	else  		player.State = PlayerState.IDLE;  	//TODO: fix ground colloision detection  	if (Keyboard.GetState ().IsKeyDown (Keys.Space) && player.LinearVelocity.Y == 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (JumpEffect);  		player.ApplyForce (new Vector2 (0' -200.0f));  	}  	if (Keyboard.GetState ().IsKeyDown (Keys.D) && player.LinearVelocity.X < 5.0f)  		player.ApplyForce (new Vector2 (20.0f' 0));  	else if (Keyboard.GetState ().IsKeyDown (Keys.A) && player.LinearVelocity.X > -5.0f)  		player.ApplyForce (new Vector2 (-20.0f' 0));  	if (Keyboard.GetState ().IsKeyDown (Keys.R))  		player.EquipedWeapon.Reload ();  	#endregion  	#region Update HUD  	hud.Health = player.Health;  	hud.AmmoLoaded = player.EquipedWeapon.LoadedAmmo;  	hud.AmmoReserve = player.EquipedWeapon.ReserveAmmo;  	hud.Reloading = player.EquipedWeapon.Reloading;  	hud.selection = player.EquipedWeaponSlot;  	#endregion  	#region world cleanup  	for (int i = gameObjects.Count - 1; i >= 0; i--) {  		if (gameObjects [i] is ILivingThing) {  			ILivingThing deadObject = gameObjects [i] as ILivingThing;  			if (deadObject.Health <= 0) {  				if (!(deadObject is Player)) {  					Body deadBody = deadObject as Body;  					CreateExplosion (deadBody.Position);  				}  				physicsWorld.RemoveBody (deadObject as Body);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Bullet) {  			Bullet bullet = gameObjects [i] as Bullet;  			if (bullet.OffScreen ()) {  				physicsWorld.RemoveBody (bullet);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Explosion) {  			Explosion explosion = gameObjects [i] as Explosion;  			if (!explosion.IsAlive)  				gameObjects.RemoveAt (i);  		}  		else if (gameObjects [i] is SmokeParticle) {  			SmokeParticle smoke = gameObjects [i] as SmokeParticle;  			if (!smoke.IsAlive)  				gameObjects.RemoveAt (i);  		}  	}  	if (player.Health <= 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (deathEffect);  		respawnPlayer ();  	}  	#endregion  	#region Misc Updates  	player.Update (gameTime);  	crosshair.Update (gameTime);  	for (int i = gameObjects.Count - 1; i >= 0; i--)  		gameObjects [i].Update (gameTime);  	#endregion  	break;  case GameState.MAIN_MENU:  	mainMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: switch (State) {  case GameState.LEVEL:  	physicsWorld.Step ((float)gameTime.ElapsedGameTime.TotalMilliseconds * 0.001f);  	#region Mouse Inputs  	if (Mouse.GetState ().ScrollWheelValue < mouseWheelLoc)  		player.CycleNextWeapon ();  	else if (Mouse.GetState ().ScrollWheelValue > mouseWheelLoc)  		player.CyclePreviousWeapon ();  	mouseWheelLoc = Mouse.GetState ().ScrollWheelValue;  	#endregion  	#region Camera  	int Y_CAMERA_THRESHOLD = (ScreenHeight / 2) + 100;  	//X movement  	if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0));  	else if (ConvertUnits.ToDisplayUnits (player.Position.X) < (-1 * (gameCamera.Position.X)) + X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0));  	//Y movement  	float playerY = ConvertUnits.ToDisplayUnits (player.Position.Y);  	if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  	else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  	CameraOffset = gameCamera.Position;  	#endregion  	#region Keyboard inputs  	if (player.LinearVelocity.Y != 0)  		player.State = PlayerState.JUMPING;  	else if (Keyboard.GetState ().IsKeyDown (Keys.D) || Keyboard.GetState ().IsKeyDown (Keys.A))  		player.State = PlayerState.RUNNING;  	else  		player.State = PlayerState.IDLE;  	//TODO: fix ground colloision detection  	if (Keyboard.GetState ().IsKeyDown (Keys.Space) && player.LinearVelocity.Y == 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (JumpEffect);  		player.ApplyForce (new Vector2 (0' -200.0f));  	}  	if (Keyboard.GetState ().IsKeyDown (Keys.D) && player.LinearVelocity.X < 5.0f)  		player.ApplyForce (new Vector2 (20.0f' 0));  	else if (Keyboard.GetState ().IsKeyDown (Keys.A) && player.LinearVelocity.X > -5.0f)  		player.ApplyForce (new Vector2 (-20.0f' 0));  	if (Keyboard.GetState ().IsKeyDown (Keys.R))  		player.EquipedWeapon.Reload ();  	#endregion  	#region Update HUD  	hud.Health = player.Health;  	hud.AmmoLoaded = player.EquipedWeapon.LoadedAmmo;  	hud.AmmoReserve = player.EquipedWeapon.ReserveAmmo;  	hud.Reloading = player.EquipedWeapon.Reloading;  	hud.selection = player.EquipedWeaponSlot;  	#endregion  	#region world cleanup  	for (int i = gameObjects.Count - 1; i >= 0; i--) {  		if (gameObjects [i] is ILivingThing) {  			ILivingThing deadObject = gameObjects [i] as ILivingThing;  			if (deadObject.Health <= 0) {  				if (!(deadObject is Player)) {  					Body deadBody = deadObject as Body;  					CreateExplosion (deadBody.Position);  				}  				physicsWorld.RemoveBody (deadObject as Body);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Bullet) {  			Bullet bullet = gameObjects [i] as Bullet;  			if (bullet.OffScreen ()) {  				physicsWorld.RemoveBody (bullet);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Explosion) {  			Explosion explosion = gameObjects [i] as Explosion;  			if (!explosion.IsAlive)  				gameObjects.RemoveAt (i);  		}  		else if (gameObjects [i] is SmokeParticle) {  			SmokeParticle smoke = gameObjects [i] as SmokeParticle;  			if (!smoke.IsAlive)  				gameObjects.RemoveAt (i);  		}  	}  	if (player.Health <= 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (deathEffect);  		respawnPlayer ();  	}  	#endregion  	#region Misc Updates  	player.Update (gameTime);  	crosshair.Update (gameTime);  	for (int i = gameObjects.Count - 1; i >= 0; i--)  		gameObjects [i].Update (gameTime);  	#endregion  	break;  case GameState.MAIN_MENU:  	mainMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: switch (State) {  case GameState.LEVEL:  	physicsWorld.Step ((float)gameTime.ElapsedGameTime.TotalMilliseconds * 0.001f);  	#region Mouse Inputs  	if (Mouse.GetState ().ScrollWheelValue < mouseWheelLoc)  		player.CycleNextWeapon ();  	else if (Mouse.GetState ().ScrollWheelValue > mouseWheelLoc)  		player.CyclePreviousWeapon ();  	mouseWheelLoc = Mouse.GetState ().ScrollWheelValue;  	#endregion  	#region Camera  	int Y_CAMERA_THRESHOLD = (ScreenHeight / 2) + 100;  	//X movement  	if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0));  	else if (ConvertUnits.ToDisplayUnits (player.Position.X) < (-1 * (gameCamera.Position.X)) + X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0));  	//Y movement  	float playerY = ConvertUnits.ToDisplayUnits (player.Position.Y);  	if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  	else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  	CameraOffset = gameCamera.Position;  	#endregion  	#region Keyboard inputs  	if (player.LinearVelocity.Y != 0)  		player.State = PlayerState.JUMPING;  	else if (Keyboard.GetState ().IsKeyDown (Keys.D) || Keyboard.GetState ().IsKeyDown (Keys.A))  		player.State = PlayerState.RUNNING;  	else  		player.State = PlayerState.IDLE;  	//TODO: fix ground colloision detection  	if (Keyboard.GetState ().IsKeyDown (Keys.Space) && player.LinearVelocity.Y == 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (JumpEffect);  		player.ApplyForce (new Vector2 (0' -200.0f));  	}  	if (Keyboard.GetState ().IsKeyDown (Keys.D) && player.LinearVelocity.X < 5.0f)  		player.ApplyForce (new Vector2 (20.0f' 0));  	else if (Keyboard.GetState ().IsKeyDown (Keys.A) && player.LinearVelocity.X > -5.0f)  		player.ApplyForce (new Vector2 (-20.0f' 0));  	if (Keyboard.GetState ().IsKeyDown (Keys.R))  		player.EquipedWeapon.Reload ();  	#endregion  	#region Update HUD  	hud.Health = player.Health;  	hud.AmmoLoaded = player.EquipedWeapon.LoadedAmmo;  	hud.AmmoReserve = player.EquipedWeapon.ReserveAmmo;  	hud.Reloading = player.EquipedWeapon.Reloading;  	hud.selection = player.EquipedWeaponSlot;  	#endregion  	#region world cleanup  	for (int i = gameObjects.Count - 1; i >= 0; i--) {  		if (gameObjects [i] is ILivingThing) {  			ILivingThing deadObject = gameObjects [i] as ILivingThing;  			if (deadObject.Health <= 0) {  				if (!(deadObject is Player)) {  					Body deadBody = deadObject as Body;  					CreateExplosion (deadBody.Position);  				}  				physicsWorld.RemoveBody (deadObject as Body);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Bullet) {  			Bullet bullet = gameObjects [i] as Bullet;  			if (bullet.OffScreen ()) {  				physicsWorld.RemoveBody (bullet);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Explosion) {  			Explosion explosion = gameObjects [i] as Explosion;  			if (!explosion.IsAlive)  				gameObjects.RemoveAt (i);  		}  		else if (gameObjects [i] is SmokeParticle) {  			SmokeParticle smoke = gameObjects [i] as SmokeParticle;  			if (!smoke.IsAlive)  				gameObjects.RemoveAt (i);  		}  	}  	if (player.Health <= 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (deathEffect);  		respawnPlayer ();  	}  	#endregion  	#region Misc Updates  	player.Update (gameTime);  	crosshair.Update (gameTime);  	for (int i = gameObjects.Count - 1; i >= 0; i--)  		gameObjects [i].Update (gameTime);  	#endregion  	break;  case GameState.MAIN_MENU:  	mainMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following statement contains a magic number: if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  	gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' player.Position' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' player.Position' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' player.Position' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' player.Position' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: assualtRifle = new Gun (defaultGunTexture' player.Position' this' 35' 30' 7.5f' 200' 100.0' 1000.0' CreateBullet' rifleShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' player.Position' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' player.Position' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' player.Position' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' player.Position' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: shotGun = new Gun (shotGunTexture' player.Position' this' 50' 5' 7.5f' 20' 1000.0' 1500.0' CreateShotgunBullet' shotgunShootSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' player.Position' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' player.Position' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' player.Position' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' player.Position' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreatePlayer,The following statement contains a magic number: RocketLauncher = new Gun (rocketLauncherTexture' player.Position' this' 100' 4' 7.5f' 20' 800.0' 1500.0' CreateRocket' rocketLauncherSound' emptyGunSound);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Floor f = new Floor (floorTexture' this' physicsWorld);  	f.Position = ConvertUnits.ToSimUnits ((floorTexture.Width / 2) + (i * floorTexture.Width)' ScreenHeight - 10);  	gameObjects.Add (f);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Floor f = new Floor (floorTexture' this' physicsWorld);  	f.Position = ConvertUnits.ToSimUnits ((floorTexture.Width / 2) + (i * floorTexture.Width)' ScreenHeight - 10);  	gameObjects.Add (f);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Floor f = new Floor (floorTexture' this' physicsWorld);  	f.Position = ConvertUnits.ToSimUnits ((floorTexture.Width / 2) + (i * floorTexture.Width)' ScreenHeight - 10);  	gameObjects.Add (f);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: f.Position = ConvertUnits.ToSimUnits ((floorTexture.Width / 2) + (i * floorTexture.Width)' ScreenHeight - 10);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: f.Position = ConvertUnits.ToSimUnits ((floorTexture.Width / 2) + (i * floorTexture.Width)' ScreenHeight - 10);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: foo.Position = ConvertUnits.ToSimUnits (900' 100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateFloors,The following statement contains a magic number: foo.Position = ConvertUnits.ToSimUnits (900' 100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateWalls,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	for (int j = 0; j < 10; j++) {  		Wall w = new Wall (wallTexture' this' physicsWorld);  		w.Position = ConvertUnits.ToSimUnits (i * (floorTexture.Width * 5)' ScreenHeight - (j * wallTexture.Height));  		gameObjects.Add (w);  	}  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateWalls,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	for (int j = 0; j < 10; j++) {  		Wall w = new Wall (wallTexture' this' physicsWorld);  		w.Position = ConvertUnits.ToSimUnits (i * (floorTexture.Width * 5)' ScreenHeight - (j * wallTexture.Height));  		gameObjects.Add (w);  	}  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateWalls,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	for (int j = 0; j < 10; j++) {  		Wall w = new Wall (wallTexture' this' physicsWorld);  		w.Position = ConvertUnits.ToSimUnits (i * (floorTexture.Width * 5)' ScreenHeight - (j * wallTexture.Height));  		gameObjects.Add (w);  	}  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateWalls,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	Wall w = new Wall (wallTexture' this' physicsWorld);  	w.Position = ConvertUnits.ToSimUnits (i * (floorTexture.Width * 5)' ScreenHeight - (j * wallTexture.Height));  	gameObjects.Add (w);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateWalls,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	Wall w = new Wall (wallTexture' this' physicsWorld);  	w.Position = ConvertUnits.ToSimUnits (i * (floorTexture.Width * 5)' ScreenHeight - (j * wallTexture.Height));  	gameObjects.Add (w);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateWalls,The following statement contains a magic number: w.Position = ConvertUnits.ToSimUnits (i * (floorTexture.Width * 5)' ScreenHeight - (j * wallTexture.Height));  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateShotgunBullet,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Bullet bulletBody = new Bullet (bulletTexture' this' damage' physicsWorld);  	float rotDiff = (i - 2) * 0.1f;  	bulletBody.Position = ConvertUnits.ToSimUnits (player.GunLocation ());  	bulletBody.Rotation = rotation + rotDiff;  	bulletBody.OnCollision += new OnCollisionEventHandler (Bullet_OnCollision);  	bulletBody.ApplyForce (new Vector2 (-(float)Math.Cos (rotation + rotDiff) * muzzleVelocity' -(float)Math.Sin (rotation + rotDiff) * muzzleVelocity));  	bulletBody.IgnoreGravity = true;  	gameObjects.Add (bulletBody);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateShotgunBullet,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	Bullet bulletBody = new Bullet (bulletTexture' this' damage' physicsWorld);  	float rotDiff = (i - 2) * 0.1f;  	bulletBody.Position = ConvertUnits.ToSimUnits (player.GunLocation ());  	bulletBody.Rotation = rotation + rotDiff;  	bulletBody.OnCollision += new OnCollisionEventHandler (Bullet_OnCollision);  	bulletBody.ApplyForce (new Vector2 (-(float)Math.Cos (rotation + rotDiff) * muzzleVelocity' -(float)Math.Sin (rotation + rotDiff) * muzzleVelocity));  	bulletBody.IgnoreGravity = true;  	gameObjects.Add (bulletBody);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	Robot robot = new Robot (RobotSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	Robot robot = new Robot (RobotSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	Robot robot = new Robot (RobotSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	Robot robot = new Robot (RobotSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	Robot robot = new Robot (RobotSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 400) + r.NextDouble () * 200' 100 + r.NextDouble () * 200);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	SuicideRobot robot = new SuicideRobot (RobotSpriteSheet' emissionSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  	robot.OnCollision += new OnCollisionEventHandler (SuicideRobot_OnCollision);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	SuicideRobot robot = new SuicideRobot (RobotSpriteSheet' emissionSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  	robot.OnCollision += new OnCollisionEventHandler (SuicideRobot_OnCollision);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	SuicideRobot robot = new SuicideRobot (RobotSpriteSheet' emissionSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  	robot.OnCollision += new OnCollisionEventHandler (SuicideRobot_OnCollision);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	SuicideRobot robot = new SuicideRobot (RobotSpriteSheet' emissionSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  	robot.OnCollision += new OnCollisionEventHandler (SuicideRobot_OnCollision);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	SuicideRobot robot = new SuicideRobot (RobotSpriteSheet' emissionSpriteSheet' this' physicsWorld);  	robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  	robot.OnCollision += new OnCollisionEventHandler (SuicideRobot_OnCollision);  	gameObjects.Add (robot);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateEnemies,The following statement contains a magic number: robot.Position = ConvertUnits.ToSimUnits (((i + 1) * 500) + r.NextDouble () * 200' 400 + r.NextDouble () * 100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Spike_OnCollision,The following statement contains a magic number: if ((typeof(ILivingThing).IsAssignableFrom (fixtureB.Body.GetType ()))) {  	ILivingThing hitObject = fixtureB.Body as ILivingThing;  	hitObject.DealDamage (100);  	return true;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Spike_OnCollision,The following statement contains a magic number: hitObject.DealDamage (100);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,SuicideRobot_OnCollision,The following statement contains a magic number: if (fixtureB.Body is Player) {  	CreateExplosion (fixtureA.Body.Position);  	physicsWorld.RemoveBody (fixtureA.Body);  	gameObjects.Remove ((SuicideRobot)fixtureA.Body);  	Player hitObject = fixtureB.Body as Player;  	hitObject.DealDamage (15);  	return true;  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,SuicideRobot_OnCollision,The following statement contains a magic number: hitObject.DealDamage (15);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Rocket_OnCollision,The following statement contains a magic number: foreach (Fixture f in fixtures) {  	//Dont apply forces to static objects' bullets' or other rockets  	if (!f.Body.IsStatic && f.Body.GetType () != typeof(Bullet) && f.Body.GetType () != typeof(Rocket)) {  		Vector2 fv = f.Body.Position - bodyPos;  		fv.Normalize ();  		//if (fv.X > 0)  		//    fv.X = 1 - fv.X;  		//else  		//    fv.X = -1 - fv.X;  		//if (fv.Y > 0)  		//    fv.Y = 1 - fv.Y;  		//else  		//    fv.Y = -1 - fv.Y;  		fv *= 5;  		f.Body.ApplyLinearImpulse (ref fv);  	}  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Rocket_OnCollision,The following statement contains a magic number: if (!f.Body.IsStatic && f.Body.GetType () != typeof(Bullet) && f.Body.GetType () != typeof(Rocket)) {  	Vector2 fv = f.Body.Position - bodyPos;  	fv.Normalize ();  	//if (fv.X > 0)  	//    fv.X = 1 - fv.X;  	//else  	//    fv.X = -1 - fv.X;  	//if (fv.Y > 0)  	//    fv.Y = 1 - fv.Y;  	//else  	//    fv.Y = -1 - fv.Y;  	fv *= 5;  	f.Body.ApplyLinearImpulse (ref fv);  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Rocket_OnCollision,The following statement contains a magic number: fv *= 5;  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: foreach (KeyValuePair<Type' List<List<float>>> kvp in dictionary) {  	if (kvp.Key == typeof(Floor)) {  		foreach (List<float> data in kvp.Value)  			CreateFloor (new Vector2 (data [0]' data [1]));  	}  	else if (kvp.Key == typeof(Doodad)) {  		foreach (List<float> data in kvp.Value)  			CreateDoodad (new Vector2 (data [0]' data [1]));  	}  	else if (kvp.Key == typeof(Wall)) {  		foreach (List<float> data in kvp.Value)  			CreateWall (new Vector2 (data [0]' data [1]));  	}  	else if (kvp.Key == typeof(Spikes)) {  		foreach (List<float> data in kvp.Value)  			CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  	}  	else if (kvp.Key == typeof(WinPoint)) {  		foreach (List<float> data in kvp.Value)  			CreateWinPoint (new Vector2 (data [0]' data [1]));  	}  	else if (kvp.Key == typeof(SpawnPoint)) {  		foreach (List<float> data in kvp.Value)  			CreateSpawnPoint (new Vector2 (data [0]' data [1]));  	}  	else if (kvp.Key == typeof(Robot)) {  		foreach (List<float> data in kvp.Value)  			CreateRobot (new Vector2 (data [0]' data [1]));  	}  	else if (kvp.Key == typeof(SuicideRobot)) {  		foreach (List<float> data in kvp.Value)  			CreateSuicideRobot (new Vector2 (data [0]' data [1]));  	}  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: if (kvp.Key == typeof(Floor)) {  	foreach (List<float> data in kvp.Value)  		CreateFloor (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> data in kvp.Value)  		CreateDoodad (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> data in kvp.Value)  		CreateWall (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> data in kvp.Value)  		CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateWinPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SpawnPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateSpawnPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> data in kvp.Value)  		CreateRobot (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> data in kvp.Value)  		CreateSuicideRobot (new Vector2 (data [0]' data [1]));  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: if (kvp.Key == typeof(Doodad)) {  	foreach (List<float> data in kvp.Value)  		CreateDoodad (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Wall)) {  	foreach (List<float> data in kvp.Value)  		CreateWall (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> data in kvp.Value)  		CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateWinPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SpawnPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateSpawnPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> data in kvp.Value)  		CreateRobot (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> data in kvp.Value)  		CreateSuicideRobot (new Vector2 (data [0]' data [1]));  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: if (kvp.Key == typeof(Wall)) {  	foreach (List<float> data in kvp.Value)  		CreateWall (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> data in kvp.Value)  		CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateWinPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SpawnPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateSpawnPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> data in kvp.Value)  		CreateRobot (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> data in kvp.Value)  		CreateSuicideRobot (new Vector2 (data [0]' data [1]));  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: if (kvp.Key == typeof(Spikes)) {  	foreach (List<float> data in kvp.Value)  		CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  }  else if (kvp.Key == typeof(WinPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateWinPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SpawnPoint)) {  	foreach (List<float> data in kvp.Value)  		CreateSpawnPoint (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(Robot)) {  	foreach (List<float> data in kvp.Value)  		CreateRobot (new Vector2 (data [0]' data [1]));  }  else if (kvp.Key == typeof(SuicideRobot)) {  	foreach (List<float> data in kvp.Value)  		CreateSuicideRobot (new Vector2 (data [0]' data [1]));  }  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: foreach (List<float> data in kvp.Value)  	CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  
Magic Number,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,CreateGameObjectsFromLevel,The following statement contains a magic number: CreateSpike (new Vector2 (data [0]' data [1])' data [2]);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: titleRect = new Rectangle ((MainGame.ScreenWidth / 2) - title.Width / 2' 75' title.Width' title.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: titleRect = new Rectangle ((MainGame.ScreenWidth / 2) - title.Width / 2' 75' title.Width' title.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: titleRect = new Rectangle ((MainGame.ScreenWidth / 2) - title.Width / 2' 75' title.Width' title.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: playGameRect = new Rectangle (MainGame.ScreenWidth / 2 - playGame.Width / 2' (int)(1.9f * MainGame.ScreenHeight / 3)' playGame.Width' playGame.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: playGameRect = new Rectangle (MainGame.ScreenWidth / 2 - playGame.Width / 2' (int)(1.9f * MainGame.ScreenHeight / 3)' playGame.Width' playGame.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: playGameRect = new Rectangle (MainGame.ScreenWidth / 2 - playGame.Width / 2' (int)(1.9f * MainGame.ScreenHeight / 3)' playGame.Width' playGame.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: optionsRect = new Rectangle (MainGame.ScreenWidth / 2 - options.Width / 2' (int)(2.2f * MainGame.ScreenHeight / 3)' options.Width' options.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: optionsRect = new Rectangle (MainGame.ScreenWidth / 2 - options.Width / 2' (int)(2.2f * MainGame.ScreenHeight / 3)' options.Width' options.Height);  
Magic Number,RobotRampage,MainMenu,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainMenu.cs,MainMenu,The following statement contains a magic number: optionsRect = new Rectangle (MainGame.ScreenWidth / 2 - options.Width / 2' (int)(2.2f * MainGame.ScreenHeight / 3)' options.Width' options.Height);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,SmokeParticle,The following statement contains a magic number: rectangle = new Rectangle ((int)pos.X' (int)pos.Y' texture.Width / 4' texture.Height / 4);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,SmokeParticle,The following statement contains a magic number: rectangle = new Rectangle ((int)pos.X' (int)pos.Y' texture.Width / 4' texture.Height / 4);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,SmokeParticle,The following statement contains a magic number: midpoint = new Vector2 (rectangle.Width / 2' rectangle.Height / 2);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,SmokeParticle,The following statement contains a magic number: midpoint = new Vector2 (rectangle.Width / 2' rectangle.Height / 2);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,SmokeParticle,The following statement contains a magic number: age = 255;  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Draw,The following statement contains a magic number: color = new Color (255' 255' 255' age);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Draw,The following statement contains a magic number: color = new Color (255' 255' 255' age);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Draw,The following statement contains a magic number: color = new Color (255' 255' 255' age);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Draw,The following statement contains a magic number: sb.Draw (texture' position' null' color' 0.0f' midpoint' scale + ((0.5f) * ((float)(255 - age) / 255))' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Draw,The following statement contains a magic number: sb.Draw (texture' position' null' color' 0.0f' midpoint' scale + ((0.5f) * ((float)(255 - age) / 255))' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,SmokeParticle,C:\repos\Cprice1771_RobotRampage\RobotRampage\SmokeParticle.cs,Update,The following statement contains a magic number: age -= 9;  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Player,The following statement contains a magic number: Health = 100;  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Player,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (FRAME_WIDTH / 2)' ConvertUnits.ToSimUnits (FRAME_HEIGHT / 2))' 1.0f));  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Player,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (FRAME_WIDTH / 2)' ConvertUnits.ToSimUnits (FRAME_HEIGHT / 2))' 1.0f));  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Update,The following statement contains a magic number: if (timeCounter > .04167f) {  	if (State != PlayerState.JUMPING || frameCounter < 3)  		frameCounter++;  	timeCounter -= .04167f;  }  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Update,The following statement contains a magic number: if (State != PlayerState.JUMPING || frameCounter < 3)  	frameCounter++;  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Reset,The following statement contains a magic number: Health = 100;  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Reset,The following statement contains a magic number: foreach (Gun g in Inventory) {  	g.LoadedAmmo = g.magazineSize;  	g.ReserveAmmo = g.magazineSize * 3;  	g.Reloading = false;  }  
Magic Number,RobotRampage,Player,C:\repos\Cprice1771_RobotRampage\RobotRampage\Player.cs,Reset,The following statement contains a magic number: g.ReserveAmmo = g.magazineSize * 3;  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Robot,The following statement contains a magic number: Health = 100;  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Robot,The following statement contains a magic number: destRect = new Rectangle ((int)Position.X' (int)Position.Y' 50' 50);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Robot,The following statement contains a magic number: destRect = new Rectangle ((int)Position.X' (int)Position.Y' 50' 50);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Robot,The following statement contains a magic number: fireRate = 1000;  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Robot,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (width / 2)' ConvertUnits.ToSimUnits (height / 2))' 1.0f));  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Robot,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (width / 2)' ConvertUnits.ToSimUnits (height / 2))' 1.0f));  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,ShootPlayer,The following statement contains a magic number: parent.CreateLaser (10' (float)Math.Atan2 (y' x)' 10.0f' laserLoc);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: if (state == RobotState.IDLE)  	srcRect = new Rectangle (30' 140' width' height);  else  	srcRect = new Rectangle (155' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: if (state == RobotState.IDLE)  	srcRect = new Rectangle (30' 140' width' height);  else  	srcRect = new Rectangle (155' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: if (state == RobotState.IDLE)  	srcRect = new Rectangle (30' 140' width' height);  else  	srcRect = new Rectangle (155' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: if (state == RobotState.IDLE)  	srcRect = new Rectangle (30' 140' width' height);  else  	srcRect = new Rectangle (155' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: srcRect = new Rectangle (30' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: srcRect = new Rectangle (30' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: srcRect = new Rectangle (155' 140' width' height);  
Magic Number,RobotRampage,Robot,C:\repos\Cprice1771_RobotRampage\RobotRampage\Robot.cs,Draw,The following statement contains a magic number: srcRect = new Rectangle (155' 140' width' height);  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Rocket,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Rocket,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Update,The following statement contains a magic number: if (timeCounter > .02167f) {  	timeCounter -= .02167f;  	Vector2 rocketTailLocation = new Vector2 ((ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2) + (float)(Math.Cos (Rotation) * texture.Width / 2)' (ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2) + (float)(Math.Sin (Rotation) * texture.Width / 2));  	parent.CreateSmoke (rocketTailLocation);  }  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Update,The following statement contains a magic number: if (timeCounter > .02167f) {  	timeCounter -= .02167f;  	Vector2 rocketTailLocation = new Vector2 ((ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2) + (float)(Math.Cos (Rotation) * texture.Width / 2)' (ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2) + (float)(Math.Sin (Rotation) * texture.Width / 2));  	parent.CreateSmoke (rocketTailLocation);  }  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Update,The following statement contains a magic number: if (timeCounter > .02167f) {  	timeCounter -= .02167f;  	Vector2 rocketTailLocation = new Vector2 ((ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2) + (float)(Math.Cos (Rotation) * texture.Width / 2)' (ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2) + (float)(Math.Sin (Rotation) * texture.Width / 2));  	parent.CreateSmoke (rocketTailLocation);  }  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Update,The following statement contains a magic number: if (timeCounter > .02167f) {  	timeCounter -= .02167f;  	Vector2 rocketTailLocation = new Vector2 ((ConvertUnits.ToDisplayUnits (Position.X) - texture.Width / 2) + (float)(Math.Cos (Rotation) * texture.Width / 2)' (ConvertUnits.ToDisplayUnits (Position.Y) - texture.Height / 2) + (float)(Math.Sin (Rotation) * texture.Width / 2));  	parent.CreateSmoke (rocketTailLocation);  }  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,Rocket,C:\repos\Cprice1771_RobotRampage\RobotRampage\Rocket.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,Spikes,C:\repos\Cprice1771_RobotRampage\RobotRampage\Spikes.cs,Spikes,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Spikes,C:\repos\Cprice1771_RobotRampage\RobotRampage\Spikes.cs,Spikes,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Spikes,C:\repos\Cprice1771_RobotRampage\RobotRampage\Spikes.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,Spikes,C:\repos\Cprice1771_RobotRampage\RobotRampage\Spikes.cs,Draw,The following statement contains a magic number: sb.Draw (this.texture' offset' srcRect' Color.White' Rotation' new Vector2 (texture.Width / 2' texture.Height / 2)' 1.0f' SpriteEffects.None' 1.0f);  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: frameSize = 125;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: frameCount = 2;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: width = 70;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: height = 60;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: Health = 100;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (width / 2)' ConvertUnits.ToSimUnits (height / 2))' 1.0f));  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (width / 2)' ConvertUnits.ToSimUnits (height / 2))' 1.0f));  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: srcRectEmission = new Rectangle (0' 0' 30' 50);  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: srcRectEmission = new Rectangle (0' 0' 30' 50);  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: destRectEmission = new Rectangle ((int)Position.X + width' (int)Position.Y + height' 30' 50);  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,SuicideRobot,The following statement contains a magic number: destRectEmission = new Rectangle ((int)Position.X + width' (int)Position.Y + height' 30' 50);  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,RunAtPlayerPlayer,The following statement contains a magic number: LinearVelocity = new Vector2 ((float)(-5 * Math.Cos (angle))' (float)(-5 * Math.Sin (angle)));  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,RunAtPlayerPlayer,The following statement contains a magic number: LinearVelocity = new Vector2 ((float)(-5 * Math.Cos (angle))' (float)(-5 * Math.Sin (angle)));  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Draw,The following statement contains a magic number: if (state == RobotState.IDLE)  	ypos = 285;  else  	ypos = 410;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Draw,The following statement contains a magic number: if (state == RobotState.IDLE)  	ypos = 285;  else  	ypos = 410;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Draw,The following statement contains a magic number: ypos = 285;  
Magic Number,RobotRampage,SuicideRobot,C:\repos\Cprice1771_RobotRampage\RobotRampage\SuicideRobot.cs,Draw,The following statement contains a magic number: ypos = 410;  
Magic Number,RobotRampage,Wall,C:\repos\Cprice1771_RobotRampage\RobotRampage\Wall.cs,Wall,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,Wall,C:\repos\Cprice1771_RobotRampage\RobotRampage\Wall.cs,Wall,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (t.Width / 2)' ConvertUnits.ToSimUnits (t.Height / 2))' 1.0f));  
Magic Number,RobotRampage,WinPoint,C:\repos\Cprice1771_RobotRampage\RobotRampage\WinPoint.cs,WinPoint,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (text.Width / 2)' ConvertUnits.ToSimUnits (text.Height / 2))' 1.0f));  
Magic Number,RobotRampage,WinPoint,C:\repos\Cprice1771_RobotRampage\RobotRampage\WinPoint.cs,WinPoint,The following statement contains a magic number: this.CreateFixture (new PolygonShape (PolygonTools.CreateRectangle (ConvertUnits.ToSimUnits (text.Width / 2)' ConvertUnits.ToSimUnits (text.Height / 2))' 1.0f));  
Missing Default,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Update,The following switch statement is missing a default case: switch (State) {  case GameState.LEVEL:  	physicsWorld.Step ((float)gameTime.ElapsedGameTime.TotalMilliseconds * 0.001f);  	#region Mouse Inputs  	if (Mouse.GetState ().ScrollWheelValue < mouseWheelLoc)  		player.CycleNextWeapon ();  	else if (Mouse.GetState ().ScrollWheelValue > mouseWheelLoc)  		player.CyclePreviousWeapon ();  	mouseWheelLoc = Mouse.GetState ().ScrollWheelValue;  	#endregion  	#region Camera  	int Y_CAMERA_THRESHOLD = (ScreenHeight / 2) + 100;  	//X movement  	if (ConvertUnits.ToDisplayUnits (player.Position.X) > (-1 * (gameCamera.Position.X)) + ScreenWidth - X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + ScreenWidth - X_CAMERA_THRESHOLD))' 0));  	else if (ConvertUnits.ToDisplayUnits (player.Position.X) < (-1 * (gameCamera.Position.X)) + X_CAMERA_THRESHOLD)  		gameCamera.Move (new Vector2 (-1 * (ConvertUnits.ToDisplayUnits (player.Position.X) - (-1 * (gameCamera.Position.X) + X_CAMERA_THRESHOLD))' 0));  	//Y movement  	float playerY = ConvertUnits.ToDisplayUnits (player.Position.Y);  	if (playerY > gameCamera.Position.Y + 700 && gameCamera.Position.Y > 0)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + 400))));  	else if (playerY < gameCamera.Position.Y + Y_CAMERA_THRESHOLD + 100)  		gameCamera.Move (new Vector2 (0' -1 * (ConvertUnits.ToDisplayUnits (player.Position.Y) - (-1 * (gameCamera.Position.Y) + Y_CAMERA_THRESHOLD))));  	CameraOffset = gameCamera.Position;  	#endregion  	#region Keyboard inputs  	if (player.LinearVelocity.Y != 0)  		player.State = PlayerState.JUMPING;  	else if (Keyboard.GetState ().IsKeyDown (Keys.D) || Keyboard.GetState ().IsKeyDown (Keys.A))  		player.State = PlayerState.RUNNING;  	else  		player.State = PlayerState.IDLE;  	//TODO: fix ground colloision detection  	if (Keyboard.GetState ().IsKeyDown (Keys.Space) && player.LinearVelocity.Y == 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (JumpEffect);  		player.ApplyForce (new Vector2 (0' -200.0f));  	}  	if (Keyboard.GetState ().IsKeyDown (Keys.D) && player.LinearVelocity.X < 5.0f)  		player.ApplyForce (new Vector2 (20.0f' 0));  	else if (Keyboard.GetState ().IsKeyDown (Keys.A) && player.LinearVelocity.X > -5.0f)  		player.ApplyForce (new Vector2 (-20.0f' 0));  	if (Keyboard.GetState ().IsKeyDown (Keys.R))  		player.EquipedWeapon.Reload ();  	#endregion  	#region Update HUD  	hud.Health = player.Health;  	hud.AmmoLoaded = player.EquipedWeapon.LoadedAmmo;  	hud.AmmoReserve = player.EquipedWeapon.ReserveAmmo;  	hud.Reloading = player.EquipedWeapon.Reloading;  	hud.selection = player.EquipedWeaponSlot;  	#endregion  	#region world cleanup  	for (int i = gameObjects.Count - 1; i >= 0; i--) {  		if (gameObjects [i] is ILivingThing) {  			ILivingThing deadObject = gameObjects [i] as ILivingThing;  			if (deadObject.Health <= 0) {  				if (!(deadObject is Player)) {  					Body deadBody = deadObject as Body;  					CreateExplosion (deadBody.Position);  				}  				physicsWorld.RemoveBody (deadObject as Body);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Bullet) {  			Bullet bullet = gameObjects [i] as Bullet;  			if (bullet.OffScreen ()) {  				physicsWorld.RemoveBody (bullet);  				gameObjects.RemoveAt (i);  			}  		}  		else if (gameObjects [i] is Explosion) {  			Explosion explosion = gameObjects [i] as Explosion;  			if (!explosion.IsAlive)  				gameObjects.RemoveAt (i);  		}  		else if (gameObjects [i] is SmokeParticle) {  			SmokeParticle smoke = gameObjects [i] as SmokeParticle;  			if (!smoke.IsAlive)  				gameObjects.RemoveAt (i);  		}  	}  	if (player.Health <= 0) {  		MediaPlayerHelper.MediaPlayerHelper.Instance.PlaySound (deathEffect);  		respawnPlayer ();  	}  	#endregion  	#region Misc Updates  	player.Update (gameTime);  	crosshair.Update (gameTime);  	for (int i = gameObjects.Count - 1; i >= 0; i--)  		gameObjects [i].Update (gameTime);  	#endregion  	break;  case GameState.MAIN_MENU:  	mainMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Update (gameTime);  	gameCamera.Position = Vector2.Zero;  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
Missing Default,RobotRampage,MainGame,C:\repos\Cprice1771_RobotRampage\RobotRampage\MainGame.cs,Draw,The following switch statement is missing a default case: switch (State) {  case GameState.LEVEL:  	foreach (IGameObject go in gameObjects)  		go.Draw (spriteBatch);  	player.Draw (spriteBatch);  	hud.Draw (spriteBatch);  	crosshair.Draw (spriteBatch);  	break;  case GameState.MAIN_MENU:  	mainMenu.Draw (spriteBatch);  	break;  case GameState.LEVEL_COMPLETE:  	levelCompleteMenu.Draw (spriteBatch);  	break;  case GameState.OPTIONS_MENU:  	throw new NotImplementedException ();  	break;  }  
