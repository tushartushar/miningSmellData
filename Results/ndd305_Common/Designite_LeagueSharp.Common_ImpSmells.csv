Implementation smell,Namespace,Class,File,Method,Description
Long Method,LeagueSharp.Common,AntiGapcloser,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AntiGapcloser.cs,AntiGapcloser,The method has 336 lines of code.
Long Method,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The method has 5744 lines of code.
Long Method,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,Interrupter,The method has 183 lines of code.
Long Method,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The method has 151 lines of code.
Long Method,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriorityFromDb,The method has 140 lines of code.
Complex Method,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,Cyclomatic complexity of the method is 9
Complex Method,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,Cyclomatic complexity of the method is 10
Complex Method,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,Cyclomatic complexity of the method is 14
Complex Method,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Read,Cyclomatic complexity of the method is 13
Complex Method,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Load,Cyclomatic complexity of the method is 13
Complex Method,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Save,Cyclomatic complexity of the method is 11
Complex Method,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,Cyclomatic complexity of the method is 17
Complex Method,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,Cyclomatic complexity of the method is 18
Complex Method,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,SetValue,Cyclomatic complexity of the method is 37
Complex Method,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,Cyclomatic complexity of the method is 80
Complex Method,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 33
Complex Method,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,Cyclomatic complexity of the method is 12
Complex Method,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,Cyclomatic complexity of the method is 14
Complex Method,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,Cyclomatic complexity of the method is 10
Complex Method,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,Cyclomatic complexity of the method is 38
Complex Method,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,Cyclomatic complexity of the method is 11
Complex Method,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,MakeConvexHull,Cyclomatic complexity of the method is 8
Complex Method,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,FindMinimalBoundingCircle,Cyclomatic complexity of the method is 11
Complex Method,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,_cast,Cyclomatic complexity of the method is 15
Complex Method,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,WillHit,Cyclomatic complexity of the method is 15
Complex Method,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,Cyclomatic complexity of the method is 31
Complex Method,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,Cyclomatic complexity of the method is 36
Complex Method,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,Cyclomatic complexity of the method is 18
Complex Method,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinions,Cyclomatic complexity of the method is 8
Complex Method,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestCircularFarmLocation,Cyclomatic complexity of the method is 10
Complex Method,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestLineFarmLocation,Cyclomatic complexity of the method is 9
Complex Method,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,Cyclomatic complexity of the method is 11
Long Parameter List,LeagueSharp.Common,Alerter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Alerter.cs,Alerter,The method has 7 parameters.
Long Parameter List,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The method has 1396 parameters.
Long Parameter List,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The method has 7 parameters.
Long Parameter List,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetDamageSpell,The method has 6 parameters.
Long Parameter List,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The method has 7 parameters.
Long Parameter List,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawBox,The method has 6 parameters.
Long Parameter List,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The method has 7 parameters.
Long Parameter List,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,MoveTo,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,Orbwalk,The method has 6 parameters.
Long Parameter List,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Distance,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The method has 6 parameters.
Long Parameter List,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,GetMinMaxCorners,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,CircleEnclosesPoints,The method has 6 parameters.
Long Parameter List,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,FindCircle,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,SetSkillshot,The method has 7 parameters.
Long Parameter List,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,SetCharged,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,_cast,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetSpellSlot,The method has 5 parameters.
Long Parameter List,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,DrawCircle,The method has 6 parameters.
Long Parameter List,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinions,The method has 7 parameters.
Long Parameter List,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinionsPredictedPositions,The method has 9 parameters.
Long Parameter List,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,IsUnderRectangle,The method has 5 parameters.
Long Statement,LeagueSharp.Common,AntiGapcloser,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AntiGapcloser.cs,Game_OnGameUpdate,The length of the statement  "			if (gapcloser.SkillType == GapcloserType.Targeted || (gapcloser.SkillType == GapcloserType.Skillshot && ObjectManager.Player.Distance (gapcloser.Sender) < 500)) { " is 162.
Long Statement,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The length of the statement  "		if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) { " is 217.
Long Statement,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The length of the statement  "		result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target)); " is 203.
Long Statement,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetDamageSpell,The length of the statement  "		var spell = Spells [source.ChampionName].FirstOrDefault (s => s.Slot == slot && stage == s.Stage) ?? Spells [source.ChampionName].FirstOrDefault (s => s.Slot == slot); " is 167.
Long Statement,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameUpdate,The length of the statement  "				DetectedDashes [dashItem.Key].EndTick = dashItem.Value.StartTick + (int)(1000 * (dashItem.Value.EndPos.Distance (dashItem.Value.StartPos) / dashItem.Value.Speed)); " is 163.
Long Statement,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,WriteHexString,The length of the statement  "	Bw.Write (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ()); " is 135.
Long Statement,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,SearchHexString,The length of the statement  "	return rawPacket.IndexOf (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ()).ToArray (); " is 162.
Long Statement,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Load,The length of the statement  "						strm.WriteArray (thisOffset + OffsetEntrySize' LoadedEntries [entry.KeyHash]' 0' LoadedEntries [entry.KeyHash].Length <= entry.Capacity ? LoadedEntries [entry.KeyHash].Length : entry.Capacity); " is 193.
Long Statement,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The length of the statement  "								strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity); " is 125.
Long Statement,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The length of the statement  "					strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity); " is 130.
Long Statement,LeagueSharp.Common,CustomMutex,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,InitMutex,The length of the statement  "	var appGuid = ((GuidAttribute)Assembly.GetExecutingAssembly ().GetCustomAttributes (typeof(GuidAttribute)' false).GetValue (0)).Value; " is 134.
Long Statement,LeagueSharp.Common,CustomMutex,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,InitMutex,The length of the statement  "	var allowEveryoneRule = new MutexAccessRule (new SecurityIdentifier (WellKnownSidType.WorldSid' null)' MutexRights.FullControl' AccessControlType.Allow); " is 153.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameUpdate,The length of the statement  "	ActiveAttacks.ToList ().Where (pair => pair.Value.StartTick < Environment.TickCount - 60000).ToList ().ForEach (pair => ActiveAttacks.Remove (pair.Key)); " is 153.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameProcessPacket,The length of the statement  "	if (args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)) { " is 173.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,ObjAiBaseOnOnProcessSpellCast,The length of the statement  "	if (!sender.IsValidTarget (3000' false) || sender.Team != ObjectManager.Player.Team || sender is Obj_AI_Hero || !Orbwalking.IsAutoAttack (args.SData.Name) || !(args.Target is Obj_AI_Base)) { " is 190.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,ObjAiBaseOnOnProcessSpellCast,The length of the statement  "	var attackData = new PredictedDamage (sender' target' Environment.TickCount - Game.Ping / 2' sender.AttackCastDelay * 1000' sender.AttackDelay * 1000 - (sender is Obj_AI_Turret ? 70 : 0)' sender.IsMelee () ? int.MaxValue : (int)args.SData.MissileSpeed' (float)sender.GetAutoAttackDamage (target' true)); " is 303.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,GetHealthPrediction,The length of the statement  "		if (attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId) { " is 158.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,LaneClearHealthPrediction,The length of the statement  "		if (Environment.TickCount - 100 <= attack.StartTick + attack.AnimationTime && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId) { " is 232.
Long Statement,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,LaneClearHealthPrediction,The length of the statement  "				if (fromT >= Environment.TickCount && (fromT + attack.Delay + unit.Distance (attack.Source) / attack.ProjectileSpeed < toT)) { " is 126.
Long Statement,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,Game_OnGameUpdate,The length of the statement  "		foreach (var spell in Spells.Where (spell => (enemy.LastCastedspell () != null && String.Equals (enemy.LastCastedspell ().Name' spell.SpellName' StringComparison.CurrentCultureIgnoreCase) && Environment.TickCount - enemy.LastCastedSpellT () < 350 + spell.ExtraDuration) || (spell.BuffName != null && enemy.HasBuff (spell.BuffName' true)))) { " is 341.
Long Statement,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,IsChannelingImportantSpell,The length of the statement  "	return Spells.Where (spell => spell.ChampionName == unit.ChampionName).Any (spell => (unit.LastCastedspell () != null && unit.LastCastedspell ().Name.ToLower () == spell.SpellName.ToLower () && Environment.TickCount - unit.LastCastedSpellT () < 350 + spell.ExtraDuration) || (spell.BuffName != null && unit.HasBuff (spell.BuffName' true)) || (ObjectManager.Player.NetworkId == unit.NetworkId && LastCastedSpell.LastCastPacketSent != null && LastCastedSpell.LastCastPacketSent.Slot == spell.Slot && Environment.TickCount - LastCastedSpell.LastCastPacketSent.Tick < 150 + Game.Ping)); " is 582.
Long Statement,LeagueSharp.Common,LastCastedSpell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\LastCastedSpell.cs,Game_OnGameSendPacket,The length of the statement  "		LastCastPacketSent = new LastCastPacketSentEntry (decodedPacket.Slot' Environment.TickCount' decodedPacket.TargetNetworkId); " is 124.
Long Statement,LeagueSharp.Common,MenuSettings,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The length of the statement  "	if ((args.Msg == (uint)WindowsMessages.WM_KEYUP || args.Msg == (uint)WindowsMessages.WM_KEYDOWN) && args.WParam == Config.ShowMenuPressKey) { " is 141.
Long Statement,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawOnOff,The length of the statement  "	Font.DrawText (null' s' new SharpDX.Rectangle ((int)(item.Position.X + item.Width - item.Height)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255)); " is 236.
Long Statement,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawArrow,The length of the statement  "	Font.DrawText (null' s' new SharpDX.Rectangle ((int)(position.X)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255)); " is 204.
Long Statement,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The length of the statement  "		Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255)); " is 215.
Long Statement,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "	MenuDrawHelper.DrawBox (Position' Width' Height' (Children.Count > 0 && Children [0].Visible || Items.Count > 0 && Items [0].Visible) ? MenuSettings.ActiveBackgroundColor : MenuSettings.BackgroundColor' 1' Color.Black); " is 219.
Long Statement,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (DisplayName)' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255)); " is 210.
Long Statement,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "	MenuDrawHelper.Font.DrawText (null' ">"' new SharpDX.Rectangle ((int)Position.X - 5' (int)Position.Y' Width' Height)' FontDrawFlags.Right | FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255)); " is 206.
Long Statement,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,SetValue,The length of the statement  "	_saveFilePath = MenuSettings.MenuConfigPath + dname + "\\" + Utils.Md5Hash ("v2" + DisplayName + Name + newValue.GetType ()); " is 125.
Long Statement,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The length of the statement  "		if (message == WindowsMessages.WM_MOUSEMOVE && Interacting || message == WindowsMessages.WM_LBUTTONDOWN && !Interacting && IsInside (cursorPos)) { " is 146.
Long Statement,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "		MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255)); " is 221.
Long Statement,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "		MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black); " is 121.
Long Statement,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "		MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255)); " is 235.
Long Statement,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The length of the statement  "	MenuDrawHelper.Font.DrawText (null' s' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255)); " is 182.
Long Statement,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,IsAutoAttack,The length of the statement  "	return (name.ToLower ().Contains ("attack") && !NoAttacks.Contains (name.ToLower ())) || Attacks.Contains (name.ToLower ()); " is 124.
Long Statement,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,MoveTo,The length of the statement  "		point = position + (randomizeMinDistance ? (_random.NextFloat (0.6f' 1) + 0.2f) * _minDistance : _minDistance) * (position.To2D () - Player.ServerPosition.To2D ()).Normalized ().To3D (); " is 186.
Long Statement,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,MoveTo,The length of the statement  "			point = position + (_random.NextFloat (0.6f' 1) + 0.2f) * _minDistance * (position.To2D () - Player.ServerPosition.To2D ()).Normalized ().To3D (); " is 146.
Long Statement,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,MoveTo,The length of the statement  "			point = Player.ServerPosition + _minDistance * (position.To2D () - Player.ServerPosition.To2D ()).Normalized ().To3D (); " is 120.
Long Statement,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessPacket,The length of the statement  "	if (args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)) { " is 173.
Long Statement,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The length of the statement  "		if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) { " is 157.
Long Statement,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The length of the statement  "		if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) { " is 163.
Long Statement,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The length of the statement  "				result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D (); " is 134.
Long Statement,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetImmobilePrediction,The length of the statement  "		Hitchance = HitChance.High/*timeToReachTargetPosition - remainingImmobileT + input.RealRadius / input.Unit.MoveSpeed < 0.4d ? HitChance.High : HitChance.Medium*/' " is 162.
Long Statement,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,UnitIsImmobileUntil,The length of the statement  "		if (buff.IsActive && Game.Time <= buff.EndTime && (buff.Type == BuffType.Charm || buff.Type == BuffType.Knockup || buff.Type == BuffType.Stun || buff.Type == BuffType.Suppression || buff.Type == BuffType.Snare)) { " is 213.
Long Statement,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The length of the statement  "				var p = a + direction * ((i == path.Count - 2) ? Math.Min (tDistance + input.RealRadius' d) : (tDistance + input.RealRadius)); " is 126.
Long Statement,LeagueSharp.Common,AoePrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPosibleTargets,The length of the statement  "	foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (h => h.NetworkId != input.Unit.NetworkId && h.IsValidTarget ((input.Range + 200 + input.RealRadius)' true' input.RangeCheckFrom))) { " is 195.
Long Statement,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The length of the statement  "						if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) { " is 165.
Long Statement,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The length of the statement  "						if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) { " is 157.
Long Statement,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The length of the statement  "					if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) { " is 178.
Long Statement,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The length of the statement  "					var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000; " is 168.
Long Statement,LeagueSharp.Common,PathTracker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStoredPaths,The length of the statement  "	return StoredPaths.ContainsKey (unit.NetworkId) ? StoredPaths [unit.NetworkId].Where (p => p.Time < maxT).ToList () : new List<StoredPath> (); " is 142.
Long Statement,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Distance3D,The length of the statement  "	return squared ? Vector3.DistanceSquared (unit.Position' anotherUnit.Position) : Vector3.Distance (unit.Position' anotherUnit.Position); " is 136.
Long Statement,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Distance,The length of the statement  "		return squared ? Vector2.DistanceSquared (objects.SegmentPoint' point) : Vector2.Distance (objects.SegmentPoint' point); " is 120.
Long Statement,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,ProjectOn,The length of the statement  "	var rL = ((cx - ax) * (bx - ax) + (cy - ay) * (by - ay)) / ((float)Math.Pow (bx - ax' 2) + (float)Math.Pow (by - ay' 2)); " is 121.
Long Statement,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Intersection,The length of the statement  "	return new IntersectionResult (true' new Vector2 ((float)(lineSegment1Start.X + r * deltaBAx)' (float)(lineSegment1Start.Y + r * deltaBAy))); " is 141.
Long Statement,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The length of the statement  "	float sP1x = startPoint1.X' sP1y = startPoint1.Y' eP1x = endPoint1.X' eP1y = endPoint1.Y' sP2x = startPoint2.X' sP2y = startPoint2.Y; " is 133.
Long Statement,LeagueSharp.Common,Items,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Items.cs,CanUseItem,The length of the statement  "	var inst = ObjectManager.Player.Spellbook.Spells.FirstOrDefault (spell => (int)spell.Slot == islot.Slot + (int)SpellSlot.Item1); " is 128.
Long Statement,LeagueSharp.Common,Items,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Items.cs,CanUseItem,The length of the statement  "	var inst = ObjectManager.Player.Spellbook.Spells.FirstOrDefault (spell => (int)spell.Slot == islot.Slot + (int)SpellSlot.Item1); " is 128.
Long Statement,LeagueSharp.Common,Items,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Items.cs,UseItem,The length of the statement  "	foreach (var slot in ObjectManager.Player.InventoryItems.Where (slot => slot.Id == (ItemId)id).Where (slot => position != null)) { " is 130.
Long Statement,LeagueSharp.Common,Items,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Items.cs,UseItem,The length of the statement  "	foreach (var slot in ObjectManager.Player.InventoryItems.Where (slot => slot.Id == (ItemId)id).Where (slot => position != null)) { " is 130.
Long Statement,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,HullCull,The length of the statement  "	var results = points.Where (pt => pt.X <= culling_box.Left || pt.X >= culling_box.Right || pt.Y <= culling_box.Top || pt.Y >= culling_box.Bottom).ToList (); " is 156.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,_cast,The length of the statement  "			Packet.C2S.ChargedCast.Encoded (new Packet.C2S.ChargedCast.Struct ((SpellSlot)((byte)Slot)' prediction.CastPosition.X' ObjectManager.Player.ServerPosition.Z' prediction.CastPosition.Y)).Send (); " is 194.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,_cast,The length of the statement  "		Packet.C2S.Cast.Encoded (new Packet.C2S.Cast.Struct (0' Slot' -1' prediction.CastPosition.X' prediction.CastPosition.Y' prediction.CastPosition.X' prediction.CastPosition.Y)).Send (); " is 183.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,Cast,The length of the statement  "			Packet.C2S.ChargedCast.Encoded (new Packet.C2S.ChargedCast.Struct ((SpellSlot)((byte)Slot)' position.X' position.Z' position.Y)).Send (); " is 137.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,Cast,The length of the statement  "		Packet.C2S.Cast.Encoded (new Packet.C2S.Cast.Struct (0' Slot' -1' position.X' position.Y' position.X' position.Y)).Send (); " is 123.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,IsReady,The length of the statement  "	return t == 0 || (ObjectManager.Player.Spellbook.CanUseSpell (Slot) == SpellState.Cooldown && (ObjectManager.Player.Spellbook.GetSpell (Slot).CooldownExpires - Game.Time) <= t / 1000f); " is 185.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,GetCircularFarmLocation,The length of the statement  "	var positions = MinionManager.GetMinionsPredictedPositions (minionPositions' Delay' Width' Speed' From' Range' false' SkillshotType.SkillshotCircle); " is 149.
Long Statement,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,GetLineFarmLocation,The length of the statement  "	var positions = MinionManager.GetMinionsPredictedPositions (minionPositions' Delay' Width' Speed' From' Range' false' SkillshotType.SkillshotLine); " is 147.
Long Statement,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The length of the statement  "		foreach (var target in ObjectManager.Get<Obj_AI_Hero> ().Where (target => target.IsValidTarget () && Geometry.Distance (target) <= _range)) { " is 141.
Long Statement,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The length of the statement  "					if (target.BaseAttackDamage + target.FlatPhysicalDamageMod < newtarget.BaseAttackDamage + newtarget.FlatPhysicalDamageMod) { " is 124.
Long Statement,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The length of the statement  "					if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) { " is 166.
Long Statement,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The length of the statement  "					if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Physical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Physical' newtarget.Health)))) { " is 221.
Long Statement,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The length of the statement  "					if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Magical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Magical' newtarget.Health)))) { " is 219.
Long Statement,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AutoPriority,The length of the statement  "	foreach (var target in ObjectManager.Get<Obj_AI_Hero> ().Where (target => target != null && target.IsValidTarget () && Geometry.Distance (target) <= _range)) { " is 159.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The length of the statement  "	if (_selectedTarget.IsValidTarget () && _config != null && _config.Item ("FocusSelected").GetValue<bool> () && _config.Item ("SelTColor").GetValue<Circle> ().Active) { " is 167.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The length of the statement  "		Render.Circle.DrawCircle (_selectedTarget.Position' 150' _config.Item ("SelTColor").GetValue<Circle> ().Color' 7' true); " is 120.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The length of the statement  "	foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (hero => hero.IsValidTarget ()).OrderByDescending (h => h.Distance (Game.CursorPos)).Where (enemy => enemy.Distance (Game.CursorPos) < 200)) { " is 204.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AddToMenu,The length of the statement  "	Config.AddItem (new MenuItem ("SelTColor"' "Selected target color").SetShared ().SetValue (new Circle (true' System.Drawing.Color.Red))); " is 137.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AddToMenu,The length of the statement  "		Config.AddItem (new MenuItem ("SimpleTS" + enemy.ChampionName + "Priority"' enemy.ChampionName).SetShared ().SetValue (new Slider (autoPriorityItem.GetValue<bool> () ? GetPriorityFromDb (enemy.ChampionName) : 1' 5' 1))); " is 220.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AddToMenu,The length of the statement  "	Config.AddItem (new MenuItem ("TargetingMode"' "Target Mode").SetShared ().SetValue<StringList> (new StringList (new[] { " is 120.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,autoPriorityItem_ValueChanged,The length of the statement  "		_config.Item ("SimpleTS" + enemy.ChampionName + "Priority").SetValue (new Slider (GetPriorityFromDb (enemy.ChampionName)' 5' 1)); " is 129.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The length of the statement  "	if (SelectedTarget.IsValidTarget () && !IsInvulnerable (SelectedTarget) && (range < 0 && Orbwalking.InAutoAttackRange (SelectedTarget) || champion.Distance (SelectedTarget) < range)) { " is 184.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The length of the statement  "		if (!hero.IsValidTarget () || IsInvulnerable (hero) || ((!(range < 0) || !Orbwalking.InAutoAttackRange (hero)) && !(champion.Distance (hero) < range))) { " is 153.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The length of the statement  "			if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) { " is 122.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The length of the statement  "			if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) { " is 165.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The length of the statement  "			if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) { " is 218.
Long Statement,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The length of the statement  "			if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) { " is 216.
Long Statement,LeagueSharp.Common,MultiLanguage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MultiLanguage.cs,LoadLanguage,The length of the statement  "		Translations = ((TranslatedEntry[])Serializer.Deserialize (File.OpenRead (filePath))).ToDictionary (i => i.TextToTranslate' i => i.TranslatedText); " is 147.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,IsFacing,The length of the statement  "	return target.Distance (Vector2.Add (new Vector2 (source.Position.X' source.Position.Y)' (Vector2.Subtract (new Vector2 (source.ServerPosition.X' source.ServerPosition.Y)' new Vector2 (source.Position.X' source.Position.Y)).Normalized () * (target.Distance (source))))) <= lineLength; " is 284.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,IsValidTarget,The length of the statement  "	if (range < float.MaxValue && Vector2.DistanceSquared ((from.To2D ().IsValid () ? from : ObjectManager.Player.ServerPosition).To2D ()' unit.ServerPosition.To2D ()) > range * range) { " is 182.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,HasBuff,The length of the statement  "	return unit.Buffs.Any (buff => ((!dontUseDisplayName && buff.DisplayName == buffName) || (dontUseDisplayName && buff.Name == buffName)) && buff.IsActive && buff.EndTime - Game.Time >= 0); " is 187.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,CountEnemysInRange,The length of the statement  "	return ObjectManager.Get<Obj_AI_Hero> ().Where (units => units.IsValidTarget ()).Count (units => Vector2.Distance (point.To2D ()' units.Position.To2D ()) <= range); " is 164.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,CountEnemysInRange,The length of the statement  "	return ObjectManager.Get<Obj_AI_Hero> ().Where (units => units.IsValidTarget ()).Count (units => Vector2.Distance (point.To2D ()' units.Position.To2D ()) <= range); " is 164.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,InShopRange,The length of the statement  "	return ObjectManager.Get<Obj_Shop> ().Where (shop => shop.IsAlly).Any (shop => Vector2.Distance (ObjectManager.Player.Position.To2D ()' shop.Position.To2D ()) < 1250); " is 167.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,DrawCircle,The length of the statement  "		pointList.Add (new Vector3 (center.X + radius * (float)Math.Cos (angle)' center.Y + radius * (float)Math.Sin (angle)' center.Z)); " is 129.
Long Statement,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,InFountain,The length of the statement  "	return ObjectManager.Get<GameObject> ().Where (spawnPoint => spawnPoint is Obj_SpawnPoint && spawnPoint.IsAlly).Any (spawnPoint => Vector2.Distance (ObjectManager.Player.Position.To2D ()' spawnPoint.Position.To2D ()) < fountainRange); " is 234.
Long Statement,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinions,The length of the statement  "			if (team == MinionTeam.Neutral && minionTeam == GameObjectTeam.Neutral || team == MinionTeam.Ally && minionTeam == (ObjectManager.Player.Team == GameObjectTeam.Chaos ? GameObjectTeam.Chaos : GameObjectTeam.Order) || team == MinionTeam.Enemy && minionTeam == (ObjectManager.Player.Team == GameObjectTeam.Chaos ? GameObjectTeam.Order : GameObjectTeam.Chaos) || team == MinionTeam.NotAlly && minionTeam != ObjectManager.Player.Team || team == MinionTeam.NotAllyForEnemy && (minionTeam == ObjectManager.Player.Team || minionTeam == GameObjectTeam.Neutral) || team == MinionTeam.All) { " is 580.
Long Statement,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinions,The length of the statement  "				if (minion.IsMelee () && type == MinionTypes.Melee || !minion.IsMelee () && type == MinionTypes.Ranged || type == MinionTypes.All) { " is 132.
Long Statement,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestCircularFarmLocation,The length of the statement  "	/* Use MEC to get the best positions only when there are less than 9 positions because it causes lag with more. */if (minionPositions.Count <= useMECMax) { " is 155.
Long Statement,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestCircularFarmLocation,The length of the statement  "			if (circle.Radius <= width && Vector2.DistanceSquared (circle.Center' ObjectManager.Player.ServerPosition.To2D ()) <= range) { " is 126.
Complex Conditional,LeagueSharp.Common,AutoLevel,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AutoLevel.cs,Game_OnGameProcessPacket,The conditional expression  "!dp.Unit.IsValid || !dp.Unit.IsMe || (ObjectManager.Player.Level == 1 && HasLevelOneSpell ())"  is complex.
Complex Conditional,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The conditional expression  "source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)"  is complex.
Complex Conditional,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameProcessPacket,The conditional expression  "args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)"  is complex.
Complex Conditional,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,ObjAiBaseOnOnProcessSpellCast,The conditional expression  "!sender.IsValidTarget (3000' false) || sender.Team != ObjectManager.Player.Team || sender is Obj_AI_Hero || !Orbwalking.IsAutoAttack (args.SData.Name) || !(args.Target is Obj_AI_Base)"  is complex.
Complex Conditional,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,LaneClearHealthPrediction,The conditional expression  "Environment.TickCount - 100 <= attack.StartTick + attack.AnimationTime && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId"  is complex.
Complex Conditional,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The conditional expression  "message == WindowsMessages.WM_MOUSEMOVE && Interacting || message == WindowsMessages.WM_LBUTTONDOWN && !Interacting && IsInside (cursorPos)"  is complex.
Complex Conditional,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessPacket,The conditional expression  "args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)"  is complex.
Complex Conditional,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,UnitIsImmobileUntil,The conditional expression  "buff.IsActive && Game.Time <= buff.EndTime && (buff.Type == BuffType.Charm || buff.Type == BuffType.Knockup || buff.Type == BuffType.Stun || buff.Type == BuffType.Suppression || buff.Type == BuffType.Snare)"  is complex.
Complex Conditional,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The conditional expression  "!ObjectManager.Player.IsDead && _drawcircle && Target != null && Target.IsVisible && !Target.IsDead"  is complex.
Complex Conditional,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The conditional expression  "_selectedTarget.IsValidTarget () && _config != null && _config.Item ("FocusSelected").GetValue<bool> () && _config.Item ("SelTColor").GetValue<Circle> ().Active"  is complex.
Complex Conditional,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The conditional expression  "SelectedTarget.IsValidTarget () && !IsInvulnerable (SelectedTarget) && (range < 0 && Orbwalking.InAutoAttackRange (SelectedTarget) || champion.Distance (SelectedTarget) < range)"  is complex.
Complex Conditional,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The conditional expression  "!hero.IsValidTarget () || IsInvulnerable (hero) || ((!(range < 0) || !Orbwalking.InAutoAttackRange (hero)) && !(champion.Distance (hero) < range))"  is complex.
Complex Conditional,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,IsValidTarget,The conditional expression  "unit == null || !unit.IsValid || unit.IsDead || !unit.IsVisible || !unit.IsTargetable || unit.IsInvulnerable"  is complex.
Complex Conditional,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinions,The conditional expression  "team == MinionTeam.Neutral && minionTeam == GameObjectTeam.Neutral || team == MinionTeam.Ally && minionTeam == (ObjectManager.Player.Team == GameObjectTeam.Chaos ? GameObjectTeam.Chaos : GameObjectTeam.Order) || team == MinionTeam.Enemy && minionTeam == (ObjectManager.Player.Team == GameObjectTeam.Chaos ? GameObjectTeam.Order : GameObjectTeam.Chaos) || team == MinionTeam.NotAlly && minionTeam != ObjectManager.Player.Team || team == MinionTeam.NotAllyForEnemy && (minionTeam == ObjectManager.Player.Team || minionTeam == GameObjectTeam.Neutral) || team == MinionTeam.All"  is complex.
Complex Conditional,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetMinions,The conditional expression  "minion.IsMelee () && type == MinionTypes.Melee || !minion.IsMelee () && type == MinionTypes.Ranged || type == MinionTypes.All"  is complex.
Magic Number,LeagueSharp.Common,AntiGapcloser,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AntiGapcloser.cs,Game_OnGameUpdate,The following statement contains a magic number: ActiveGapclosers.RemoveAll (entry => Environment.TickCount > entry.TickCount + 900);  
Magic Number,LeagueSharp.Common,AntiGapcloser,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AntiGapcloser.cs,Game_OnGameUpdate,The following statement contains a magic number: foreach (var gapcloser in ActiveGapclosers) {  	if (gapcloser.Sender.IsValidTarget ()) {  		if (gapcloser.SkillType == GapcloserType.Targeted || (gapcloser.SkillType == GapcloserType.Skillshot && ObjectManager.Player.Distance (gapcloser.Sender) < 500)) {  			OnEnemyGapcloser (gapcloser);  		}  	}  }  
Magic Number,LeagueSharp.Common,AntiGapcloser,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AntiGapcloser.cs,Game_OnGameUpdate,The following statement contains a magic number: if (gapcloser.Sender.IsValidTarget ()) {  	if (gapcloser.SkillType == GapcloserType.Targeted || (gapcloser.SkillType == GapcloserType.Skillshot && ObjectManager.Player.Distance (gapcloser.Sender) < 500)) {  		OnEnemyGapcloser (gapcloser);  	}  }  
Magic Number,LeagueSharp.Common,AntiGapcloser,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AntiGapcloser.cs,Game_OnGameUpdate,The following statement contains a magic number: if (gapcloser.SkillType == GapcloserType.Targeted || (gapcloser.SkillType == GapcloserType.Skillshot && ObjectManager.Player.Distance (gapcloser.Sender) < 500)) {  	OnEnemyGapcloser (gapcloser);  }  
Magic Number,LeagueSharp.Common,AutoLevel,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AutoLevel.cs,InitialLevelUp,The following statement contains a magic number: if (Game.Time < 20) {  	for (var i = 0; i < ObjectManager.Player.Level; i++) {  		var spell = (SpellSlot)(order [i] - 1);  		if (ObjectManager.Player.Spellbook.GetSpell (spell).Level < 2) {  			ObjectManager.Player.Spellbook.LevelUpSpell (spell);  		}  	}  }  
Magic Number,LeagueSharp.Common,AutoLevel,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AutoLevel.cs,InitialLevelUp,The following statement contains a magic number: if (Game.Time < 20) {  	for (var i = 0; i < ObjectManager.Player.Level; i++) {  		var spell = (SpellSlot)(order [i] - 1);  		if (ObjectManager.Player.Spellbook.GetSpell (spell).Level < 2) {  			ObjectManager.Player.Spellbook.LevelUpSpell (spell);  		}  	}  }  
Magic Number,LeagueSharp.Common,AutoLevel,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AutoLevel.cs,InitialLevelUp,The following statement contains a magic number: for (var i = 0; i < ObjectManager.Player.Level; i++) {  	var spell = (SpellSlot)(order [i] - 1);  	if (ObjectManager.Player.Spellbook.GetSpell (spell).Level < 2) {  		ObjectManager.Player.Spellbook.LevelUpSpell (spell);  	}  }  
Magic Number,LeagueSharp.Common,AutoLevel,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\AutoLevel.cs,InitialLevelUp,The following statement contains a magic number: if (ObjectManager.Player.Spellbook.GetSpell (spell).Level < 2) {  	ObjectManager.Player.Spellbook.LevelUpSpell (spell);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Gnar"'  	IsActive = (source' target) => (from buff in target.Buffs  	where buff.DisplayName == "GnarWProc"  	select buff.Count).FirstOrDefault () == 2'  	GetDamage = (source' target) => ((float)source.GetSpellDamage (target' SpellSlot.W))'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "MissFortune"'  	IsActive = (source' target) => (source.HasBuff ("MissFortunePassive"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod))'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Orianna"'  	IsActive = (source' target) => (source.HasBuff ("OrianaSpellSword"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.15 * source.FlatMagicDamageMod + new float[] {  		10'  		10'  		10'  		18'  		18'  		18'  		26'  		26'  		26'  		34'  		34'  		34'  		42'  		42'  		42'  		50'  		50'  		50  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Teemo"'  	IsActive = (source' target) => (source.HasBuff ("Toxic Attack"))'  	GetDamage = (source' target) => ((float)source.CalcDamage (target' DamageType.Magical' source.Spellbook.GetSpell (SpellSlot.E).Level * 10 + source.FlatMagicDamageMod * 0.3))'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Teemo"'  	IsActive = (source' target) => (source.HasBuff ("Toxic Attack"))'  	GetDamage = (source' target) => ((float)source.CalcDamage (target' DamageType.Magical' source.Spellbook.GetSpell (SpellSlot.E).Level * 10 + source.FlatMagicDamageMod * 0.3))'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Vayne"'  	IsActive = (source' target) => (from buff in target.Buffs  	where buff.DisplayName == "VayneSilverDebuff"  	select buff.Count).FirstOrDefault () == 2'  	GetDamage = (source' target) => ((float)source.GetSpellDamage (target' SpellSlot.W))'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: p = new PassiveDamage {  	ChampionName = "Ziggs"'  	IsActive = (source' target) => (source.HasBuff ("ziggsShortFuse"))'  	GetDamage = (source' target) => (float)source.CalcDamage (target' DamageType.Magical' (float)0.25d * source.FlatMagicDamageMod + new float[] {  		20'  		24'  		28'  		32'  		36'  		40'  		48'  		56'  		64'  		72'  		80'  		88'  		100'  		112'  		124'  		136'  		148'  		160  	} [source.Level - 1])'  };  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Aatrox"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ahri"' new List<DamageSpell> {  	//Normal Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//Q Return  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W => Magic Damage to the Same Target  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			64'  			104'  			144'  			184'  			224  		} [level] + 0.64 * source.FlatMagicDamageMod  	}'  	//W => 1 FF  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//R' per dash  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Akali"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q Detonation  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.3 * source.FlatMagicDamageMod + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			175'  			250  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Alistar"' new List<DamageSpell> {  	//Q Initial  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.2 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			110'  			165'  			220'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Amumu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			8'  			12'  			16'  			20'  			24  		} [level] + (new[] {  			0.01'  			0.015'  			0.02'  			0.025'  			0.03  		} [level] + 0.01 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			100'  			125'  			150'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Anivia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] * 2 + 1 * source.FlatMagicDamageMod  	}'  	//E - not chilled targets - TODO  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Annie"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			115'  			150'  			185'  			220  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.85 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			210'  			335'  			460  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ashe"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			250'  			425'  			600  		} [level] + 1 * source.FlatMagicDamageMod) / 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Azir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			105'  			135'  			165'  			195  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Blitzcrank"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Brand"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Braum"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.025 * source.MaxHealth  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Caitlyn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + 1.3 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			475'  			700  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Cassiopeia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] / 100 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("ChoGath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			305  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			300'  			475'  			650  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Corki"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.5 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			32'  			44'  			56'  			68  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R - Normal missile  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			180'  			260  		} [level] + 0.3 * source.FlatMagicDamageMod + new double[] {  			20'  			30'  			40  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Big missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			270'  			390  		} [level] + 0.45 * source.FlatMagicDamageMod + new double[] {  			30'  			40'  			60  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Darius"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  	//Q - Blade  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			105'  			157.5'  			210'  			262.5'  			315  		} [level] + 1.05 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R   	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			160'  			250'  			340  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Diana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("DrMundo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (target.Team == GameObjectTeam.Neutral ? new double[] {  			300 / 400 / 500 / 600 / 700  		} [level] : 9999' Math.Max (new double[] {  			80'  			130'  			180'  			230'  			280  		} [level]' new double[] {  			15'  			18'  			21'  			23'  			25  		} [level] / 100 * target.Health))  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Draven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			55'  			65'  			75'  			85  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			175'  			275'  			375  		} [level] + 1.1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Elise"' new List<DamageSpell> {  	//Q - Human  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//Q - Spider  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + (0.08 + 0.03 / 100 * source.FlatMagicDamageMod) * (target.MaxHealth - target.Health)  	}'  	//W - Human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Evelynn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + new double[] {  			35'  			40'  			45'  			50'  			55  		} [level] / 100 * source.FlatMagicDamageMod + new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			0.15'  			0.20'  			0.25  		} [level] + 0.01 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ezreal"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			35'  			55'  			75'  			95'  			115  		} [level] + 0.4 * source.FlatMagicDamageMod + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			350'  			500'  			650  		} [level] + 0.9 * source.FlatMagicDamageMod + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiddlesticks"' new List<DamageSpell> {  	//W - Per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//E - Per bounce  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			85'  			105'  			125'  			145  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - Per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			225'  			325  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fiora"' new List<DamageSpell> {  	//Q - per dash  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W   	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			325'  			663'  			1001  		} [level] + 2.34 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Fizz"' new List<DamageSpell> {  	//Q - AA excluded.  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			15'  			20'  			25'  			30  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Galio"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			308'  			462'  			616  		} [level] + 0.84 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("GangPlank"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per cannonball  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Garen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E   	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			45'  			70'  			95'  			120  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			350'  			525  		} [level] + new[] {  			28.57'  			33.33'  			40  		} [level] / 100 * (target.MaxHealth - target.Health)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gnar"' new List<DamageSpell> {  	//Q - mini  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			35'  			65'  			95'  			125  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - big  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			45'  			85'  			125'  			165  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - mini  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatMagicDamageMod + new double[] {  			6'  			8'  			10'  			12'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//W - big  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - mini  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//E - big  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			60'  			100'  			140'  			180  		} [level] + source.MaxHealth * 0.06  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Gragas"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + new double[] {  			8'  			9'  			10'  			11'  			12  		} [level] / 100 * target.MaxHealth + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Graves"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - Max damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Hecarim"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Heimerdinger"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			135'  			180'  			225  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			200'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Irelia"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			50'  			80'  			110'  			140  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - per blade  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Janna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("JarvanIV"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jax"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			160'  			220  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jayce"' new List<DamageSpell> {  	//Q   	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			115'  			170'  			225'  			280  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Melee  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			65'  			110'  			155'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			25'  			42.5'  			60'  			77.5'  			95  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			8'  			11'  			14'  			17'  			20  		} [level] / 100) * target.MaxHealth + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Jinx"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			60'  			110'  			160'  			210  		} [level] + 1.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Min  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 0.5 * source.FlatPhysicalDamageMod  	}'  	//R - Max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			250'  			350'  			450  		} [level] + new double[] {  			25'  			30'  			35  		} [level] / 100 * (target.MaxHealth - target.Health) + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karma"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//Q - mantra  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + new double[] {  			25'  			75'  			125'  			175  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.9 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - mantra  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + new double[] {  			75'  			150'  			225'  			300  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 1.2 * source.FlatMagicDamageMod  	}'  	//E - mantra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			140'  			220'  			300  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Karthus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod) * 2  	}'  	//Q - Multi-target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kassadin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - pasive  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 20 + 0.1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			105'  			130'  			155'  			180  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - Base  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			100'  			120  		} [level] + 0.02 * source.MaxMana  	}'  	//R - Per Stack  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Katarina"' new List<DamageSpell> {  	//Q - dagger  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//Q - mark  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			75'  			110'  			145'  			180  		} [level] + 0.6 * source.FlatPhysicalDamageMod + 0.25 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - per dagger  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			350'  			550'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod) / 10  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			575'  			750  		} [level] + 3.75 * source.FlatPhysicalDamageMod + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kayle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kennen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W - Passive  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60'  			70'  			80  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - Active  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			145'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KhaZix"' new List<DamageSpell> {  	//Q - Normal target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  	//Q - Isolated target - UnEvolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 1.56 * source.FlatPhysicalDamageMod  	}'  	//Q - Normal target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 2'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			95'  			120'  			145'  			170  		} [level] + 2.24 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//Q - Isolated target - Evolved  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 3'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new[] {  			91'  			123.5'  			156'  			188.5'  			221  		} [level] + 2.6 * source.FlatPhysicalDamageMod + 10 * ((Obj_AI_Hero)source).Level  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("KogMaw"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			130'  			180'  			230'  			280  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			2'  			3'  			4'  			5'  			6  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160  		} [level] * 2 + 0.5 * source.FlatPhysicalDamageMod + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Kalista"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			70'  			130'  			190'  			250  		} [level] + source.BaseAttackDamage + source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			12'  			14'  			16'  			18'  			20  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => target.HasBuff ("KalistaExpungeMarker") ? ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) + ((target.Buffs.FirstOrDefault (b => b.DisplayName == "KalistaExpungeMarker").Count - 1) * ((10 + 10 * (level + 1)) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * new[] {  			0.25'  			0.30'  			0.35'  			0.40'  			0.45  		} [level]) : 0  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeBlanc"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q . explosion  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			125'  			165'  			205'  			245  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("LeeSin"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//Q - 2nd  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.9 * source.FlatPhysicalDamageMod + 0.08 * (target.MaxHealth - target.Health)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			400'  			600  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Leona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lissandra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			110'  			145'  			180'  			215  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lucian"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + new double[] {  			60'  			75'  			90'  			105'  			120  		} [level] / 100 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//R - per shot  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			50'  			60  		} [level] + 0.1 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lulu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Lux"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malphite"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			120'  			170'  			220'  			270  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			38'  			46'  			54'  			62  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.3 * source.Armor + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Malzahar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			140'  			200'  			260'  			320  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Maokai"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			9'  			10'  			11'  			12'  			13  		} [level] / 100 + 0.03 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  	//E - impact  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - explosion  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MasterYi"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			60'  			95'  			130'  			165  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new[] {  			10'  			12.5'  			15'  			17.5'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + new double[] {  			10'  			15'  			20'  			25'  			30  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MissFortune"' new List<DamageSpell> {  	//Q - First target  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Second target  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.5 * source.FlatMagicDamageMod + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => 0.06 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			255'  			310  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			125  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("MonkeyKing"' new List<DamageSpell>//AKA wukong   {  	//Q - bonus  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			110'  			200  		} [level] + 1.1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Mordekaiser"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.4 * source.FlatMagicDamageMod  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			24'  			38'  			52'  			66'  			80  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			24'  			29'  			34  		} [level] / 100 + 0.04 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Morgana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  	//W - per tick  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			12'  			19'  			26'  			33'  			40  		} [level] + 0.11 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nami"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nasus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in ObjectManager.Player.Buffs  		where buff.DisplayName == "NasusQStacks"  		select buff.Count).FirstOrDefault () + new double[] {  			30'  			50'  			70'  			90'  			110  		} [level]  	}'  	//E - Initial  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			95'  			135'  			175'  			215  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E - per second  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			11'  			19'  			27'  			35'  			43  		} [level] + 0.12 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			3'  			4'  			5  		} [level] / 100 + 0.01 / 100 * source.FlatMagicDamageMod) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nautilus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - main target  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - missile  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			125'  			175'  			225  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nidalee"' new List<DamageSpell> {  	//Q - human - min * 3 = max  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//Q - cat  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			4'  			20'  			50'  			90  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.36 * source.FlatMagicDamageMod + 0.75 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * ((target.MaxHealth - target.Health) / target.MaxHealth * 1.5 + 1)  	}'  	//W - human  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + (new double[] {  			10'  			12'  			14'  			16'  			18  		} [level] / 100 + 0.02 / 100 * source.FlatMagicDamageMod) * target.Health  	}'  	//W - cat  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.3 * source.FlatMagicDamageMod  	}'  	//E - cat  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			130'  			190'  			250  		} [source.Spellbook.GetSpell (SpellSlot.R).Level - 1] + 0.45 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nocturne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1.2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Nunu"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			400'  			550'  			700'  			850'  			1000  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			85'  			130'  			175'  			225'  			275  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - Max Damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			625'  			875'  			1125  		} [level] + 2.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Olaf"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Orianna"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			225'  			300  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Pantheon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			65'  			105'  			145'  			185'  			225  		} [level] + 1.4 * source.FlatPhysicalDamageMod) * ((target.Health / target.MaxHealth < 0.15) ? 2 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E - per strike  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			13'  			23'  			33'  			43'  			53  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target is Obj_AI_Hero) ? 2 : 1)  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R - min  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			400'  			700'  			1000  		} [level] + 1 * source.FlatMagicDamageMod) * 0.5  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Poppy"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Min (new double[] {  			75'  			150'  			225'  			300'  			375  		} [level]' new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.08 * target.MaxHealth + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.6 * source.FlatMagicDamageMod)  	}'  	//E - without colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - with colliding  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + new double[] {  			75'  			125'  			175'  			225'  			275  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Quinn"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.65 * source.FlatPhysicalDamageMod + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rammus"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			100'  			150'  			200'  			250'  			300  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.1 * source.Armor  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			130'  			195  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Renekton"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//Q - empowered  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - empowered  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + 1.5 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)) * 1.5  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod  	}'  	//E - empowered  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.9 * source.FlatPhysicalDamageMod) * 1.5  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			120  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rengar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + new double[] {  			0'  			5'  			10'  			15'  			20  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - Extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + (new double[] {  			100'  			105'  			110'  			115'  			120  		} [level] / 100 - 1) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			100'  			150'  			200'  			250  		} [level] + 0.7 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Riven"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			30'  			50'  			70'  			90  		} [level] + new double[] {  			40'  			45'  			50'  			55'  			60  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			80'  			110'  			140'  			170  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			120'  			160  		} [level] + 0.6 * source.FlatPhysicalDamageMod) * ((target.MaxHealth - target.Health) / target.MaxHealth * 2.67 + 1)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Rumble"' new List<DamageSpell> {  	//Q - total  damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			135'  			195'  			255'  			315  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//Q - Danger Zone total damage  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			112.5'  			202.5'  			292.5'  			382.5'  			472.5  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			45'  			70'  			95'  			120'  			145  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E - Danger Zone  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			67.5'  			105'  			142.5'  			180'  			217.5  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per second  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			130'  			185'  			240  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			650'  			925'  			1200  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ryze"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod + 0.065 * source.MaxMana  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.6 * source.FlatMagicDamageMod + 0.045 * source.MaxMana  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90'  			110'  			130  		} [level] + 0.35 * source.FlatMagicDamageMod + 0.01 * source.MaxMana  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sejuani"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + new double[] {  			4'  			6'  			8'  			10'  			12  		} [level] / 100 * target.MaxHealth + 0.4 * source.FlatMagicDamageMod  	}'  	//W - AA  damage  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W - Aoe per second  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + 0.15 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shaco"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			140'  			160'  			180'  			200'  			220  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per attack  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			35'  			50'  			65'  			80'  			95  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			90'  			130'  			170'  			210  		} [level] + 1 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			450'  			600  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shen"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			85'  			120'  			155'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Shyvana"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			80'  			85'  			90'  			95'  			100  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - per second  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			20'  			35'  			50'  			65'  			80  		} [level] + 0.2 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			100'  			140'  			180'  			220  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			175'  			300'  			425  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Singed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			22'  			34'  			46'  			58'  			70  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sion"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 0.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			120'  			180'  			240'  			300  		} [level] + 1.8 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.4 * source.FlatMagicDamageMod + new double[] {  			10'  			11'  			12'  			13'  			14  		} [level] / 100 * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.4 * source.FlatMagicDamageMod) * 1.5  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			150'  			300'  			450  		} [level] + 0.4 * source.FlatPhysicalDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sivir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			25'  			45'  			65'  			85'  			105  		} [level] + new double[] {  			70'  			80'  			90'  			100'  			110  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - bounce  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			55'  			60'  			65'  			70  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Skarner"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			18'  			28'  			38'  			48'  			58  		} [level] + 0.4 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			100'  			150'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod) * 2  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Sona"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Soraka"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Swain"' new List<DamageSpell> {  	//Q - per second  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			25'  			40'  			55'  			70'  			85  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//R - per draven  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			50'  			70'  			90  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Syndra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod) * ((level == 5 && target is Obj_AI_Hero) ? 1.15 : 1)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R - min damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			270'  			405'  			540  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per sphere  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			135'  			180  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Talon"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 0.3 * source.FlatPhysicalDamageMod + ((target is Obj_AI_Hero) ? (new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 1 * source.FlatPhysicalDamageMod) : 0)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			55'  			80'  			105'  			130  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220  		} [level] + 0.75 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Taric"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			80'  			120'  			160'  			200  		} [level] + 0.2 * source.Armor  	}'  	//E - min damage  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			70'  			100'  			130'  			160  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Teemo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E - total  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			34'  			68'  			102'  			136'  			170  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E - onhit  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			20'  			30'  			40'  			50  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R - total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Thresh"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//E - Active  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			65'  			95'  			125'  			155'  			185  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			400'  			550  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tristana"' new List<DamageSpell> {  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.8 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			300'  			400'  			500  		} [level] + 1.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Trundle"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + new[] {  			0'  			0.5'  			0.1'  			0.15'  			0.2  		} [level] * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - Total  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new double[] {  			20'  			24'  			28  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tryndamere"' new List<DamageSpell> {  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 1.2 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tryndamere"' new List<DamageSpell> {  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 1.2 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tryndamere"' new List<DamageSpell> {  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 1.2 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tryndamere"' new List<DamageSpell> {  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 1.2 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tryndamere"' new List<DamageSpell> {  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 1.2 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Tryndamere"' new List<DamageSpell> {  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 1.2 * source.FlatPhysicalDamageMod + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("TwistedFate"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			110'  			160'  			210'  			260  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W - Blue  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Red  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			45'  			60'  			75'  			90  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//W - Yellow  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 2'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new[] {  			15'  			22.5'  			30'  			37.5'  			45  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.5 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			80'  			105'  			130'  			155  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Twitch"' new List<DamageSpell> {  	//E - current stacks  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (from buff in target.Buffs  		where buff.DisplayName.ToLower () == "twitchdeadlyvenom"  		select buff.Count).FirstOrDefault () * (new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod) + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  	//E - per stack  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			20'  			25'  			30'  			35  		} [level] + 0.2 * source.FlatMagicDamageMod + 0.25 * source.FlatPhysicalDamageMod + new double[] {  			20'  			35'  			50'  			65'  			80  		} [level]  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Udyr"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			80'  			130'  			180'  			230  		} [level] + (new double[] {  			120'  			130'  			140'  			150'  			160  		} [level] / 100) * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//R - per wave  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			25'  			35'  			45'  			55  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Urgot"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			40'  			70'  			100'  			130  		} [level] + 0.85 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			130'  			185'  			240'  			295  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Varus"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			10'  			47'  			83'  			120'  			157  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//Q - max  	new DamageSpell {  		Slot = SpellSlot.Q'  		Stage = 1'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			70'  			125'  			180'  			235  		} [level] + +1.6 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W - on hit  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			10'  			14'  			18'  			22'  			26  		} [level] + 0.25 * source.FlatMagicDamageMod  	}'  	//W - per stack  	new DamageSpell {  		Slot = SpellSlot.W'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => (new[] {  			2'  			2.75'  			3.5'  			4.25'  			5  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			65'  			100'  			135'  			170'  			205  		} [level] + 0.6 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vayne"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			35'  			40'  			45'  			50  		} [level] / 100 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.True'  		Damage = (source' target' level) => new double[] {  			20'  			30'  			40'  			50'  			60  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			45'  			80'  			115'  			150'  			185  		} [level] + 0.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Veigar"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			125'  			170'  			215'  			260  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			120'  			170'  			220'  			270'  			320  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.8 * target.FlatMagicDamageMod + 1.2 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Velkoz"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - Max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			30'  			50'  			70'  			90'  			110  		} [level] + new double[] {  			45'  			75'  			105'  			135'  			165  		} [level] + 0.625 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			100'  			130'  			160'  			190  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			500'  			700'  			900  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vi"' new List<DamageSpell> {  	//Q - min  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			50'  			75'  			100'  			125'  			150  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new[] {  			4'  			5.5'  			7'  			8.5'  			10  		} [level] / 100 + 0.01 * source.FlatPhysicalDamageMod / 35) * target.MaxHealth  	}'  	//E - extra  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			5'  			20'  			35'  			50'  			65  		} [level] + 1.15 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod) + 0.7 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			325'  			450  		} [level] + 1.4 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Viktor"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			60'  			80'  			100'  			120  		} [level] + 0.2 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			115'  			160'  			205'  			250  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			98'  			161'  			224'  			287'  			350  		} [level] + 0.98 * source.FlatMagicDamageMod  	}'  	//R - summon damage  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.55 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		Stage = 1'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45  		} [level] + 0.1 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Vladimir"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			125'  			160'  			195'  			230  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//W - max  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			135'  			190'  			245'  			300  		} [level]  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			85'  			110'  			135'  			160  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			150'  			250'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Volibear"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level]  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => (new double[] {  			80'  			125'  			170'  			215'  			260  		} [level]) * ((target.MaxHealth - target.Health) / target.MaxHealth + 1)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			105'  			150'  			195'  			240  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R - per bolt  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Warwick"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => Math.Max (new double[] {  			75'  			125'  			175'  			225'  			275  		} [level]' new double[] {  			8'  			10'  			12'  			14'  			16  		} [level] / 100 * target.MaxHealth) + 1 * source.FlatMagicDamageMod  	}'  	//R - max  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			335'  			420  		} [level] + 2 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Xerath"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.75 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			110'  			140'  			170'  			200  		} [level] + 0.45 * source.FlatMagicDamageMod  	}'  	//R - per charge  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			190'  			245'  			300  		} [level] + 0.43 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("XinZhao"' new List<DamageSpell> {  	//Q - per attack  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			15'  			30'  			45'  			60'  			75  		} [level] + 0.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			175'  			275  		} [level] + 1 * source.FlatPhysicalDamageMod + 0.15 * target.Health  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yasuo"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			20'  			40'  			60'  			80'  			100  		} [level] + 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//E - min  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			90'  			110'  			130'  			150  		} [level] + 0.6 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			200'  			300'  			400  		} [level] + 1.5 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Yorick"' new List<DamageSpell> {  	//Q - extra  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			30'  			60'  			90'  			120'  			150  		} [level] + 1.2 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 1 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			55'  			85'  			115'  			145'  			175  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zac"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			110'  			150'  			190'  			230  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			55'  			70'  			85'  			100  		} [level] + (new double[] {  			4'  			5'  			6'  			7'  			8  		} [level] / 100 + 0.02 * source.FlatMagicDamageMod / 100) * target.MaxHealth  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			80'  			120'  			160'  			200'  			240  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  	//R - per bounce  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			140'  			210'  			280  		} [level] + 0.4 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zed"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			75'  			115'  			155'  			195'  			235  		} [level] + 1 * source.FlatPhysicalDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => new double[] {  			60'  			90'  			120'  			150'  			180  		} [level] + 0.8 * source.FlatPhysicalDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Physical'  		Damage = (source' target' level) => 1 * (source.BaseAttackDamage + source.FlatPhysicalDamageMod)  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Ziggs"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			75'  			120'  			165'  			210'  			255  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//W  	new DamageSpell {  		Slot = SpellSlot.W'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.35 * source.FlatMagicDamageMod  	}'  	//E - per mine  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			40'  			65'  			90'  			115'  			140  		} [level] + 0.3 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			250'  			375'  			500  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zilean"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			260'  			320  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zilean"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			260'  			320  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zilean"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			260'  			320  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zilean"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			260'  			320  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zilean"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			260'  			320  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zilean"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			90'  			145'  			200'  			260'  			320  		} [level] + 0.9 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,Damage,The following statement contains a magic number: Spells.Add ("Zyra"' new List<DamageSpell> {  	//Q  	new DamageSpell {  		Slot = SpellSlot.Q'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			70'  			105'  			140'  			175'  			210  		} [level] + 0.65 * source.FlatMagicDamageMod  	}'  	//E  	new DamageSpell {  		Slot = SpellSlot.E'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			60'  			95'  			130'  			165'  			200  		} [level] + 0.5 * source.FlatMagicDamageMod  	}'  	//R  	new DamageSpell {  		Slot = SpellSlot.R'  		DamageType = DamageType.Magical'  		Damage = (source' target' level) => new double[] {  			180'  			265'  			350  		} [level] + 0.7 * source.FlatMagicDamageMod  	}'  });  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Ignite) {  	return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Ignite) {  	return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Ignite) {  	return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Ignite) {  	return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return 50 + 20 * source.Level - (target.HPRegenRate / 5 * 3);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: if (summonerSpell == SummonerSpell.Smite) {  	return new double[] {  		390'  		410'  		430'  		450'  		480'  		510'  		540'  		570'  		600'  		640'  		680'  		720'  		760'  		800'  		850'  		900'  		950'  		1000  	} [source.Level - 1];  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetSummonerSpellDamage,The following statement contains a magic number: return new double[] {  	390'  	410'  	430'  	450'  	480'  	510'  	540'  	570'  	600'  	640'  	680'  	720'  	760'  	800'  	850'  	900'  	950'  	1000  } [source.Level - 1];  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' 100);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following statement contains a magic number: return source.CalcDamage (target' DamageType.Magical' 200);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Spoils of War  	if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  		return 200;  	}  	//Champions passive damages:  	result += AttackPassives.Where (p => (p.ChampionName == "" || p.ChampionName == sourceAsHero.ChampionName) && p.IsActive (sourceAsHero' target)).Sum (passive => passive.GetDamage (sourceAsHero' target));  	//BotRK  	if (Items.HasItem (3153' sourceAsHero)) {  		var d = 0.08 * target.Health;  		if (target is Obj_AI_Minion) {  			d = Math.Min (d' 60);  		}  		result += d;  	}  	//Arcane blade  	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  		reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  	return 200;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (source.IsMelee () && target is Obj_AI_Minion && target.IsEnemy && target.Team != GameObjectTeam.Neutral && target.Health <= 200 && source.Buffs.Any (buff => buff.Name == "talentreaperdisplay" && buff.Count > 0)) {  	return 200;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: return 200;  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (Items.HasItem (3153' sourceAsHero)) {  	var d = 0.08 * target.Health;  	if (target is Obj_AI_Minion) {  		d = Math.Min (d' 60);  	}  	result += d;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (Items.HasItem (3153' sourceAsHero)) {  	var d = 0.08 * target.Health;  	if (target is Obj_AI_Minion) {  		d = Math.Min (d' 60);  	}  	result += d;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (Items.HasItem (3153' sourceAsHero)) {  	var d = 0.08 * target.Health;  	if (target is Obj_AI_Minion) {  		d = Math.Min (d' 60);  	}  	result += d;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (target is Obj_AI_Minion) {  	d = Math.Min (d' 60);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: d = Math.Min (d' 60);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  	reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 132 && m.Points == 1)) {  	reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: reduction -= CalcMagicDamage (source' target' 0.05 * source.FlatMagicDamageMod);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (Items.HasItem (3047' targetAsHero)) {  	k = k * 0.9d;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (Items.HasItem (1054' targetAsHero)) {  	reduction += 8;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: if (Items.HasItem (1054' targetAsHero)) {  	reduction += 8;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetAutoAttackDamage,The following statement contains a magic number: reduction += 8;  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetDamageSpell,The following statement contains a magic number: if (Spells.ContainsKey (source.ChampionName)) {  	var spell = Spells [source.ChampionName].FirstOrDefault (s => s.Slot == slot && stage == s.Stage) ?? Spells [source.ChampionName].FirstOrDefault (s => s.Slot == slot);  	if (spell == null) {  		return null;  	}  	var rawDamage = spell.Damage (source' target' Math.Max (0' Math.Min (source.Spellbook.GetSpell (slot).Level - 1' 5)));  	spell.CalculatedDamage = CalcDamage (source' target' spell.DamageType' rawDamage);  	return spell;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: if (magicResist < 0) {  	k = 2 - 100 / (100 - magicResist);  }  else {  	k = 100 / (100 + magicResist);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: if (magicResist < 0) {  	k = 2 - 100 / (100 - magicResist);  }  else {  	k = 100 / (100 + magicResist);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: if (magicResist < 0) {  	k = 2 - 100 / (100 - magicResist);  }  else {  	k = 100 / (100 + magicResist);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: if (magicResist < 0) {  	k = 2 - 100 / (100 - magicResist);  }  else {  	k = 100 / (100 + magicResist);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: if (magicResist < 0) {  	k = 2 - 100 / (100 - magicResist);  }  else {  	k = 100 / (100 + magicResist);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: k = 2 - 100 / (100 - magicResist);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: k = 2 - 100 / (100 - magicResist);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: k = 2 - 100 / (100 - magicResist);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: k = 100 / (100 + magicResist);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcMagicDamage,The following statement contains a magic number: k = 100 / (100 + magicResist);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: if (armor < 0) {  	k = 2 - 100 / (100 - armor);  }  else {  	k = 100 / (100 + armor);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: if (armor < 0) {  	k = 2 - 100 / (100 - armor);  }  else {  	k = 100 / (100 + armor);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: if (armor < 0) {  	k = 2 - 100 / (100 - armor);  }  else {  	k = 100 / (100 + armor);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: if (armor < 0) {  	k = 2 - 100 / (100 - armor);  }  else {  	k = 100 / (100 + armor);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: if (armor < 0) {  	k = 2 - 100 / (100 - armor);  }  else {  	k = 100 / (100 + armor);  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: k = 2 - 100 / (100 - armor);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: k = 2 - 100 / (100 - armor);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: k = 2 - 100 / (100 - armor);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: k = 100 / (100 + armor);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcPhysicalDamage,The following statement contains a magic number: k = 100 / (100 + armor);  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (source is Obj_AI_Turret) {  	//Siege minions receive 70% damage from turrets  	if (SiegeMinionList.Contains (target.BaseSkinName)) {  		k = 0.7d * k;  	}  	//Normal minions take 114% more damage from towers.  	else if (NormalMinionList.Contains (target.BaseSkinName)) {  		k = (1 / 0.875) * k;  	}  	// Turrets deal 105% damage to champions for the first attack.  	else if (target is Obj_AI_Hero) {  		k = 1.05 * k;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (source is Obj_AI_Turret) {  	//Siege minions receive 70% damage from turrets  	if (SiegeMinionList.Contains (target.BaseSkinName)) {  		k = 0.7d * k;  	}  	//Normal minions take 114% more damage from towers.  	else if (NormalMinionList.Contains (target.BaseSkinName)) {  		k = (1 / 0.875) * k;  	}  	// Turrets deal 105% damage to champions for the first attack.  	else if (target is Obj_AI_Hero) {  		k = 1.05 * k;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (SiegeMinionList.Contains (target.BaseSkinName)) {  	k = 0.7d * k;  }  //Normal minions take 114% more damage from towers.  else if (NormalMinionList.Contains (target.BaseSkinName)) {  	k = (1 / 0.875) * k;  }  // Turrets deal 105% damage to champions for the first attack.  else if (target is Obj_AI_Hero) {  	k = 1.05 * k;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (SiegeMinionList.Contains (target.BaseSkinName)) {  	k = 0.7d * k;  }  //Normal minions take 114% more damage from towers.  else if (NormalMinionList.Contains (target.BaseSkinName)) {  	k = (1 / 0.875) * k;  }  // Turrets deal 105% damage to champions for the first attack.  else if (target is Obj_AI_Hero) {  	k = 1.05 * k;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (NormalMinionList.Contains (target.BaseSkinName)) {  	k = (1 / 0.875) * k;  }  // Turrets deal 105% damage to champions for the first attack.  else if (target is Obj_AI_Hero) {  	k = 1.05 * k;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (NormalMinionList.Contains (target.BaseSkinName)) {  	k = (1 / 0.875) * k;  }  // Turrets deal 105% damage to champions for the first attack.  else if (target is Obj_AI_Hero) {  	k = 1.05 * k;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: k = (1 / 0.875) * k;  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (target is Obj_AI_Hero) {  	k = 1.05 * k;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: k = 1.05 * k;  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Double edge sword:  	//  Melee champions: You deal 2% increase damage from all sources' but take 1% increase damage from all sources.  	//  Ranged champions: You deal and take 1.5% increased damage from all sources.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  		if (sourceAsHero.CombatType == GameObjectCombatType.Melee) {  			k = k * 1.02d;  		}  		else {  			k = k * 1.015d;  		}  	}  	//Havoc:  	//  Increases damage by 3%.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 146 && m.Points == 1)) {  		k = k * 1.03d;  	}  	//Executioner  	//  Increases damage dealt to champions below 20 / 35 / 50% by 5%.   	if (target is Obj_AI_Hero) {  		var mastery = (sourceAsHero).Masteries.FirstOrDefault (m => m.Page == MasteryPage.Offense && m.Id == 100);  		if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  			k = k * 1.05;  		}  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Double edge sword:  	//  Melee champions: You deal 2% increase damage from all sources' but take 1% increase damage from all sources.  	//  Ranged champions: You deal and take 1.5% increased damage from all sources.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  		if (sourceAsHero.CombatType == GameObjectCombatType.Melee) {  			k = k * 1.02d;  		}  		else {  			k = k * 1.015d;  		}  	}  	//Havoc:  	//  Increases damage by 3%.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 146 && m.Points == 1)) {  		k = k * 1.03d;  	}  	//Executioner  	//  Increases damage dealt to champions below 20 / 35 / 50% by 5%.   	if (target is Obj_AI_Hero) {  		var mastery = (sourceAsHero).Masteries.FirstOrDefault (m => m.Page == MasteryPage.Offense && m.Id == 100);  		if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  			k = k * 1.05;  		}  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Double edge sword:  	//  Melee champions: You deal 2% increase damage from all sources' but take 1% increase damage from all sources.  	//  Ranged champions: You deal and take 1.5% increased damage from all sources.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  		if (sourceAsHero.CombatType == GameObjectCombatType.Melee) {  			k = k * 1.02d;  		}  		else {  			k = k * 1.015d;  		}  	}  	//Havoc:  	//  Increases damage by 3%.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 146 && m.Points == 1)) {  		k = k * 1.03d;  	}  	//Executioner  	//  Increases damage dealt to champions below 20 / 35 / 50% by 5%.   	if (target is Obj_AI_Hero) {  		var mastery = (sourceAsHero).Masteries.FirstOrDefault (m => m.Page == MasteryPage.Offense && m.Id == 100);  		if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  			k = k * 1.05;  		}  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (source is Obj_AI_Hero) {  	var sourceAsHero = source as Obj_AI_Hero;  	//Double edge sword:  	//  Melee champions: You deal 2% increase damage from all sources' but take 1% increase damage from all sources.  	//  Ranged champions: You deal and take 1.5% increased damage from all sources.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  		if (sourceAsHero.CombatType == GameObjectCombatType.Melee) {  			k = k * 1.02d;  		}  		else {  			k = k * 1.015d;  		}  	}  	//Havoc:  	//  Increases damage by 3%.   	if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 146 && m.Points == 1)) {  		k = k * 1.03d;  	}  	//Executioner  	//  Increases damage dealt to champions below 20 / 35 / 50% by 5%.   	if (target is Obj_AI_Hero) {  		var mastery = (sourceAsHero).Masteries.FirstOrDefault (m => m.Page == MasteryPage.Offense && m.Id == 100);  		if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  			k = k * 1.05;  		}  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  	if (sourceAsHero.CombatType == GameObjectCombatType.Melee) {  		k = k * 1.02d;  	}  	else {  		k = k * 1.015d;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (sourceAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 146 && m.Points == 1)) {  	k = k * 1.03d;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (target is Obj_AI_Hero) {  	var mastery = (sourceAsHero).Masteries.FirstOrDefault (m => m.Page == MasteryPage.Offense && m.Id == 100);  	if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  		k = k * 1.05;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (target is Obj_AI_Hero) {  	var mastery = (sourceAsHero).Masteries.FirstOrDefault (m => m.Page == MasteryPage.Offense && m.Id == 100);  	if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  		k = k * 1.05;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (mastery != null && mastery.Points >= 1 && target.Health / target.MaxHealth <= 0.05d + 0.15d * mastery.Points) {  	k = k * 1.05;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: k = k * 1.05;  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassivePercentMod,The following statement contains a magic number: if (targetAsHero.Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  	if (target.CombatType == GameObjectCombatType.Melee) {  		k = k * 1.01d;  	}  	else {  		k = k * 1.015d;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassiveFlatMod,The following statement contains a magic number: if (target is Obj_AI_Minion) {  	if (((Obj_AI_Hero)source).Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  		d = d + 2;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassiveFlatMod,The following statement contains a magic number: if (target is Obj_AI_Minion) {  	if (((Obj_AI_Hero)source).Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  		d = d + 2;  	}  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassiveFlatMod,The following statement contains a magic number: if (((Obj_AI_Hero)source).Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  	d = d + 2;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassiveFlatMod,The following statement contains a magic number: if (((Obj_AI_Hero)source).Masteries.Any (m => m.Page == MasteryPage.Offense && m.Id == 65 && m.Points == 1)) {  	d = d + 2;  }  
Magic Number,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,PassiveFlatMod,The following statement contains a magic number: d = d + 2;  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameProcessPacket,The following statement contains a magic number: if (args.PacketData [0] == Packet.S2C.Dash.Header) {  	var decodedPacket = Packet.S2C.Dash.Decoded (args.PacketData);  	var networkId = decodedPacket.UnitNetworkId;  	var speed = decodedPacket.Speed;  	var unit = ObjectManager.GetUnitByNetworkId<Obj_AI_Base> (networkId);  	if (unit.IsValid<Obj_AI_Hero> ()) {  		if (!DetectedDashes.ContainsKey (unit.NetworkId)) {  			DetectedDashes.Add (unit.NetworkId' new DashItem ());  		}  		DetectedDashes [unit.NetworkId].StartTick = Environment.TickCount - Game.Ping / 2;  		DetectedDashes [unit.NetworkId].Speed = speed;  		DetectedDashes [unit.NetworkId].StartPos = unit.ServerPosition.To2D ();  		DetectedDashes [unit.NetworkId].Processed = false;  		DetectedDashes [unit.NetworkId].Unit = unit;  	}  }  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameProcessPacket,The following statement contains a magic number: if (unit.IsValid<Obj_AI_Hero> ()) {  	if (!DetectedDashes.ContainsKey (unit.NetworkId)) {  		DetectedDashes.Add (unit.NetworkId' new DashItem ());  	}  	DetectedDashes [unit.NetworkId].StartTick = Environment.TickCount - Game.Ping / 2;  	DetectedDashes [unit.NetworkId].Speed = speed;  	DetectedDashes [unit.NetworkId].StartPos = unit.ServerPosition.To2D ();  	DetectedDashes [unit.NetworkId].Processed = false;  	DetectedDashes [unit.NetworkId].Unit = unit;  }  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameProcessPacket,The following statement contains a magic number: DetectedDashes [unit.NetworkId].StartTick = Environment.TickCount - Game.Ping / 2;  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameUpdate,The following statement contains a magic number: foreach (var dashItem in DetectedDashes) {  	if (!dashItem.Value.Processed) {  		if (dashItem.Value.Unit.IsValid) {  			DetectedDashes [dashItem.Key].Path = dashItem.Value.Unit.GetWaypoints ();  			DetectedDashes [dashItem.Key].EndPos = dashItem.Value.Path [dashItem.Value.Path.Count - 1];  			DetectedDashes [dashItem.Key].EndTick = dashItem.Value.StartTick + (int)(1000 * (dashItem.Value.EndPos.Distance (dashItem.Value.StartPos) / dashItem.Value.Speed));  			DetectedDashes [dashItem.Key].Duration = dashItem.Value.EndTick - dashItem.Value.StartTick;  			DetectedDashes [dashItem.Key].Processed = true;  			CustomEvents.Unit.TriggerOnDash (dashItem.Value.Unit' DetectedDashes [dashItem.Key]);  		}  	}  }  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameUpdate,The following statement contains a magic number: if (!dashItem.Value.Processed) {  	if (dashItem.Value.Unit.IsValid) {  		DetectedDashes [dashItem.Key].Path = dashItem.Value.Unit.GetWaypoints ();  		DetectedDashes [dashItem.Key].EndPos = dashItem.Value.Path [dashItem.Value.Path.Count - 1];  		DetectedDashes [dashItem.Key].EndTick = dashItem.Value.StartTick + (int)(1000 * (dashItem.Value.EndPos.Distance (dashItem.Value.StartPos) / dashItem.Value.Speed));  		DetectedDashes [dashItem.Key].Duration = dashItem.Value.EndTick - dashItem.Value.StartTick;  		DetectedDashes [dashItem.Key].Processed = true;  		CustomEvents.Unit.TriggerOnDash (dashItem.Value.Unit' DetectedDashes [dashItem.Key]);  	}  }  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameUpdate,The following statement contains a magic number: if (dashItem.Value.Unit.IsValid) {  	DetectedDashes [dashItem.Key].Path = dashItem.Value.Unit.GetWaypoints ();  	DetectedDashes [dashItem.Key].EndPos = dashItem.Value.Path [dashItem.Value.Path.Count - 1];  	DetectedDashes [dashItem.Key].EndTick = dashItem.Value.StartTick + (int)(1000 * (dashItem.Value.EndPos.Distance (dashItem.Value.StartPos) / dashItem.Value.Speed));  	DetectedDashes [dashItem.Key].Duration = dashItem.Value.EndTick - dashItem.Value.StartTick;  	DetectedDashes [dashItem.Key].Processed = true;  	CustomEvents.Unit.TriggerOnDash (dashItem.Value.Unit' DetectedDashes [dashItem.Key]);  }  
Magic Number,LeagueSharp.Common,Dash,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Dash.cs,GameOnOnGameUpdate,The following statement contains a magic number: DetectedDashes [dashItem.Key].EndTick = dashItem.Value.StartTick + (int)(1000 * (dashItem.Value.EndPos.Distance (dashItem.Value.StartPos) / dashItem.Value.Speed));  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,ReadShort,The following statement contains a magic number: return BitConverter.ToInt16 (Br.ReadBytes (2)' 0);  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,ReadFloat,The following statement contains a magic number: return BitConverter.ToSingle (Br.ReadBytes (4)' 0);  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,ReadInteger,The following statement contains a magic number: return BitConverter.ToInt32 (Br.ReadBytes (4)' 0);  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,WriteHexString,The following statement contains a magic number: if ((hex.Length % 2) != 0) {  	hex = "0" + hex;  }  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,WriteHexString,The following statement contains a magic number: Bw.Write (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ());  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,WriteHexString,The following statement contains a magic number: Bw.Write (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ());  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,WriteHexString,The following statement contains a magic number: Bw.Write (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ());  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,SearchHexString,The following statement contains a magic number: if ((hex.Length % 2) != 0) {  	hex = "0" + hex;  }  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,SearchHexString,The following statement contains a magic number: return rawPacket.IndexOf (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ()).ToArray ();  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,SearchHexString,The following statement contains a magic number: return rawPacket.IndexOf (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ()).ToArray ();  
Magic Number,LeagueSharp.Common,GamePacket,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\GamePacket.cs,SearchHexString,The following statement contains a magic number: return rawPacket.IndexOf (Enumerable.Range (0' hex.Length).Where (x => x % 2 == 0).Select (x => Convert.ToByte (hex.Substring (x' 2)' 16)).ToArray ()).ToArray ();  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Global,The following statement contains a magic number: using (new CustomMutex (100)) {  	MMFile = MemoryMappedFile.CreateOrOpen ("LSharpShared" + Process.GetCurrentProcess ().Id' MemoryCapacity);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Read,The following statement contains a magic number: try {  	using (new CustomMutex (350)) {  		using (var strm = MMFile.CreateViewAccessor ()) {  			var hash = CalculateHash (key);  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					if (typeof(T).IsValueType) {  						var buff2 = new byte[Marshal.SizeOf (typeof(T))];  						strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' Marshal.SizeOf (typeof(T)));  						return FromByteArray<T> (buff2);  					}  					else {  						byte[] buff2;  						if (typeof(T) == typeof(string)) {  							buff2 = new byte[entry.Capacity];  							strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  							var data = System.Text.Encoding.UTF8.GetString (buff2' 0' entry.Capacity);  							var end = data.IndexOf ('\0');  							var result = data.Substring (0' end);  							return (T)(object)result;  						}  						if (typeof(T).IsSerializable) {  							var size = strm.ReadInt32 (thisOffset + OffsetEntrySize);  							buff2 = new byte[size];  							strm.ReadArray (thisOffset + OffsetEntrySize + sizeof(int)' buff2' 0' size);  							// it is a class' must serialize.  							return Deserialize<T> (buff2);  						}  						throw new Exception (String.Format ("Type {0} is not serializable!  Cannot read."' typeof(T)));  					}  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			if (!defaultIfMissing) {  				throw new Exception (String.Format ("Config key '{0}' not found!"' key));  			}  			return default(T);  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  	return default(T);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Read,The following statement contains a magic number: try {  	using (new CustomMutex (350)) {  		using (var strm = MMFile.CreateViewAccessor ()) {  			var hash = CalculateHash (key);  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					if (typeof(T).IsValueType) {  						var buff2 = new byte[Marshal.SizeOf (typeof(T))];  						strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' Marshal.SizeOf (typeof(T)));  						return FromByteArray<T> (buff2);  					}  					else {  						byte[] buff2;  						if (typeof(T) == typeof(string)) {  							buff2 = new byte[entry.Capacity];  							strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  							var data = System.Text.Encoding.UTF8.GetString (buff2' 0' entry.Capacity);  							var end = data.IndexOf ('\0');  							var result = data.Substring (0' end);  							return (T)(object)result;  						}  						if (typeof(T).IsSerializable) {  							var size = strm.ReadInt32 (thisOffset + OffsetEntrySize);  							buff2 = new byte[size];  							strm.ReadArray (thisOffset + OffsetEntrySize + sizeof(int)' buff2' 0' size);  							// it is a class' must serialize.  							return Deserialize<T> (buff2);  						}  						throw new Exception (String.Format ("Type {0} is not serializable!  Cannot read."' typeof(T)));  					}  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			if (!defaultIfMissing) {  				throw new Exception (String.Format ("Config key '{0}' not found!"' key));  			}  			return default(T);  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  	return default(T);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Read,The following statement contains a magic number: using (new CustomMutex (350)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var hash = CalculateHash (key);  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				if (typeof(T).IsValueType) {  					var buff2 = new byte[Marshal.SizeOf (typeof(T))];  					strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' Marshal.SizeOf (typeof(T)));  					return FromByteArray<T> (buff2);  				}  				else {  					byte[] buff2;  					if (typeof(T) == typeof(string)) {  						buff2 = new byte[entry.Capacity];  						strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  						var data = System.Text.Encoding.UTF8.GetString (buff2' 0' entry.Capacity);  						var end = data.IndexOf ('\0');  						var result = data.Substring (0' end);  						return (T)(object)result;  					}  					if (typeof(T).IsSerializable) {  						var size = strm.ReadInt32 (thisOffset + OffsetEntrySize);  						buff2 = new byte[size];  						strm.ReadArray (thisOffset + OffsetEntrySize + sizeof(int)' buff2' 0' size);  						// it is a class' must serialize.  						return Deserialize<T> (buff2);  					}  					throw new Exception (String.Format ("Type {0} is not serializable!  Cannot read."' typeof(T)));  				}  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		if (!defaultIfMissing) {  			throw new Exception (String.Format ("Config key '{0}' not found!"' key));  		}  		return default(T);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Read,The following statement contains a magic number: using (new CustomMutex (350)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var hash = CalculateHash (key);  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				if (typeof(T).IsValueType) {  					var buff2 = new byte[Marshal.SizeOf (typeof(T))];  					strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' Marshal.SizeOf (typeof(T)));  					return FromByteArray<T> (buff2);  				}  				else {  					byte[] buff2;  					if (typeof(T) == typeof(string)) {  						buff2 = new byte[entry.Capacity];  						strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  						var data = System.Text.Encoding.UTF8.GetString (buff2' 0' entry.Capacity);  						var end = data.IndexOf ('\0');  						var result = data.Substring (0' end);  						return (T)(object)result;  					}  					if (typeof(T).IsSerializable) {  						var size = strm.ReadInt32 (thisOffset + OffsetEntrySize);  						buff2 = new byte[size];  						strm.ReadArray (thisOffset + OffsetEntrySize + sizeof(int)' buff2' 0' size);  						// it is a class' must serialize.  						return Deserialize<T> (buff2);  					}  					throw new Exception (String.Format ("Type {0} is not serializable!  Cannot read."' typeof(T)));  				}  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		if (!defaultIfMissing) {  			throw new Exception (String.Format ("Config key '{0}' not found!"' key));  		}  		return default(T);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Read,The following statement contains a magic number: using (var strm = MMFile.CreateViewAccessor ()) {  	var hash = CalculateHash (key);  	var signature = strm.ReadInt32 (0);  	var startingOffset = 2 * sizeof(int);  	int currentOffset;  	if (signature == 0x34CFABC0) {  		currentOffset = strm.ReadInt32 (sizeof(int));  	}  	else {  		strm.Write (0' 0x34CFABC0);  		strm.Write (sizeof(int)' startingOffset);  		currentOffset = startingOffset;  	}  	var thisOffset = startingOffset;  	OffsetEntry entry;  	while (thisOffset != currentOffset) {  		var buff = new byte[OffsetEntrySize];  		strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  		entry = FromByteArray<OffsetEntry> (buff);  		if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  			if (typeof(T).IsValueType) {  				var buff2 = new byte[Marshal.SizeOf (typeof(T))];  				strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' Marshal.SizeOf (typeof(T)));  				return FromByteArray<T> (buff2);  			}  			else {  				byte[] buff2;  				if (typeof(T) == typeof(string)) {  					buff2 = new byte[entry.Capacity];  					strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  					var data = System.Text.Encoding.UTF8.GetString (buff2' 0' entry.Capacity);  					var end = data.IndexOf ('\0');  					var result = data.Substring (0' end);  					return (T)(object)result;  				}  				if (typeof(T).IsSerializable) {  					var size = strm.ReadInt32 (thisOffset + OffsetEntrySize);  					buff2 = new byte[size];  					strm.ReadArray (thisOffset + OffsetEntrySize + sizeof(int)' buff2' 0' size);  					// it is a class' must serialize.  					return Deserialize<T> (buff2);  				}  				throw new Exception (String.Format ("Type {0} is not serializable!  Cannot read."' typeof(T)));  			}  		}  		thisOffset += OffsetEntrySize + entry.Capacity;  	}  	if (!defaultIfMissing) {  		throw new Exception (String.Format ("Config key '{0}' not found!"' key));  	}  	return default(T);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Load,The following statement contains a magic number: using (new CustomMutex (650)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && LoadedEntries.ContainsKey (entry.KeyHash)) {  				if (LoadedEntries [entry.KeyHash].Length <= entry.Capacity) {  					strm.WriteArray (thisOffset + OffsetEntrySize' LoadedEntries [entry.KeyHash]' 0' LoadedEntries [entry.KeyHash].Length <= entry.Capacity ? LoadedEntries [entry.KeyHash].Length : entry.Capacity);  					LoadedEntries.Remove (entry.KeyHash);  				}  				else {  					var overwriteEntry = entry;  					entry.Type = EntryType.Invalid;  					strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  				}  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		foreach (var needtoload in LoadedEntries) {  			OffsetEntry newEntry;  			newEntry.KeyHash = needtoload.Key;  			newEntry.Capacity = needtoload.Value.Length;  			newEntry.Type = EntryType.Basic;  			strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			strm.WriteArray (currentOffset + OffsetEntrySize' needtoload.Value' 0' newEntry.Capacity);  			strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  		}  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Load,The following statement contains a magic number: using (new CustomMutex (650)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && LoadedEntries.ContainsKey (entry.KeyHash)) {  				if (LoadedEntries [entry.KeyHash].Length <= entry.Capacity) {  					strm.WriteArray (thisOffset + OffsetEntrySize' LoadedEntries [entry.KeyHash]' 0' LoadedEntries [entry.KeyHash].Length <= entry.Capacity ? LoadedEntries [entry.KeyHash].Length : entry.Capacity);  					LoadedEntries.Remove (entry.KeyHash);  				}  				else {  					var overwriteEntry = entry;  					entry.Type = EntryType.Invalid;  					strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  				}  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		foreach (var needtoload in LoadedEntries) {  			OffsetEntry newEntry;  			newEntry.KeyHash = needtoload.Key;  			newEntry.Capacity = needtoload.Value.Length;  			newEntry.Type = EntryType.Basic;  			strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			strm.WriteArray (currentOffset + OffsetEntrySize' needtoload.Value' 0' newEntry.Capacity);  			strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  		}  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Load,The following statement contains a magic number: using (var strm = MMFile.CreateViewAccessor ()) {  	var signature = strm.ReadInt32 (0);  	var startingOffset = 2 * sizeof(int);  	int currentOffset;  	if (signature == 0x34CFABC0) {  		currentOffset = strm.ReadInt32 (sizeof(int));  	}  	else {  		strm.Write (0' 0x34CFABC0);  		strm.Write (sizeof(int)' startingOffset);  		currentOffset = startingOffset;  	}  	var thisOffset = startingOffset;  	OffsetEntry entry;  	while (thisOffset != currentOffset) {  		var buff = new byte[OffsetEntrySize];  		strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  		entry = FromByteArray<OffsetEntry> (buff);  		if (entry.Type != EntryType.Invalid && LoadedEntries.ContainsKey (entry.KeyHash)) {  			if (LoadedEntries [entry.KeyHash].Length <= entry.Capacity) {  				strm.WriteArray (thisOffset + OffsetEntrySize' LoadedEntries [entry.KeyHash]' 0' LoadedEntries [entry.KeyHash].Length <= entry.Capacity ? LoadedEntries [entry.KeyHash].Length : entry.Capacity);  				LoadedEntries.Remove (entry.KeyHash);  			}  			else {  				var overwriteEntry = entry;  				entry.Type = EntryType.Invalid;  				strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			}  		}  		thisOffset += OffsetEntrySize + entry.Capacity;  	}  	foreach (var needtoload in LoadedEntries) {  		OffsetEntry newEntry;  		newEntry.KeyHash = needtoload.Key;  		newEntry.Capacity = needtoload.Value.Length;  		newEntry.Type = EntryType.Basic;  		strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		strm.WriteArray (currentOffset + OffsetEntrySize' needtoload.Value' 0' newEntry.Capacity);  		strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Save,The following statement contains a magic number: using (new CustomMutex (1200)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		using (var fl = new System.IO.BinaryWriter (System.IO.File.Create (path))) {  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			var count = 0;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				foreach (var key in keys) {  					var hash = CalculateHash (key);  					if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  						fl.Write (buff);  						var buff2 = new byte[entry.Capacity];  						strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  						fl.Write (buff2);  						count++;  					}  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			return count;  		}  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Save,The following statement contains a magic number: using (new CustomMutex (1200)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		using (var fl = new System.IO.BinaryWriter (System.IO.File.Create (path))) {  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			var count = 0;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				foreach (var key in keys) {  					var hash = CalculateHash (key);  					if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  						fl.Write (buff);  						var buff2 = new byte[entry.Capacity];  						strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  						fl.Write (buff2);  						count++;  					}  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			return count;  		}  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Save,The following statement contains a magic number: using (var strm = MMFile.CreateViewAccessor ()) {  	using (var fl = new System.IO.BinaryWriter (System.IO.File.Create (path))) {  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		var count = 0;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			foreach (var key in keys) {  				var hash = CalculateHash (key);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					fl.Write (buff);  					var buff2 = new byte[entry.Capacity];  					strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  					fl.Write (buff2);  					count++;  				}  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		return count;  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Save,The following statement contains a magic number: using (var fl = new System.IO.BinaryWriter (System.IO.File.Create (path))) {  	var signature = strm.ReadInt32 (0);  	var startingOffset = 2 * sizeof(int);  	int currentOffset;  	if (signature == 0x34CFABC0) {  		currentOffset = strm.ReadInt32 (sizeof(int));  	}  	else {  		strm.Write (0' 0x34CFABC0);  		strm.Write (sizeof(int)' startingOffset);  		currentOffset = startingOffset;  	}  	var thisOffset = startingOffset;  	OffsetEntry entry;  	var count = 0;  	while (thisOffset != currentOffset) {  		var buff = new byte[OffsetEntrySize];  		strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  		entry = FromByteArray<OffsetEntry> (buff);  		foreach (var key in keys) {  			var hash = CalculateHash (key);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				fl.Write (buff);  				var buff2 = new byte[entry.Capacity];  				strm.ReadArray (thisOffset + OffsetEntrySize' buff2' 0' entry.Capacity);  				fl.Write (buff2);  				count++;  			}  		}  		thisOffset += OffsetEntrySize + entry.Capacity;  	}  	return count;  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: try {  	using (new CustomMutex (700)) {  		using (var strm = MMFile.CreateViewAccessor ()) {  			var hash = CalculateHash (key);  			var requiredCapacity = 8;  			byte[] serialized = null;  			if (typeof(T).IsValueType) {  				requiredCapacity = Marshal.SizeOf (typeof(T));  			}  			else if (typeof(T) == typeof(string)) {  				requiredCapacity = val.ToString ().Length + 1;  			}  			else if (typeof(T).IsSerializable) {  				// also store the sizeof the serialized object as what's ref'd by ptr  				serialized = Serialize (val);  				requiredCapacity = serialized.Length + sizeof(int);  			}  			else {  				throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  			}  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					if (requiredCapacity <= entry.Capacity) {  						if (typeof(T).IsValueType) {  							var tobewritten = ToByteArray (val' entry.Capacity);  							strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  						}  						else if (typeof(T) != typeof(string)) {  							strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  							strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  						}  						else {  							var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  							strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  						}  						return;  					}  					var overwriteEntry = entry;  					entry.Type = EntryType.Invalid;  					strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			OffsetEntry newEntry;  			newEntry.KeyHash = hash;  			newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  			newEntry.Type = EntryType.Basic;  			strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			if (typeof(T).IsValueType) {  				var buffr = ToByteArray (val' newEntry.Capacity);  				strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  			}  			else if (typeof(T) != typeof(string)) {  				strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  				strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  			}  			else {  				var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  				strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  			}  			// write new currentoffset  			strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: try {  	using (new CustomMutex (700)) {  		using (var strm = MMFile.CreateViewAccessor ()) {  			var hash = CalculateHash (key);  			var requiredCapacity = 8;  			byte[] serialized = null;  			if (typeof(T).IsValueType) {  				requiredCapacity = Marshal.SizeOf (typeof(T));  			}  			else if (typeof(T) == typeof(string)) {  				requiredCapacity = val.ToString ().Length + 1;  			}  			else if (typeof(T).IsSerializable) {  				// also store the sizeof the serialized object as what's ref'd by ptr  				serialized = Serialize (val);  				requiredCapacity = serialized.Length + sizeof(int);  			}  			else {  				throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  			}  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					if (requiredCapacity <= entry.Capacity) {  						if (typeof(T).IsValueType) {  							var tobewritten = ToByteArray (val' entry.Capacity);  							strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  						}  						else if (typeof(T) != typeof(string)) {  							strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  							strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  						}  						else {  							var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  							strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  						}  						return;  					}  					var overwriteEntry = entry;  					entry.Type = EntryType.Invalid;  					strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			OffsetEntry newEntry;  			newEntry.KeyHash = hash;  			newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  			newEntry.Type = EntryType.Basic;  			strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			if (typeof(T).IsValueType) {  				var buffr = ToByteArray (val' newEntry.Capacity);  				strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  			}  			else if (typeof(T) != typeof(string)) {  				strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  				strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  			}  			else {  				var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  				strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  			}  			// write new currentoffset  			strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: try {  	using (new CustomMutex (700)) {  		using (var strm = MMFile.CreateViewAccessor ()) {  			var hash = CalculateHash (key);  			var requiredCapacity = 8;  			byte[] serialized = null;  			if (typeof(T).IsValueType) {  				requiredCapacity = Marshal.SizeOf (typeof(T));  			}  			else if (typeof(T) == typeof(string)) {  				requiredCapacity = val.ToString ().Length + 1;  			}  			else if (typeof(T).IsSerializable) {  				// also store the sizeof the serialized object as what's ref'd by ptr  				serialized = Serialize (val);  				requiredCapacity = serialized.Length + sizeof(int);  			}  			else {  				throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  			}  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					if (requiredCapacity <= entry.Capacity) {  						if (typeof(T).IsValueType) {  							var tobewritten = ToByteArray (val' entry.Capacity);  							strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  						}  						else if (typeof(T) != typeof(string)) {  							strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  							strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  						}  						else {  							var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  							strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  						}  						return;  					}  					var overwriteEntry = entry;  					entry.Type = EntryType.Invalid;  					strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			OffsetEntry newEntry;  			newEntry.KeyHash = hash;  			newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  			newEntry.Type = EntryType.Basic;  			strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			if (typeof(T).IsValueType) {  				var buffr = ToByteArray (val' newEntry.Capacity);  				strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  			}  			else if (typeof(T) != typeof(string)) {  				strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  				strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  			}  			else {  				var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  				strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  			}  			// write new currentoffset  			strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: try {  	using (new CustomMutex (700)) {  		using (var strm = MMFile.CreateViewAccessor ()) {  			var hash = CalculateHash (key);  			var requiredCapacity = 8;  			byte[] serialized = null;  			if (typeof(T).IsValueType) {  				requiredCapacity = Marshal.SizeOf (typeof(T));  			}  			else if (typeof(T) == typeof(string)) {  				requiredCapacity = val.ToString ().Length + 1;  			}  			else if (typeof(T).IsSerializable) {  				// also store the sizeof the serialized object as what's ref'd by ptr  				serialized = Serialize (val);  				requiredCapacity = serialized.Length + sizeof(int);  			}  			else {  				throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  			}  			var signature = strm.ReadInt32 (0);  			var startingOffset = 2 * sizeof(int);  			int currentOffset;  			if (signature == 0x34CFABC0) {  				currentOffset = strm.ReadInt32 (sizeof(int));  			}  			else {  				strm.Write (0' 0x34CFABC0);  				strm.Write (sizeof(int)' startingOffset);  				currentOffset = startingOffset;  			}  			var thisOffset = startingOffset;  			OffsetEntry entry;  			while (thisOffset != currentOffset) {  				var buff = new byte[OffsetEntrySize];  				strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  				entry = FromByteArray<OffsetEntry> (buff);  				if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  					if (requiredCapacity <= entry.Capacity) {  						if (typeof(T).IsValueType) {  							var tobewritten = ToByteArray (val' entry.Capacity);  							strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  						}  						else if (typeof(T) != typeof(string)) {  							strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  							strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  						}  						else {  							var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  							strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  						}  						return;  					}  					var overwriteEntry = entry;  					entry.Type = EntryType.Invalid;  					strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  				}  				thisOffset += OffsetEntrySize + entry.Capacity;  			}  			OffsetEntry newEntry;  			newEntry.KeyHash = hash;  			newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  			newEntry.Type = EntryType.Basic;  			strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			if (typeof(T).IsValueType) {  				var buffr = ToByteArray (val' newEntry.Capacity);  				strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  			}  			else if (typeof(T) != typeof(string)) {  				strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  				strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  			}  			else {  				var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  				strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  			}  			// write new currentoffset  			strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  		}  	}  }  catch (Exception e) {  	Console.WriteLine (e);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (new CustomMutex (700)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var hash = CalculateHash (key);  		var requiredCapacity = 8;  		byte[] serialized = null;  		if (typeof(T).IsValueType) {  			requiredCapacity = Marshal.SizeOf (typeof(T));  		}  		else if (typeof(T) == typeof(string)) {  			requiredCapacity = val.ToString ().Length + 1;  		}  		else if (typeof(T).IsSerializable) {  			// also store the sizeof the serialized object as what's ref'd by ptr  			serialized = Serialize (val);  			requiredCapacity = serialized.Length + sizeof(int);  		}  		else {  			throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  		}  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				if (requiredCapacity <= entry.Capacity) {  					if (typeof(T).IsValueType) {  						var tobewritten = ToByteArray (val' entry.Capacity);  						strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  					}  					else if (typeof(T) != typeof(string)) {  						strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  						strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  					}  					else {  						var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  						strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  					}  					return;  				}  				var overwriteEntry = entry;  				entry.Type = EntryType.Invalid;  				strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		OffsetEntry newEntry;  		newEntry.KeyHash = hash;  		newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  		newEntry.Type = EntryType.Basic;  		strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		if (typeof(T).IsValueType) {  			var buffr = ToByteArray (val' newEntry.Capacity);  			strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  		}  		else if (typeof(T) != typeof(string)) {  			strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  			strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  		}  		else {  			var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  			strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  		}  		// write new currentoffset  		strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (new CustomMutex (700)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var hash = CalculateHash (key);  		var requiredCapacity = 8;  		byte[] serialized = null;  		if (typeof(T).IsValueType) {  			requiredCapacity = Marshal.SizeOf (typeof(T));  		}  		else if (typeof(T) == typeof(string)) {  			requiredCapacity = val.ToString ().Length + 1;  		}  		else if (typeof(T).IsSerializable) {  			// also store the sizeof the serialized object as what's ref'd by ptr  			serialized = Serialize (val);  			requiredCapacity = serialized.Length + sizeof(int);  		}  		else {  			throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  		}  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				if (requiredCapacity <= entry.Capacity) {  					if (typeof(T).IsValueType) {  						var tobewritten = ToByteArray (val' entry.Capacity);  						strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  					}  					else if (typeof(T) != typeof(string)) {  						strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  						strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  					}  					else {  						var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  						strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  					}  					return;  				}  				var overwriteEntry = entry;  				entry.Type = EntryType.Invalid;  				strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		OffsetEntry newEntry;  		newEntry.KeyHash = hash;  		newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  		newEntry.Type = EntryType.Basic;  		strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		if (typeof(T).IsValueType) {  			var buffr = ToByteArray (val' newEntry.Capacity);  			strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  		}  		else if (typeof(T) != typeof(string)) {  			strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  			strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  		}  		else {  			var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  			strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  		}  		// write new currentoffset  		strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (new CustomMutex (700)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var hash = CalculateHash (key);  		var requiredCapacity = 8;  		byte[] serialized = null;  		if (typeof(T).IsValueType) {  			requiredCapacity = Marshal.SizeOf (typeof(T));  		}  		else if (typeof(T) == typeof(string)) {  			requiredCapacity = val.ToString ().Length + 1;  		}  		else if (typeof(T).IsSerializable) {  			// also store the sizeof the serialized object as what's ref'd by ptr  			serialized = Serialize (val);  			requiredCapacity = serialized.Length + sizeof(int);  		}  		else {  			throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  		}  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				if (requiredCapacity <= entry.Capacity) {  					if (typeof(T).IsValueType) {  						var tobewritten = ToByteArray (val' entry.Capacity);  						strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  					}  					else if (typeof(T) != typeof(string)) {  						strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  						strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  					}  					else {  						var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  						strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  					}  					return;  				}  				var overwriteEntry = entry;  				entry.Type = EntryType.Invalid;  				strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		OffsetEntry newEntry;  		newEntry.KeyHash = hash;  		newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  		newEntry.Type = EntryType.Basic;  		strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		if (typeof(T).IsValueType) {  			var buffr = ToByteArray (val' newEntry.Capacity);  			strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  		}  		else if (typeof(T) != typeof(string)) {  			strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  			strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  		}  		else {  			var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  			strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  		}  		// write new currentoffset  		strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (new CustomMutex (700)) {  	using (var strm = MMFile.CreateViewAccessor ()) {  		var hash = CalculateHash (key);  		var requiredCapacity = 8;  		byte[] serialized = null;  		if (typeof(T).IsValueType) {  			requiredCapacity = Marshal.SizeOf (typeof(T));  		}  		else if (typeof(T) == typeof(string)) {  			requiredCapacity = val.ToString ().Length + 1;  		}  		else if (typeof(T).IsSerializable) {  			// also store the sizeof the serialized object as what's ref'd by ptr  			serialized = Serialize (val);  			requiredCapacity = serialized.Length + sizeof(int);  		}  		else {  			throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  		}  		var signature = strm.ReadInt32 (0);  		var startingOffset = 2 * sizeof(int);  		int currentOffset;  		if (signature == 0x34CFABC0) {  			currentOffset = strm.ReadInt32 (sizeof(int));  		}  		else {  			strm.Write (0' 0x34CFABC0);  			strm.Write (sizeof(int)' startingOffset);  			currentOffset = startingOffset;  		}  		var thisOffset = startingOffset;  		OffsetEntry entry;  		while (thisOffset != currentOffset) {  			var buff = new byte[OffsetEntrySize];  			strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  			entry = FromByteArray<OffsetEntry> (buff);  			if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  				if (requiredCapacity <= entry.Capacity) {  					if (typeof(T).IsValueType) {  						var tobewritten = ToByteArray (val' entry.Capacity);  						strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  					}  					else if (typeof(T) != typeof(string)) {  						strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  						strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  					}  					else {  						var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  						strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  					}  					return;  				}  				var overwriteEntry = entry;  				entry.Type = EntryType.Invalid;  				strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  			}  			thisOffset += OffsetEntrySize + entry.Capacity;  		}  		OffsetEntry newEntry;  		newEntry.KeyHash = hash;  		newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  		newEntry.Type = EntryType.Basic;  		strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		if (typeof(T).IsValueType) {  			var buffr = ToByteArray (val' newEntry.Capacity);  			strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  		}  		else if (typeof(T) != typeof(string)) {  			strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  			strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  		}  		else {  			var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  			strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  		}  		// write new currentoffset  		strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  	}  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (var strm = MMFile.CreateViewAccessor ()) {  	var hash = CalculateHash (key);  	var requiredCapacity = 8;  	byte[] serialized = null;  	if (typeof(T).IsValueType) {  		requiredCapacity = Marshal.SizeOf (typeof(T));  	}  	else if (typeof(T) == typeof(string)) {  		requiredCapacity = val.ToString ().Length + 1;  	}  	else if (typeof(T).IsSerializable) {  		// also store the sizeof the serialized object as what's ref'd by ptr  		serialized = Serialize (val);  		requiredCapacity = serialized.Length + sizeof(int);  	}  	else {  		throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  	}  	var signature = strm.ReadInt32 (0);  	var startingOffset = 2 * sizeof(int);  	int currentOffset;  	if (signature == 0x34CFABC0) {  		currentOffset = strm.ReadInt32 (sizeof(int));  	}  	else {  		strm.Write (0' 0x34CFABC0);  		strm.Write (sizeof(int)' startingOffset);  		currentOffset = startingOffset;  	}  	var thisOffset = startingOffset;  	OffsetEntry entry;  	while (thisOffset != currentOffset) {  		var buff = new byte[OffsetEntrySize];  		strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  		entry = FromByteArray<OffsetEntry> (buff);  		if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  			if (requiredCapacity <= entry.Capacity) {  				if (typeof(T).IsValueType) {  					var tobewritten = ToByteArray (val' entry.Capacity);  					strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  				}  				else if (typeof(T) != typeof(string)) {  					strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  					strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  				}  				else {  					var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  					strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  				}  				return;  			}  			var overwriteEntry = entry;  			entry.Type = EntryType.Invalid;  			strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		}  		thisOffset += OffsetEntrySize + entry.Capacity;  	}  	OffsetEntry newEntry;  	newEntry.KeyHash = hash;  	newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  	newEntry.Type = EntryType.Basic;  	strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  	if (typeof(T).IsValueType) {  		var buffr = ToByteArray (val' newEntry.Capacity);  		strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  	}  	else if (typeof(T) != typeof(string)) {  		strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  		strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  	}  	else {  		var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  		strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  	}  	// write new currentoffset  	strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (var strm = MMFile.CreateViewAccessor ()) {  	var hash = CalculateHash (key);  	var requiredCapacity = 8;  	byte[] serialized = null;  	if (typeof(T).IsValueType) {  		requiredCapacity = Marshal.SizeOf (typeof(T));  	}  	else if (typeof(T) == typeof(string)) {  		requiredCapacity = val.ToString ().Length + 1;  	}  	else if (typeof(T).IsSerializable) {  		// also store the sizeof the serialized object as what's ref'd by ptr  		serialized = Serialize (val);  		requiredCapacity = serialized.Length + sizeof(int);  	}  	else {  		throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  	}  	var signature = strm.ReadInt32 (0);  	var startingOffset = 2 * sizeof(int);  	int currentOffset;  	if (signature == 0x34CFABC0) {  		currentOffset = strm.ReadInt32 (sizeof(int));  	}  	else {  		strm.Write (0' 0x34CFABC0);  		strm.Write (sizeof(int)' startingOffset);  		currentOffset = startingOffset;  	}  	var thisOffset = startingOffset;  	OffsetEntry entry;  	while (thisOffset != currentOffset) {  		var buff = new byte[OffsetEntrySize];  		strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  		entry = FromByteArray<OffsetEntry> (buff);  		if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  			if (requiredCapacity <= entry.Capacity) {  				if (typeof(T).IsValueType) {  					var tobewritten = ToByteArray (val' entry.Capacity);  					strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  				}  				else if (typeof(T) != typeof(string)) {  					strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  					strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  				}  				else {  					var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  					strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  				}  				return;  			}  			var overwriteEntry = entry;  			entry.Type = EntryType.Invalid;  			strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		}  		thisOffset += OffsetEntrySize + entry.Capacity;  	}  	OffsetEntry newEntry;  	newEntry.KeyHash = hash;  	newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  	newEntry.Type = EntryType.Basic;  	strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  	if (typeof(T).IsValueType) {  		var buffr = ToByteArray (val' newEntry.Capacity);  		strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  	}  	else if (typeof(T) != typeof(string)) {  		strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  		strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  	}  	else {  		var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  		strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  	}  	// write new currentoffset  	strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: using (var strm = MMFile.CreateViewAccessor ()) {  	var hash = CalculateHash (key);  	var requiredCapacity = 8;  	byte[] serialized = null;  	if (typeof(T).IsValueType) {  		requiredCapacity = Marshal.SizeOf (typeof(T));  	}  	else if (typeof(T) == typeof(string)) {  		requiredCapacity = val.ToString ().Length + 1;  	}  	else if (typeof(T).IsSerializable) {  		// also store the sizeof the serialized object as what's ref'd by ptr  		serialized = Serialize (val);  		requiredCapacity = serialized.Length + sizeof(int);  	}  	else {  		throw new Exception (String.Format ("Type {0} is not serializable!  Cannot write."' typeof(T)));  	}  	var signature = strm.ReadInt32 (0);  	var startingOffset = 2 * sizeof(int);  	int currentOffset;  	if (signature == 0x34CFABC0) {  		currentOffset = strm.ReadInt32 (sizeof(int));  	}  	else {  		strm.Write (0' 0x34CFABC0);  		strm.Write (sizeof(int)' startingOffset);  		currentOffset = startingOffset;  	}  	var thisOffset = startingOffset;  	OffsetEntry entry;  	while (thisOffset != currentOffset) {  		var buff = new byte[OffsetEntrySize];  		strm.ReadArray (thisOffset' buff' 0' OffsetEntrySize);  		entry = FromByteArray<OffsetEntry> (buff);  		if (entry.Type != EntryType.Invalid && entry.KeyHash == hash) {  			if (requiredCapacity <= entry.Capacity) {  				if (typeof(T).IsValueType) {  					var tobewritten = ToByteArray (val' entry.Capacity);  					strm.WriteArray (thisOffset + OffsetEntrySize' tobewritten' 0' buff.Length <= entry.Capacity ? buff.Length : entry.Capacity);  				}  				else if (typeof(T) != typeof(string)) {  					strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  					strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  				}  				else {  					var strz = System.Text.Encoding.UTF8.GetBytes (val + "\0");  					strm.WriteArray (thisOffset + OffsetEntrySize' strz' 0' strz.Length);  				}  				return;  			}  			var overwriteEntry = entry;  			entry.Type = EntryType.Invalid;  			strm.WriteArray (thisOffset' ToByteArray (overwriteEntry' OffsetEntrySize)' 0' OffsetEntrySize);  		}  		thisOffset += OffsetEntrySize + entry.Capacity;  	}  	OffsetEntry newEntry;  	newEntry.KeyHash = hash;  	newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  	newEntry.Type = EntryType.Basic;  	strm.WriteArray (currentOffset' ToByteArray (newEntry' OffsetEntrySize)' 0' OffsetEntrySize);  	if (typeof(T).IsValueType) {  		var buffr = ToByteArray (val' newEntry.Capacity);  		strm.WriteArray (currentOffset + OffsetEntrySize' buffr' 0' buffr.Length <= newEntry.Capacity ? buffr.Length : newEntry.Capacity);  	}  	else if (typeof(T) != typeof(string)) {  		strm.WriteArray (thisOffset + OffsetEntrySize' ToByteArray (serialized.Length' sizeof(int))' 0' sizeof(int));  		strm.WriteArray (thisOffset + OffsetEntrySize + sizeof(int)' serialized' 0' serialized.Length);  	}  	else {  		var arr = System.Text.Encoding.UTF8.GetBytes (val + "\0");  		strm.WriteArray (currentOffset + OffsetEntrySize' arr' 0' arr.Length);  	}  	// write new currentoffset  	strm.Write (sizeof(int)' currentOffset + OffsetEntrySize + newEntry.Capacity);  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,Write,The following statement contains a magic number: newEntry.Capacity = (typeof(T).IsValueType ? 1 : 2) * requiredCapacity;  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,CalculateHash,The following statement contains a magic number: foreach (var c in s) {  	hash = ((hash << 5) + hash) + c;  }  
Magic Number,LeagueSharp.Common,Global,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Global.cs,CalculateHash,The following statement contains a magic number: hash = ((hash << 5) + hash) + c;  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameUpdate,The following statement contains a magic number: if (Environment.TickCount - LastTick <= 60 * 1000) {  	return;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameUpdate,The following statement contains a magic number: if (Environment.TickCount - LastTick <= 60 * 1000) {  	return;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameUpdate,The following statement contains a magic number: ActiveAttacks.ToList ().Where (pair => pair.Value.StartTick < Environment.TickCount - 60000).ToList ().ForEach (pair => ActiveAttacks.Remove (pair.Key));  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameProcessPacket,The following statement contains a magic number: if (args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)) {  	return;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,Game_OnGameProcessPacket,The following statement contains a magic number: if (args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)) {  	return;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,ObjAiBaseOnOnProcessSpellCast,The following statement contains a magic number: if (!sender.IsValidTarget (3000' false) || sender.Team != ObjectManager.Player.Team || sender is Obj_AI_Hero || !Orbwalking.IsAutoAttack (args.SData.Name) || !(args.Target is Obj_AI_Base)) {  	return;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,GetHealthPrediction,The following statement contains a magic number: foreach (var attack in ActiveAttacks.Values) {  	var attackDamage = 0f;  	if (attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId) {  		var landTime = attack.StartTick + attack.Delay + 1000 * unit.Distance (attack.Source) / attack.ProjectileSpeed + delay;  		if (Environment.TickCount < landTime - delay && landTime < Environment.TickCount + time) {  			attackDamage = attack.Damage;  		}  	}  	predictedDamage += attackDamage;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,GetHealthPrediction,The following statement contains a magic number: if (attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId) {  	var landTime = attack.StartTick + attack.Delay + 1000 * unit.Distance (attack.Source) / attack.ProjectileSpeed + delay;  	if (Environment.TickCount < landTime - delay && landTime < Environment.TickCount + time) {  		attackDamage = attack.Damage;  	}  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,LaneClearHealthPrediction,The following statement contains a magic number: foreach (var attack in ActiveAttacks.Values) {  	var n = 0;  	if (Environment.TickCount - 100 <= attack.StartTick + attack.AnimationTime && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId) {  		var fromT = attack.StartTick;  		var toT = Environment.TickCount + time;  		while (fromT < toT) {  			if (fromT >= Environment.TickCount && (fromT + attack.Delay + unit.Distance (attack.Source) / attack.ProjectileSpeed < toT)) {  				n++;  			}  			fromT += (int)attack.AnimationTime;  		}  	}  	predictedDamage += n * attack.Damage;  }  
Magic Number,LeagueSharp.Common,HealthPrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\HealthPrediction.cs,LaneClearHealthPrediction,The following statement contains a magic number: if (Environment.TickCount - 100 <= attack.StartTick + attack.AnimationTime && attack.Target.IsValidTarget (float.MaxValue' false) && attack.Source.IsValidTarget (float.MaxValue' false) && attack.Target.NetworkId == unit.NetworkId) {  	var fromT = attack.StartTick;  	var toT = Environment.TickCount + time;  	while (fromT < toT) {  		if (fromT >= Environment.TickCount && (fromT + attack.Delay + unit.Distance (attack.Source) / attack.ProjectileSpeed < toT)) {  			n++;  		}  		fromT += (int)attack.AnimationTime;  	}  }  
Magic Number,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,Interrupter,The following statement contains a magic number: Spells.Add (new InterruptableSpell {  	ChampionName = "Caitlyn"'  	SpellName = "CaitlynAceintheHole"'  	DangerLevel = InterruptableDangerLevel.High'  	Slot = SpellSlot.R'  	BuffName = "CaitlynAceintheHole"'  	ExtraDuration = 600  });  
Magic Number,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,Interrupter,The following statement contains a magic number: Spells.Add (new InterruptableSpell {  	ChampionName = "Galio"'  	SpellName = "GalioIdolOfDurand"'  	DangerLevel = InterruptableDangerLevel.High'  	Slot = SpellSlot.R'  	BuffName = "GalioIdolOfDurand"'  	ExtraDuration = 200'  });  
Magic Number,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,Game_OnGameUpdate,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (enemy => enemy.IsValidTarget ())) {  	foreach (var spell in Spells.Where (spell => (enemy.LastCastedspell () != null && String.Equals (enemy.LastCastedspell ().Name' spell.SpellName' StringComparison.CurrentCultureIgnoreCase) && Environment.TickCount - enemy.LastCastedSpellT () < 350 + spell.ExtraDuration) || (spell.BuffName != null && enemy.HasBuff (spell.BuffName' true)))) {  		FireOnInterruptable (enemy' spell);  	}  }  
Magic Number,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,Game_OnGameUpdate,The following statement contains a magic number: foreach (var spell in Spells.Where (spell => (enemy.LastCastedspell () != null && String.Equals (enemy.LastCastedspell ().Name' spell.SpellName' StringComparison.CurrentCultureIgnoreCase) && Environment.TickCount - enemy.LastCastedSpellT () < 350 + spell.ExtraDuration) || (spell.BuffName != null && enemy.HasBuff (spell.BuffName' true)))) {  	FireOnInterruptable (enemy' spell);  }  
Magic Number,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,IsChannelingImportantSpell,The following statement contains a magic number: return Spells.Where (spell => spell.ChampionName == unit.ChampionName).Any (spell => (unit.LastCastedspell () != null && unit.LastCastedspell ().Name.ToLower () == spell.SpellName.ToLower () && Environment.TickCount - unit.LastCastedSpellT () < 350 + spell.ExtraDuration) || (spell.BuffName != null && unit.HasBuff (spell.BuffName' true)) || (ObjectManager.Player.NetworkId == unit.NetworkId && LastCastedSpell.LastCastPacketSent != null && LastCastedSpell.LastCastPacketSent.Slot == spell.Slot && Environment.TickCount - LastCastedSpell.LastCastPacketSent.Tick < 150 + Game.Ping));  
Magic Number,LeagueSharp.Common,Interrupter,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Interrupter.cs,IsChannelingImportantSpell,The following statement contains a magic number: return Spells.Where (spell => spell.ChampionName == unit.ChampionName).Any (spell => (unit.LastCastedspell () != null && unit.LastCastedspell ().Name.ToLower () == spell.SpellName.ToLower () && Environment.TickCount - unit.LastCastedSpellT () < 350 + spell.ExtraDuration) || (spell.BuffName != null && unit.HasBuff (spell.BuffName' true)) || (ObjectManager.Player.NetworkId == unit.NetworkId && LastCastedSpell.LastCastPacketSent != null && LastCastedSpell.LastCastPacketSent.Slot == spell.Slot && Environment.TickCount - LastCastedSpell.LastCastPacketSent.Tick < 150 + Game.Ping));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,MenuDrawHelper,The following statement contains a magic number: Font = new Font (Drawing.Direct3DDevice' new FontDescription {  	FaceName = "Tahoma"'  	Height = 14'  	OutputPrecision = FontPrecision.Default'  	Quality = FontQuality.Antialiased'  //Weight = FontWeight.Bold'  });  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawOnOff,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(item.Position.X + item.Width - item.Height)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawOnOff,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(item.Position.X + item.Width - item.Height)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawOnOff,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(item.Position.X + item.Width - item.Height)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawOnOff,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(item.Position.X + item.Width - item.Height)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawArrow,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(position.X)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawArrow,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(position.X)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawArrow,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(position.X)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawArrow,The following statement contains a magic number: Font.DrawText (null' s' new SharpDX.Rectangle ((int)(position.X)' (int)item.Position.Y' item.Height' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Center' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Drawing.DrawLine (x' position.Y + 2' x' position.Y + item.Height' 2' Color.Yellow);  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Drawing.DrawLine (x' position.Y + 2' x' position.Y + item.Height' 2' Color.Yellow);  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: if (drawText) {  	Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  }  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: if (drawText) {  	Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  }  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: if (drawText) {  	Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  }  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: if (drawText) {  	Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  }  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: if (drawText) {  	Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  }  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuDrawHelper,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,DrawSlider,The following statement contains a magic number: Font.DrawText (null' value.ToString ()' new SharpDX.Rectangle ((int)position.X - 5' (int)position.Y' item.Width' item.Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (DisplayName)' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (DisplayName)' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (DisplayName)' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (DisplayName)' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (DisplayName)' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' ">"' new SharpDX.Rectangle ((int)Position.X - 5' (int)Position.Y' Width' Height)' FontDrawFlags.Right | FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' ">"' new SharpDX.Rectangle ((int)Position.X - 5' (int)Position.Y' Width' Height)' FontDrawFlags.Right | FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' ">"' new SharpDX.Rectangle ((int)Position.X - 5' (int)Position.Y' Width' Height)' FontDrawFlags.Right | FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' ">"' new SharpDX.Rectangle ((int)Position.X - 5' (int)Position.Y' Width' Height)' FontDrawFlags.Right | FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,Menu,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' ">"' new SharpDX.Rectangle ((int)Position.X - 5' (int)Position.Y' Width' Height)' FontDrawFlags.Right | FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		SetValue (!GetValue<bool> ());  	}  	break;  case MenuValueType.Slider:  	if (!Visible) {  		Interacting = false;  		return;  	}  	if (message == WindowsMessages.WM_MOUSEMOVE && Interacting || message == WindowsMessages.WM_LBUTTONDOWN && !Interacting && IsInside (cursorPos)) {  		var val = GetValue<Slider> ();  		var t = val.MinValue + ((cursorPos.X - Position.X) * (val.MaxValue - val.MinValue)) / Width;  		val.Value = (int)t;  		SetValue (val);  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN && message != WindowsMessages.WM_LBUTTONUP) {  		return;  	}  	if (!IsInside (cursorPos) && message == WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	Interacting = message == WindowsMessages.WM_LBUTTONDOWN;  	break;  case MenuValueType.Color:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		var c = GetValue<Color> ();  		ColorPicker.Load (delegate (Color args) {  			SetValue (args);  		}' c);  	}  	break;  case MenuValueType.Circle:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (cursorPos.X - Position.X > Width - Height) {  		var val = GetValue<Circle> ();  		val.Active = !val.Active;  		SetValue (val);  	}  	else if (cursorPos.X - Position.X > Width - 2 * Height) {  		var c = GetValue<Circle> ();  		ColorPicker.Load (delegate (Color args) {  			var val = GetValue<Circle> ();  			val.Color = args;  			SetValue (val);  		}' c.Color);  	}  	break;  case MenuValueType.KeyBind:  	if (!MenuGUI.IsChatOpen) {  		switch (message) {  		case WindowsMessages.WM_KEYDOWN:  			var val = GetValue<KeyBind> ();  			if (key == val.Key) {  				if (val.Type == KeyBindType.Press) {  					if (!val.Active) {  						val.Active = true;  						SetValue (val);  					}  				}  			}  			break;  		case WindowsMessages.WM_KEYUP:  			var val2 = GetValue<KeyBind> ();  			if (key == val2.Key) {  				if (val2.Type == KeyBindType.Press) {  					val2.Active = false;  					SetValue (val2);  				}  				else {  					val2.Active = !val2.Active;  					SetValue (val2);  				}  			}  			break;  		}  	}  	if (message == WindowsMessages.WM_KEYUP && Interacting) {  		var val = GetValue<KeyBind> ();  		val.Key = key;  		SetValue (val);  		Interacting = false;  	}  	if (!Visible) {  		return;  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		var val = GetValue<KeyBind> ();  		val.Active = !val.Active;  		SetValue (val);  	}  	else {  		Interacting = !Interacting;  	}  	break;  case MenuValueType.StringList:  	if (!Visible) {  		return;  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	var slVal = GetValue<StringList> ();  	if (cursorPos.X > Position.X + Width - Height) {  		slVal.SelectedIndex = slVal.SelectedIndex == slVal.SList.Length - 1 ? 0 : (slVal.SelectedIndex + 1);  		SetValue (slVal);  	}  	else if (cursorPos.X > Position.X + Width - 2 * Height) {  		slVal.SelectedIndex = slVal.SelectedIndex == 0 ? slVal.SList.Length - 1 : (slVal.SelectedIndex - 1);  		SetValue (slVal);  	}  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		SetValue (!GetValue<bool> ());  	}  	break;  case MenuValueType.Slider:  	if (!Visible) {  		Interacting = false;  		return;  	}  	if (message == WindowsMessages.WM_MOUSEMOVE && Interacting || message == WindowsMessages.WM_LBUTTONDOWN && !Interacting && IsInside (cursorPos)) {  		var val = GetValue<Slider> ();  		var t = val.MinValue + ((cursorPos.X - Position.X) * (val.MaxValue - val.MinValue)) / Width;  		val.Value = (int)t;  		SetValue (val);  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN && message != WindowsMessages.WM_LBUTTONUP) {  		return;  	}  	if (!IsInside (cursorPos) && message == WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	Interacting = message == WindowsMessages.WM_LBUTTONDOWN;  	break;  case MenuValueType.Color:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		var c = GetValue<Color> ();  		ColorPicker.Load (delegate (Color args) {  			SetValue (args);  		}' c);  	}  	break;  case MenuValueType.Circle:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (cursorPos.X - Position.X > Width - Height) {  		var val = GetValue<Circle> ();  		val.Active = !val.Active;  		SetValue (val);  	}  	else if (cursorPos.X - Position.X > Width - 2 * Height) {  		var c = GetValue<Circle> ();  		ColorPicker.Load (delegate (Color args) {  			var val = GetValue<Circle> ();  			val.Color = args;  			SetValue (val);  		}' c.Color);  	}  	break;  case MenuValueType.KeyBind:  	if (!MenuGUI.IsChatOpen) {  		switch (message) {  		case WindowsMessages.WM_KEYDOWN:  			var val = GetValue<KeyBind> ();  			if (key == val.Key) {  				if (val.Type == KeyBindType.Press) {  					if (!val.Active) {  						val.Active = true;  						SetValue (val);  					}  				}  			}  			break;  		case WindowsMessages.WM_KEYUP:  			var val2 = GetValue<KeyBind> ();  			if (key == val2.Key) {  				if (val2.Type == KeyBindType.Press) {  					val2.Active = false;  					SetValue (val2);  				}  				else {  					val2.Active = !val2.Active;  					SetValue (val2);  				}  			}  			break;  		}  	}  	if (message == WindowsMessages.WM_KEYUP && Interacting) {  		var val = GetValue<KeyBind> ();  		val.Key = key;  		SetValue (val);  		Interacting = false;  	}  	if (!Visible) {  		return;  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		var val = GetValue<KeyBind> ();  		val.Active = !val.Active;  		SetValue (val);  	}  	else {  		Interacting = !Interacting;  	}  	break;  case MenuValueType.StringList:  	if (!Visible) {  		return;  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	var slVal = GetValue<StringList> ();  	if (cursorPos.X > Position.X + Width - Height) {  		slVal.SelectedIndex = slVal.SelectedIndex == slVal.SList.Length - 1 ? 0 : (slVal.SelectedIndex + 1);  		SetValue (slVal);  	}  	else if (cursorPos.X > Position.X + Width - 2 * Height) {  		slVal.SelectedIndex = slVal.SelectedIndex == 0 ? slVal.SList.Length - 1 : (slVal.SelectedIndex - 1);  		SetValue (slVal);  	}  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following statement contains a magic number: if (cursorPos.X - Position.X > Width - Height) {  	var val = GetValue<Circle> ();  	val.Active = !val.Active;  	SetValue (val);  }  else if (cursorPos.X - Position.X > Width - 2 * Height) {  	var c = GetValue<Circle> ();  	ColorPicker.Load (delegate (Color args) {  		var val = GetValue<Circle> ();  		val.Color = args;  		SetValue (val);  	}' c.Color);  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following statement contains a magic number: if (cursorPos.X - Position.X > Width - 2 * Height) {  	var c = GetValue<Circle> ();  	ColorPicker.Load (delegate (Color args) {  		var val = GetValue<Circle> ();  		val.Color = args;  		SetValue (val);  	}' c.Color);  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following statement contains a magic number: if (cursorPos.X > Position.X + Width - Height) {  	slVal.SelectedIndex = slVal.SelectedIndex == slVal.SList.Length - 1 ? 0 : (slVal.SelectedIndex + 1);  	SetValue (slVal);  }  else if (cursorPos.X > Position.X + Width - 2 * Height) {  	slVal.SelectedIndex = slVal.SelectedIndex == 0 ? slVal.SList.Length - 1 : (slVal.SelectedIndex - 1);  	SetValue (slVal);  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following statement contains a magic number: if (cursorPos.X > Position.X + Width - 2 * Height) {  	slVal.SelectedIndex = slVal.SelectedIndex == 0 ? slVal.SList.Length - 1 : (slVal.SelectedIndex - 1);  	SetValue (slVal);  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' s' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' s' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' s' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' s' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following statement contains a magic number: MenuDrawHelper.Font.DrawText (null' s' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter' new ColorBGRA (255' 255' 255' 255));  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminityBitmap = new Bitmap (9' 238);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminityBitmap = new Bitmap (9' 238);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: OpacityBitmap = new Bitmap (9' 238);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: OpacityBitmap = new Bitmap (9' 238);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminitySprite = (Render.Sprite)new Render.Sprite (LuminityBitmap' new Vector2 (X + 285' Y + 40)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminitySprite = (Render.Sprite)new Render.Sprite (LuminityBitmap' new Vector2 (X + 285' Y + 40)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: OpacitySprite = (Render.Sprite)new Render.Sprite (OpacityBitmap' new Vector2 (X + 349' Y + 40)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: OpacitySprite = (Render.Sprite)new Render.Sprite (OpacityBitmap' new Vector2 (X + 349' Y + 40)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: PreviewRectangle = (Render.Rectangle)new Render.Rectangle (X + 375' Y + 44' 54' 80' new ColorBGRA (255' 255' 255' 255)).Add (0);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminositySlider = new CPSlider (285 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminositySlider = new CPSlider (285 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminositySlider = new CPSlider (285 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: LuminositySlider = new CPSlider (285 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: AlphaSlider = new CPSlider (350 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: AlphaSlider = new CPSlider (350 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: AlphaSlider = new CPSlider (350 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,ColorPicker,The following statement contains a magic number: AlphaSlider = new CPSlider (350 - Properties.Resources.CPActiveSlider.Width / 3' 35' 248);  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Load,The following statement contains a magic number: X = (Drawing.Width - BackgroundSprite.Width) / 2;  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Load,The following statement contains a magic number: Y = (Drawing.Height - BackgroundSprite.Height) / 2;  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (args.Msg == (uint)WindowsMessages.WM_LBUTTONDOWN) {  	var pos = Utils.GetCursorPos ();  	if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  		_moving = true;  	}  	//Apply button:  	if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  		Close ();  		return;  	}  	//Cancel button:  	if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  		FireOnChangeColor (InitialColor);  		Close ();  		return;  	}  	if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  		_selecting = true;  		UpdateColor ();  	}  }  else if (args.Msg == (uint)WindowsMessages.WM_LBUTTONUP) {  	_moving = false;  	_selecting = false;  }  else if (args.Msg == (uint)WindowsMessages.WM_MOUSEMOVE) {  	if (_selecting) {  		var pos = Utils.GetCursorPos ();  		if (Utils.IsUnderRectangle (pos' ColorPickerX' ColorPickerY' ColorPickerW' ColorPickerH)) {  			UpdateColor ();  		}  	}  	if (_moving) {  		var pos = Utils.GetCursorPos ();  		X += (int)(pos.X - _prevPos.X);  		Y += (int)(pos.Y - _prevPos.Y);  	}  	_prevPos = Utils.GetCursorPos ();  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X' Y' BackgroundSprite.Width' 25)) {  	_moving = true;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 290' Y + 297' 74' 12)) {  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  	FireOnChangeColor (InitialColor);  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  	FireOnChangeColor (InitialColor);  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  	FireOnChangeColor (InitialColor);  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Game_OnWndProc,The following statement contains a magic number: if (Utils.IsUnderRectangle (pos' X + 370' Y + 296' 73' 14)) {  	FireOnChangeColor (InitialColor);  	Close ();  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,UpdateLuminosityBitmap,The following statement contains a magic number: if (Environment.TickCount - LastBitmapUpdate < 100 && !force) {  	return;  }  
Magic Number,LeagueSharp.Common,ColorPicker,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,UpdateOpacityBitmap,The following statement contains a magic number: if (Environment.TickCount - LastBitmapUpdate2 < 100 && !force) {  	return;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanAttack,The following statement contains a magic number: if (LastAATick <= Environment.TickCount) {  	return Environment.TickCount + Game.Ping / 2 + 25 >= LastAATick + Player.AttackDelay * 1000 && Attack;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanAttack,The following statement contains a magic number: if (LastAATick <= Environment.TickCount) {  	return Environment.TickCount + Game.Ping / 2 + 25 >= LastAATick + Player.AttackDelay * 1000 && Attack;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanAttack,The following statement contains a magic number: if (LastAATick <= Environment.TickCount) {  	return Environment.TickCount + Game.Ping / 2 + 25 >= LastAATick + Player.AttackDelay * 1000 && Attack;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanAttack,The following statement contains a magic number: return Environment.TickCount + Game.Ping / 2 + 25 >= LastAATick + Player.AttackDelay * 1000 && Attack;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanAttack,The following statement contains a magic number: return Environment.TickCount + Game.Ping / 2 + 25 >= LastAATick + Player.AttackDelay * 1000 && Attack;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanAttack,The following statement contains a magic number: return Environment.TickCount + Game.Ping / 2 + 25 >= LastAATick + Player.AttackDelay * 1000 && Attack;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanMove,The following statement contains a magic number: if (LastAATick <= Environment.TickCount) {  	return (Environment.TickCount + Game.Ping / 2 >= LastAATick + Player.AttackCastDelay * 1000 + extraWindup) && Move;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanMove,The following statement contains a magic number: if (LastAATick <= Environment.TickCount) {  	return (Environment.TickCount + Game.Ping / 2 >= LastAATick + Player.AttackCastDelay * 1000 + extraWindup) && Move;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanMove,The following statement contains a magic number: return (Environment.TickCount + Game.Ping / 2 >= LastAATick + Player.AttackCastDelay * 1000 + extraWindup) && Move;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,CanMove,The following statement contains a magic number: return (Environment.TickCount + Game.Ping / 2 >= LastAATick + Player.AttackCastDelay * 1000 + extraWindup) && Move;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,Orbwalk,The following statement contains a magic number: try {  	if (target.IsValidTarget () && CanAttack ()) {  		DisableNextAttack = false;  		FireBeforeAttack (target);  		if (!DisableNextAttack) {  			Player.IssueOrder (GameObjectOrder.AttackUnit' target);  			if (_lastTarget != null && _lastTarget.IsValid && _lastTarget != target) {  				LastAATick = Environment.TickCount + Game.Ping / 2;  			}  			_lastTarget = target;  			return;  		}  	}  	if (CanMove (extraWindup)) {  		MoveTo (position' holdAreaRadius' false' useFixedDistance' randomizeMinDistance);  	}  }  catch (Exception e) {  	Console.WriteLine (e.ToString ());  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,Orbwalk,The following statement contains a magic number: if (target.IsValidTarget () && CanAttack ()) {  	DisableNextAttack = false;  	FireBeforeAttack (target);  	if (!DisableNextAttack) {  		Player.IssueOrder (GameObjectOrder.AttackUnit' target);  		if (_lastTarget != null && _lastTarget.IsValid && _lastTarget != target) {  			LastAATick = Environment.TickCount + Game.Ping / 2;  		}  		_lastTarget = target;  		return;  	}  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,Orbwalk,The following statement contains a magic number: if (!DisableNextAttack) {  	Player.IssueOrder (GameObjectOrder.AttackUnit' target);  	if (_lastTarget != null && _lastTarget.IsValid && _lastTarget != target) {  		LastAATick = Environment.TickCount + Game.Ping / 2;  	}  	_lastTarget = target;  	return;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,Orbwalk,The following statement contains a magic number: if (_lastTarget != null && _lastTarget.IsValid && _lastTarget != target) {  	LastAATick = Environment.TickCount + Game.Ping / 2;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,Orbwalk,The following statement contains a magic number: LastAATick = Environment.TickCount + Game.Ping / 2;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessPacket,The following statement contains a magic number: if (args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)) {  	return;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessPacket,The following statement contains a magic number: if (args.PacketData [0] != 0x34 || new GamePacket (args).ReadInteger (1) != ObjectManager.Player.NetworkId || (args.PacketData [5] != 0x11 && args.PacketData [5] != 0x91)) {  	return;  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: if (IsAutoAttackReset (spellName) && unit.IsMe) {  	Utility.DelayAction.Add (250' ResetAutoAttackTimer);  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: Utility.DelayAction.Add (250' ResetAutoAttackTimer);  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe) {  	LastAATick = Environment.TickCount - Game.Ping / 2;  	if (target != null && target.IsValid) {  		FireOnTargetSwitch (target);  		_lastTarget = target;  	}  	if (unit.IsMelee ()) {  		Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  	}  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe) {  	LastAATick = Environment.TickCount - Game.Ping / 2;  	if (target != null && target.IsValid) {  		FireOnTargetSwitch (target);  		_lastTarget = target;  	}  	if (unit.IsMelee ()) {  		Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  	}  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe) {  	LastAATick = Environment.TickCount - Game.Ping / 2;  	if (target != null && target.IsValid) {  		FireOnTargetSwitch (target);  		_lastTarget = target;  	}  	if (unit.IsMelee ()) {  		Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  	}  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: LastAATick = Environment.TickCount - Game.Ping / 2;  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMelee ()) {  	Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMelee ()) {  	Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  }  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  
Magic Number,LeagueSharp.Common,Orbwalking,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Orbwalking.cs,OnProcessSpell,The following statement contains a magic number: Utility.DelayAction.Add ((int)(unit.AttackCastDelay * 1000 + 40)' () => FireAfterAttack (unit' _lastTarget));  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.Range != float.MaxValue) {  	if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  		result.Hitchance = HitChance.Medium;  	}  	if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) {  		result.Hitchance = HitChance.OutOfRange;  	}  	if (input.RangeCheckFrom.Distance (result.CastPosition' true) > Math.Pow (input.Range' 2)) {  		if (result.Hitchance != HitChance.OutOfRange) {  			result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D ();  		}  		else {  			result.Hitchance = HitChance.OutOfRange;  		}  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.Range != float.MaxValue) {  	if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  		result.Hitchance = HitChance.Medium;  	}  	if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) {  		result.Hitchance = HitChance.OutOfRange;  	}  	if (input.RangeCheckFrom.Distance (result.CastPosition' true) > Math.Pow (input.Range' 2)) {  		if (result.Hitchance != HitChance.OutOfRange) {  			result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D ();  		}  		else {  			result.Hitchance = HitChance.OutOfRange;  		}  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.Range != float.MaxValue) {  	if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  		result.Hitchance = HitChance.Medium;  	}  	if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) {  		result.Hitchance = HitChance.OutOfRange;  	}  	if (input.RangeCheckFrom.Distance (result.CastPosition' true) > Math.Pow (input.Range' 2)) {  		if (result.Hitchance != HitChance.OutOfRange) {  			result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D ();  		}  		else {  			result.Hitchance = HitChance.OutOfRange;  		}  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.Range != float.MaxValue) {  	if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  		result.Hitchance = HitChance.Medium;  	}  	if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) {  		result.Hitchance = HitChance.OutOfRange;  	}  	if (input.RangeCheckFrom.Distance (result.CastPosition' true) > Math.Pow (input.Range' 2)) {  		if (result.Hitchance != HitChance.OutOfRange) {  			result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D ();  		}  		else {  			result.Hitchance = HitChance.OutOfRange;  		}  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.Range != float.MaxValue) {  	if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  		result.Hitchance = HitChance.Medium;  	}  	if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) {  		result.Hitchance = HitChance.OutOfRange;  	}  	if (input.RangeCheckFrom.Distance (result.CastPosition' true) > Math.Pow (input.Range' 2)) {  		if (result.Hitchance != HitChance.OutOfRange) {  			result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D ();  		}  		else {  			result.Hitchance = HitChance.OutOfRange;  		}  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  	result.Hitchance = HitChance.Medium;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  	result.Hitchance = HitChance.Medium;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (result.Hitchance == HitChance.High && input.RangeCheckFrom.Distance (input.Unit.Position' true) > Math.Pow (input.Range + input.RealRadius * 3 / 4' 2)) {  	result.Hitchance = HitChance.Medium;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.RangeCheckFrom.Distance (result.UnitPosition' true) > Math.Pow (input.Range + (input.Type == SkillshotType.SkillshotCircle ? input.RealRadius : 0)' 2)) {  	result.Hitchance = HitChance.OutOfRange;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following statement contains a magic number: if (input.RangeCheckFrom.Distance (result.CastPosition' true) > Math.Pow (input.Range' 2)) {  	if (result.Hitchance != HitChance.OutOfRange) {  		result.CastPosition = input.RangeCheckFrom + input.Range * (result.UnitPosition - input.RangeCheckFrom).To2D ().Normalized ().To3D ();  	}  	else {  		result.Hitchance = HitChance.OutOfRange;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetDashingPrediction,The following statement contains a magic number: if (!dashData.IsBlink) {  	//Mid air:  	var dashPred = GetPositionOnPath (input' new List<Vector2> {  		input.Unit.ServerPosition.To2D ()'  		dashData.Path.Last ()  	}' dashData.Speed);  	if (dashPred.Hitchance == HitChance.High) {  		dashPred.CastPosition = dashPred.UnitPosition;  		dashPred.Hitchance = HitChance.Dashing;  		return dashPred;  	}  	//At the end of the dash:  	if (dashData.Path.PathLength () > 200) {  		var endP = dashData.Path.Last ();  		var timeToPoint = input.Delay + input.From.To2D ().Distance (endP) / input.Speed;  		if (timeToPoint <= input.Unit.Distance (endP) / dashData.Speed + input.RealRadius / input.Unit.MoveSpeed) {  			return new PredictionOutput {  				CastPosition = endP.To3D ()'  				UnitPosition = endP.To3D ()'  				Hitchance = HitChance.Dashing'  			};  		}  	}  	result.CastPosition = dashData.Path.Last ().To3D ();  	result.UnitPosition = result.CastPosition;  	//Figure out where the unit is going.  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetDashingPrediction,The following statement contains a magic number: if (dashData.Path.PathLength () > 200) {  	var endP = dashData.Path.Last ();  	var timeToPoint = input.Delay + input.From.To2D ().Distance (endP) / input.Speed;  	if (timeToPoint <= input.Unit.Distance (endP) / dashData.Speed + input.RealRadius / input.Unit.MoveSpeed) {  		return new PredictionOutput {  			CastPosition = endP.To3D ()'  			UnitPosition = endP.To3D ()'  			Hitchance = HitChance.Dashing'  		};  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStandardPrediction,The following statement contains a magic number: if (input.Unit.Distance (input.From' true) < 300 * 300) {  	input.Delay /= 2;  	speed *= 2;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStandardPrediction,The following statement contains a magic number: if (input.Unit.Distance (input.From' true) < 300 * 300) {  	input.Delay /= 2;  	speed *= 2;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStandardPrediction,The following statement contains a magic number: if (input.Unit.Distance (input.From' true) < 300 * 300) {  	input.Delay /= 2;  	speed *= 2;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStandardPrediction,The following statement contains a magic number: if (input.Unit.Distance (input.From' true) < 300 * 300) {  	input.Delay /= 2;  	speed *= 2;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStandardPrediction,The following statement contains a magic number: input.Delay /= 2;  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetStandardPrediction,The following statement contains a magic number: speed *= 2;  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pLength >= input.Delay * speed - input.RealRadius && input.Speed == float.MaxValue) {  	var tDistance = input.Delay * speed - input.RealRadius;  	for (var i = 0; i < path.Count - 1; i++) {  		var a = path [i];  		var b = path [i + 1];  		var d = a.Distance (b);  		if (d >= tDistance) {  			var direction = (b - a).Normalized ();  			var cp = a + direction * tDistance;  			var p = a + direction * ((i == path.Count - 2) ? Math.Min (tDistance + input.RealRadius' d) : (tDistance + input.RealRadius));  			return new PredictionOutput {  				Input = input'  				CastPosition = cp.To3D ()'  				UnitPosition = p.To3D ()'  				Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  			};  		}  		tDistance -= d;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: for (var i = 0; i < path.Count - 1; i++) {  	var a = path [i];  	var b = path [i + 1];  	var d = a.Distance (b);  	if (d >= tDistance) {  		var direction = (b - a).Normalized ();  		var cp = a + direction * tDistance;  		var p = a + direction * ((i == path.Count - 2) ? Math.Min (tDistance + input.RealRadius' d) : (tDistance + input.RealRadius));  		return new PredictionOutput {  			Input = input'  			CastPosition = cp.To3D ()'  			UnitPosition = p.To3D ()'  			Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  		};  	}  	tDistance -= d;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (d >= tDistance) {  	var direction = (b - a).Normalized ();  	var cp = a + direction * tDistance;  	var p = a + direction * ((i == path.Count - 2) ? Math.Min (tDistance + input.RealRadius' d) : (tDistance + input.RealRadius));  	return new PredictionOutput {  		Input = input'  		CastPosition = cp.To3D ()'  		UnitPosition = p.To3D ()'  		Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  	};  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pLength >= input.Delay * speed - input.RealRadius && input.Speed != float.MaxValue) {  	path = path.CutPath (Math.Max (0' input.Delay * speed - input.RealRadius));  	var tT = 0f;  	for (var i = 0; i < path.Count - 1; i++) {  		var a = path [i];  		var b = path [i + 1];  		var tB = a.Distance (b) / speed;  		var direction = (b - a).Normalized ();  		a = a - speed * tT * direction;  		var sol = Geometry.VectorMovementCollision (a' b' speed' input.From.To2D ()' input.Speed' tT);  		var t = (float)sol [0];  		var pos = (Vector2)sol [1];  		if (pos.IsValid () && t >= tT && t <= tT + tB) {  			var p = pos + input.RealRadius * direction;  			if (input.Type == SkillshotType.SkillshotLine) {  				var alpha = (input.From.To2D () - p).AngleBetween (a - b);  				if (alpha > 30 && alpha < 180 - 30) {  					var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  					var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  					var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  					pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  				}  			}  			return new PredictionOutput {  				Input = input'  				CastPosition = pos.To3D ()'  				UnitPosition = p.To3D ()'  				Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  			};  		}  		tT += tB;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pLength >= input.Delay * speed - input.RealRadius && input.Speed != float.MaxValue) {  	path = path.CutPath (Math.Max (0' input.Delay * speed - input.RealRadius));  	var tT = 0f;  	for (var i = 0; i < path.Count - 1; i++) {  		var a = path [i];  		var b = path [i + 1];  		var tB = a.Distance (b) / speed;  		var direction = (b - a).Normalized ();  		a = a - speed * tT * direction;  		var sol = Geometry.VectorMovementCollision (a' b' speed' input.From.To2D ()' input.Speed' tT);  		var t = (float)sol [0];  		var pos = (Vector2)sol [1];  		if (pos.IsValid () && t >= tT && t <= tT + tB) {  			var p = pos + input.RealRadius * direction;  			if (input.Type == SkillshotType.SkillshotLine) {  				var alpha = (input.From.To2D () - p).AngleBetween (a - b);  				if (alpha > 30 && alpha < 180 - 30) {  					var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  					var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  					var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  					pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  				}  			}  			return new PredictionOutput {  				Input = input'  				CastPosition = pos.To3D ()'  				UnitPosition = p.To3D ()'  				Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  			};  		}  		tT += tB;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pLength >= input.Delay * speed - input.RealRadius && input.Speed != float.MaxValue) {  	path = path.CutPath (Math.Max (0' input.Delay * speed - input.RealRadius));  	var tT = 0f;  	for (var i = 0; i < path.Count - 1; i++) {  		var a = path [i];  		var b = path [i + 1];  		var tB = a.Distance (b) / speed;  		var direction = (b - a).Normalized ();  		a = a - speed * tT * direction;  		var sol = Geometry.VectorMovementCollision (a' b' speed' input.From.To2D ()' input.Speed' tT);  		var t = (float)sol [0];  		var pos = (Vector2)sol [1];  		if (pos.IsValid () && t >= tT && t <= tT + tB) {  			var p = pos + input.RealRadius * direction;  			if (input.Type == SkillshotType.SkillshotLine) {  				var alpha = (input.From.To2D () - p).AngleBetween (a - b);  				if (alpha > 30 && alpha < 180 - 30) {  					var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  					var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  					var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  					pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  				}  			}  			return new PredictionOutput {  				Input = input'  				CastPosition = pos.To3D ()'  				UnitPosition = p.To3D ()'  				Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  			};  		}  		tT += tB;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: for (var i = 0; i < path.Count - 1; i++) {  	var a = path [i];  	var b = path [i + 1];  	var tB = a.Distance (b) / speed;  	var direction = (b - a).Normalized ();  	a = a - speed * tT * direction;  	var sol = Geometry.VectorMovementCollision (a' b' speed' input.From.To2D ()' input.Speed' tT);  	var t = (float)sol [0];  	var pos = (Vector2)sol [1];  	if (pos.IsValid () && t >= tT && t <= tT + tB) {  		var p = pos + input.RealRadius * direction;  		if (input.Type == SkillshotType.SkillshotLine) {  			var alpha = (input.From.To2D () - p).AngleBetween (a - b);  			if (alpha > 30 && alpha < 180 - 30) {  				var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  				var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  				var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  				pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  			}  		}  		return new PredictionOutput {  			Input = input'  			CastPosition = pos.To3D ()'  			UnitPosition = p.To3D ()'  			Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  		};  	}  	tT += tB;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: for (var i = 0; i < path.Count - 1; i++) {  	var a = path [i];  	var b = path [i + 1];  	var tB = a.Distance (b) / speed;  	var direction = (b - a).Normalized ();  	a = a - speed * tT * direction;  	var sol = Geometry.VectorMovementCollision (a' b' speed' input.From.To2D ()' input.Speed' tT);  	var t = (float)sol [0];  	var pos = (Vector2)sol [1];  	if (pos.IsValid () && t >= tT && t <= tT + tB) {  		var p = pos + input.RealRadius * direction;  		if (input.Type == SkillshotType.SkillshotLine) {  			var alpha = (input.From.To2D () - p).AngleBetween (a - b);  			if (alpha > 30 && alpha < 180 - 30) {  				var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  				var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  				var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  				pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  			}  		}  		return new PredictionOutput {  			Input = input'  			CastPosition = pos.To3D ()'  			UnitPosition = p.To3D ()'  			Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  		};  	}  	tT += tB;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: for (var i = 0; i < path.Count - 1; i++) {  	var a = path [i];  	var b = path [i + 1];  	var tB = a.Distance (b) / speed;  	var direction = (b - a).Normalized ();  	a = a - speed * tT * direction;  	var sol = Geometry.VectorMovementCollision (a' b' speed' input.From.To2D ()' input.Speed' tT);  	var t = (float)sol [0];  	var pos = (Vector2)sol [1];  	if (pos.IsValid () && t >= tT && t <= tT + tB) {  		var p = pos + input.RealRadius * direction;  		if (input.Type == SkillshotType.SkillshotLine) {  			var alpha = (input.From.To2D () - p).AngleBetween (a - b);  			if (alpha > 30 && alpha < 180 - 30) {  				var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  				var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  				var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  				pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  			}  		}  		return new PredictionOutput {  			Input = input'  			CastPosition = pos.To3D ()'  			UnitPosition = p.To3D ()'  			Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  		};  	}  	tT += tB;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pos.IsValid () && t >= tT && t <= tT + tB) {  	var p = pos + input.RealRadius * direction;  	if (input.Type == SkillshotType.SkillshotLine) {  		var alpha = (input.From.To2D () - p).AngleBetween (a - b);  		if (alpha > 30 && alpha < 180 - 30) {  			var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  			var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  			var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  			pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  		}  	}  	return new PredictionOutput {  		Input = input'  		CastPosition = pos.To3D ()'  		UnitPosition = p.To3D ()'  		Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  	};  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pos.IsValid () && t >= tT && t <= tT + tB) {  	var p = pos + input.RealRadius * direction;  	if (input.Type == SkillshotType.SkillshotLine) {  		var alpha = (input.From.To2D () - p).AngleBetween (a - b);  		if (alpha > 30 && alpha < 180 - 30) {  			var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  			var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  			var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  			pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  		}  	}  	return new PredictionOutput {  		Input = input'  		CastPosition = pos.To3D ()'  		UnitPosition = p.To3D ()'  		Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  	};  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (pos.IsValid () && t >= tT && t <= tT + tB) {  	var p = pos + input.RealRadius * direction;  	if (input.Type == SkillshotType.SkillshotLine) {  		var alpha = (input.From.To2D () - p).AngleBetween (a - b);  		if (alpha > 30 && alpha < 180 - 30) {  			var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  			var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  			var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  			pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  		}  	}  	return new PredictionOutput {  		Input = input'  		CastPosition = pos.To3D ()'  		UnitPosition = p.To3D ()'  		Hitchance = PathTracker.GetCurrentPath (input.Unit).Time < 0.1d ? HitChance.VeryHigh : HitChance.High'  	};  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (input.Type == SkillshotType.SkillshotLine) {  	var alpha = (input.From.To2D () - p).AngleBetween (a - b);  	if (alpha > 30 && alpha < 180 - 30) {  		var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  		var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  		var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  		pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (input.Type == SkillshotType.SkillshotLine) {  	var alpha = (input.From.To2D () - p).AngleBetween (a - b);  	if (alpha > 30 && alpha < 180 - 30) {  		var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  		var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  		var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  		pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (input.Type == SkillshotType.SkillshotLine) {  	var alpha = (input.From.To2D () - p).AngleBetween (a - b);  	if (alpha > 30 && alpha < 180 - 30) {  		var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  		var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  		var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  		pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  	}  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (alpha > 30 && alpha < 180 - 30) {  	var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  	var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  	var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  	pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (alpha > 30 && alpha < 180 - 30) {  	var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  	var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  	var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  	pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  }  
Magic Number,LeagueSharp.Common,Prediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPositionOnPath,The following statement contains a magic number: if (alpha > 30 && alpha < 180 - 30) {  	var beta = (float)Math.Asin (input.RealRadius / p.Distance (input.From));  	var cp1 = input.From.To2D () + (p - input.From.To2D ()).Rotated (beta);  	var cp2 = input.From.To2D () + (p - input.From.To2D ()).Rotated (-beta);  	pos = cp1.Distance (pos' true) < cp2.Distance (pos' true) ? cp1 : cp2;  }  
Magic Number,LeagueSharp.Common,AoePrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPosibleTargets,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (h => h.NetworkId != input.Unit.NetworkId && h.IsValidTarget ((input.Range + 200 + input.RealRadius)' true' input.RangeCheckFrom))) {  	input.Unit = enemy;  	var prediction = Prediction.GetPrediction (input' false' false);  	if (prediction.Hitchance >= HitChance.High) {  		result.Add (new PosibleTarget {  			Position = prediction.UnitPosition.To2D ()'  			Unit = enemy  		});  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var position in positions) {  	foreach (var objectType in input.CollisionObjects) {  		switch (objectType) {  		case CollisionableObjects.Minions:  			foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  				if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = minion;  					var minionPrediction = Prediction.GetPrediction (input' false' false);  					if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  						result.Add (minion);  					}  				}  			}  			break;  		case CollisionableObjects.Heroes:  			foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  				if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  					input.Unit = hero;  					var prediction = Prediction.GetPrediction (input' false' false);  					if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  						result.Add (hero);  					}  				}  			}  			break;  		case CollisionableObjects.Walls:  			var step = position.Distance (input.From) / 20;  			for (var i = 0; i < 20; i++) {  				var p = input.From.To2D ().Extend (position.To2D ()' step * i);  				if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		case CollisionableObjects.YasuoWall:  			if (Environment.TickCount - WallCastT > 4000)  				break;  			GameObject wall = null;  			foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  				if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  					wall = gameObject;  				}  			}  			if (wall == null) {  				break;  			}  			var level = wall.Name.Substring (wall.Name.Length - 6' 1);  			var wallWidth = (300 + 50 * Convert.ToInt32 (level));  			var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  			var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  			var wallEnd = wallStart - wallWidth * wallDirection;  			if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  				var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  				if (t < WallCastT + 4000) {  					result.Add (ObjectManager.Player);  				}  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var objectType in input.CollisionObjects) {  	switch (objectType) {  	case CollisionableObjects.Minions:  		foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  			if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = minion;  				var minionPrediction = Prediction.GetPrediction (input' false' false);  				if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  					result.Add (minion);  				}  			}  		}  		break;  	case CollisionableObjects.Heroes:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  				input.Unit = hero;  				var prediction = Prediction.GetPrediction (input' false' false);  				if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  					result.Add (hero);  				}  			}  		}  		break;  	case CollisionableObjects.Walls:  		var step = position.Distance (input.From) / 20;  		for (var i = 0; i < 20; i++) {  			var p = input.From.To2D ().Extend (position.To2D ()' step * i);  			if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	case CollisionableObjects.YasuoWall:  		if (Environment.TickCount - WallCastT > 4000)  			break;  		GameObject wall = null;  		foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  			if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  				wall = gameObject;  			}  		}  		if (wall == null) {  			break;  		}  		var level = wall.Name.Substring (wall.Name.Length - 6' 1);  		var wallWidth = (300 + 50 * Convert.ToInt32 (level));  		var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  		var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  		var wallEnd = wallStart - wallWidth * wallDirection;  		if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  			var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  			if (t < WallCastT + 4000) {  				result.Add (ObjectManager.Player);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  	if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = minion;  		var minionPrediction = Prediction.GetPrediction (input' false' false);  		if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  			result.Add (minion);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  	if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = minion;  		var minionPrediction = Prediction.GetPrediction (input' false' false);  		if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  			result.Add (minion);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  	if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = minion;  		var minionPrediction = Prediction.GetPrediction (input' false' false);  		if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  			result.Add (minion);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  	if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = minion;  		var minionPrediction = Prediction.GetPrediction (input' false' false);  		if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  			result.Add (minion);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = minion;  	var minionPrediction = Prediction.GetPrediction (input' false' false);  	if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  		result.Add (minion);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = minion;  	var minionPrediction = Prediction.GetPrediction (input' false' false);  	if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  		result.Add (minion);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = minion;  	var minionPrediction = Prediction.GetPrediction (input' false' false);  	if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  		result.Add (minion);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = minion;  	var minionPrediction = Prediction.GetPrediction (input' false' false);  	if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  		result.Add (minion);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  	result.Add (minion);  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  	result.Add (minion);  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = hero;  		var prediction = Prediction.GetPrediction (input' false' false);  		if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  			result.Add (hero);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = hero;  		var prediction = Prediction.GetPrediction (input' false' false);  		if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  			result.Add (hero);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = hero;  		var prediction = Prediction.GetPrediction (input' false' false);  		if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  			result.Add (hero);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  		input.Unit = hero;  		var prediction = Prediction.GetPrediction (input' false' false);  		if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  			result.Add (hero);  		}  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = hero;  	var prediction = Prediction.GetPrediction (input' false' false);  	if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  		result.Add (hero);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = hero;  	var prediction = Prediction.GetPrediction (input' false' false);  	if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  		result.Add (hero);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = hero;  	var prediction = Prediction.GetPrediction (input' false' false);  	if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  		result.Add (hero);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  	input.Unit = hero;  	var prediction = Prediction.GetPrediction (input' false' false);  	if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  		result.Add (hero);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  	result.Add (hero);  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  	result.Add (hero);  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: for (var i = 0; i < 20; i++) {  	var p = input.From.To2D ().Extend (position.To2D ()' step * i);  	if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  		result.Add (ObjectManager.Player);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (Environment.TickCount - WallCastT > 4000)  	break;  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  	var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  	if (t < WallCastT + 4000) {  		result.Add (ObjectManager.Player);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  	var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  	if (t < WallCastT + 4000) {  		result.Add (ObjectManager.Player);  	}  }  
Magic Number,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following statement contains a magic number: if (t < WallCastT + 4000) {  	result.Add (ObjectManager.Player);  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,RadianToDegree,The following statement contains a magic number: return (float)(angle * (180.0 / Math.PI));  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,DegreeToRadian,The following statement contains a magic number: return (float)(Math.PI * angle / 180.0);  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: if (Close (v1.X' 0' 0)) {  	if (v1.Y > 0) {  		return 90;  	}  	if (v1.Y < 0) {  		return 270;  	}  	return 0;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: if (Close (v1.X' 0' 0)) {  	if (v1.Y > 0) {  		return 90;  	}  	if (v1.Y < 0) {  		return 270;  	}  	return 0;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: if (v1.Y > 0) {  	return 90;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: return 90;  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: if (v1.Y < 0) {  	return 270;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: return 270;  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: if (v1.X < 0) {  	theta = theta + 180;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: theta = theta + 180;  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: if (theta < 0) {  	theta = theta + 360;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Polar,The following statement contains a magic number: theta = theta + 360;  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,AngleBetween,The following statement contains a magic number: if (theta < 0) {  	theta = theta + 360;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,AngleBetween,The following statement contains a magic number: theta = theta + 360;  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,AngleBetween,The following statement contains a magic number: if (theta > 180) {  	theta = 360 - theta;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,AngleBetween,The following statement contains a magic number: if (theta > 180) {  	theta = 360 - theta;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,AngleBetween,The following statement contains a magic number: theta = 360 - theta;  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The following statement contains a magic number: if (dist > 0f) {  	if (v1 == float.MaxValue) {  		var t = dist / v1;  		t1 = v2 * t >= 0f ? t : float.NaN;  	}  	else if (v2 == float.MaxValue) {  		t1 = 0f;  	}  	else {  		float a = S * S + K * K - v2 * v2' b = -r * S - j * K;  		if (a == 0f) {  			if (b == 0f) {  				t1 = (c == 0f) ? 0f : float.NaN;  			}  			else {  				var t = -c / (2 * b);  				t1 = (v2 * t >= 0f) ? t : float.NaN;  			}  		}  		else {  			var sqr = b * b - a * c;  			if (sqr >= 0) {  				var nom = (float)Math.Sqrt (sqr);  				var t = (-nom - b) / a;  				t1 = v2 * t >= 0f ? t : float.NaN;  				t = (nom - b) / a;  				t2 = (v2 * t >= 0f) ? t : float.NaN;  				if (!float.IsNaN (t2) && !float.IsNaN (t1)) {  					if (t1 >= delay && t2 >= delay)  						t1 = Math.Min (t1' t2);  					else if (t2 >= delay)  						t1 = t2;  				}  			}  		}  	}  }  else if (dist == 0f) {  	t1 = 0f;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The following statement contains a magic number: if (v1 == float.MaxValue) {  	var t = dist / v1;  	t1 = v2 * t >= 0f ? t : float.NaN;  }  else if (v2 == float.MaxValue) {  	t1 = 0f;  }  else {  	float a = S * S + K * K - v2 * v2' b = -r * S - j * K;  	if (a == 0f) {  		if (b == 0f) {  			t1 = (c == 0f) ? 0f : float.NaN;  		}  		else {  			var t = -c / (2 * b);  			t1 = (v2 * t >= 0f) ? t : float.NaN;  		}  	}  	else {  		var sqr = b * b - a * c;  		if (sqr >= 0) {  			var nom = (float)Math.Sqrt (sqr);  			var t = (-nom - b) / a;  			t1 = v2 * t >= 0f ? t : float.NaN;  			t = (nom - b) / a;  			t2 = (v2 * t >= 0f) ? t : float.NaN;  			if (!float.IsNaN (t2) && !float.IsNaN (t1)) {  				if (t1 >= delay && t2 >= delay)  					t1 = Math.Min (t1' t2);  				else if (t2 >= delay)  					t1 = t2;  			}  		}  	}  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The following statement contains a magic number: if (v2 == float.MaxValue) {  	t1 = 0f;  }  else {  	float a = S * S + K * K - v2 * v2' b = -r * S - j * K;  	if (a == 0f) {  		if (b == 0f) {  			t1 = (c == 0f) ? 0f : float.NaN;  		}  		else {  			var t = -c / (2 * b);  			t1 = (v2 * t >= 0f) ? t : float.NaN;  		}  	}  	else {  		var sqr = b * b - a * c;  		if (sqr >= 0) {  			var nom = (float)Math.Sqrt (sqr);  			var t = (-nom - b) / a;  			t1 = v2 * t >= 0f ? t : float.NaN;  			t = (nom - b) / a;  			t2 = (v2 * t >= 0f) ? t : float.NaN;  			if (!float.IsNaN (t2) && !float.IsNaN (t1)) {  				if (t1 >= delay && t2 >= delay)  					t1 = Math.Min (t1' t2);  				else if (t2 >= delay)  					t1 = t2;  			}  		}  	}  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The following statement contains a magic number: if (a == 0f) {  	if (b == 0f) {  		t1 = (c == 0f) ? 0f : float.NaN;  	}  	else {  		var t = -c / (2 * b);  		t1 = (v2 * t >= 0f) ? t : float.NaN;  	}  }  else {  	var sqr = b * b - a * c;  	if (sqr >= 0) {  		var nom = (float)Math.Sqrt (sqr);  		var t = (-nom - b) / a;  		t1 = v2 * t >= 0f ? t : float.NaN;  		t = (nom - b) / a;  		t2 = (v2 * t >= 0f) ? t : float.NaN;  		if (!float.IsNaN (t2) && !float.IsNaN (t1)) {  			if (t1 >= delay && t2 >= delay)  				t1 = Math.Min (t1' t2);  			else if (t2 >= delay)  				t1 = t2;  		}  	}  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The following statement contains a magic number: if (b == 0f) {  	t1 = (c == 0f) ? 0f : float.NaN;  }  else {  	var t = -c / (2 * b);  	t1 = (v2 * t >= 0f) ? t : float.NaN;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,VectorMovementCollision,The following statement contains a magic number: return new Object[2] {  	t1'  	(!float.IsNaN (t1)) ? new Vector2 (sP1x + S * t1' sP1y + K * t1) : new Vector2 ()  };  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Close,The following statement contains a magic number: if (eps == 0) {  	eps = (float)1e-9;  }  
Magic Number,LeagueSharp.Common,Geometry,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Geometry.cs,Close,The following statement contains a magic number: eps = (float)1e-9;  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,MakeConvexHull,The following statement contains a magic number: for (; ;) {  	// If all of the points are on the hull' we're done.  	if (points.Count == 0) {  		break;  	}  	// Find the point with smallest AngleValue  	// from the last point.  	var X = hull [hull.Count - 1].X;  	var Y = hull [hull.Count - 1].Y;  	best_pt = points [0];  	float best_angle = 3600;  	// Search the rest of the points.  	foreach (var pt in points) {  		var test_angle = AngleValue (X' Y' pt.X' pt.Y);  		if ((test_angle >= sweep_angle) && (best_angle > test_angle)) {  			best_angle = test_angle;  			best_pt = pt;  		}  	}  	// See if the first point is better.  	// If so' we are done.  	var first_angle = AngleValue (X' Y' hull [0].X' hull [0].Y);  	if ((first_angle >= sweep_angle) && (best_angle >= first_angle)) {  		// The first point is better. We're done.  		break;  	}  	// Add the best point to the convex hull.  	hull.Add (best_pt);  	points.Remove (best_pt);  	sweep_angle = best_angle;  }  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,AngleValue,The following statement contains a magic number: if (dx < 0) {  	t = 2 - t;  }  else if (dy < 0) {  	t = 4 + t;  }  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,AngleValue,The following statement contains a magic number: if (dx < 0) {  	t = 2 - t;  }  else if (dy < 0) {  	t = 4 + t;  }  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,AngleValue,The following statement contains a magic number: t = 2 - t;  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,AngleValue,The following statement contains a magic number: if (dy < 0) {  	t = 4 + t;  }  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,AngleValue,The following statement contains a magic number: t = 4 + t;  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,AngleValue,The following statement contains a magic number: return t * 90;  
Magic Number,LeagueSharp.Common,MEC,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MEC.cs,FindMinimalBoundingCircle,The following statement contains a magic number: for (var i = 0; i < hull.Count - 2; i++) {  	for (var j = i + 1; j < hull.Count - 1; j++) {  		for (var k = j + 1; k < hull.Count; k++) {  			// Find the circle through these three points.  			Vector2 test_center;  			float test_radius2;  			FindCircle (hull [i]' hull [j]' hull [k]' out test_center' out test_radius2);  			// See if this circle would be an improvement.  			if (test_radius2 < best_radius2) {  				// See if this circle encloses all of the points.  				if (CircleEnclosesPoints (test_center' test_radius2' points' i' j' k)) {  					// Save this solution.  					best_center = test_center;  					best_radius2 = test_radius2;  				}  			}  		}  		// for k  	}  	// for i  }  
Magic Number,LeagueSharp.Common,Render,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Render.cs,Drawing_OnDraw,The following statement contains a magic number: for (var i = -5; i < 5; i++) {  	foreach (var renderObject in RenderObjects.Where (renderObject => renderObject.Layer == i && renderObject.Visible)) {  		renderObject.OnDraw ();  	}  }  
Magic Number,LeagueSharp.Common,Render,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Render.cs,Drawing_OnDraw,The following statement contains a magic number: for (var i = -5; i < 5; i++) {  	foreach (var renderObject in RenderObjects.Where (renderObject => renderObject.Layer == i && renderObject.Visible)) {  		renderObject.OnDraw ();  	}  }  
Magic Number,LeagueSharp.Common,Render,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Render.cs,Drawing_OnEndScene,The following statement contains a magic number: for (var i = -5; i < 5; i++) {  	foreach (var renderObject in RenderObjects.Where (renderObject => renderObject.Layer == i && renderObject.Visible)) {  		renderObject.OnEndScene ();  	}  }  
Magic Number,LeagueSharp.Common,Render,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Render.cs,Drawing_OnEndScene,The following statement contains a magic number: for (var i = -5; i < 5; i++) {  	foreach (var renderObject in RenderObjects.Where (renderObject => renderObject.Layer == i && renderObject.Visible)) {  		renderObject.OnEndScene ();  	}  }  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,SetCharged,The following statement contains a magic number: ChargeDuration = (int)(deltaT * 1000);  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,StartCharging,The following statement contains a magic number: if (!IsCharging && Environment.TickCount - _chargedReqSentT > 400 + Game.Ping) {  	ObjectManager.Player.Spellbook.CastSpell (Slot);  	_chargedReqSentT = Environment.TickCount;  }  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,StartCharging,The following statement contains a magic number: if (!IsCharging && Environment.TickCount - _chargedReqSentT > 400 + Game.Ping) {  	ObjectManager.Player.Spellbook.CastSpell (Slot' position);  	_chargedReqSentT = Environment.TickCount;  }  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,Game_OnGameSendPacket,The following statement contains a magic number: if (args.PacketData [0] == Packet.C2S.ChargedCast.Header && Environment.TickCount - _chargedReqSentT < 3000) {  	var decoded = Packet.C2S.ChargedCast.Decoded (args.PacketData);  	if (decoded.SourceNetworkId != ObjectManager.Player.NetworkId) {  		return;  	}  	Console.WriteLine ((byte)decoded.Slot);  	args.Process = false;  }  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,Game_OnGameSendPacket,The following statement contains a magic number: if (args.PacketData [0] == Packet.C2S.Cast.Header) {  	var decoded = Packet.C2S.Cast.Decoded (args.PacketData);  	if (decoded.Slot != Slot) {  		return;  	}  	if ((Environment.TickCount - _chargedReqSentT > 500)) {  		if (IsCharging) {  			Cast (new Vector2 (decoded.ToX' decoded.ToY));  		}  	}  }  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,Game_OnGameSendPacket,The following statement contains a magic number: if ((Environment.TickCount - _chargedReqSentT > 500)) {  	if (IsCharging) {  		Cast (new Vector2 (decoded.ToX' decoded.ToY));  	}  }  
Magic Number,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,WillHit,The following statement contains a magic number: switch (Type) {  case SkillshotType.SkillshotCircle:  	if (point.To2D ().Distance (castPosition) < Width) {  		return true;  	}  	break;  case SkillshotType.SkillshotLine:  	if (point.To2D ().Distance (castPosition.To2D ()' From.To2D ()' true) < Width + extraWidth) {  		return true;  	}  	break;  case SkillshotType.SkillshotCone:  	var edge1 = (castPosition.To2D () - From.To2D ()).Rotated (-Width / 2);  	var edge2 = edge1.Rotated (Width);  	var v = point.To2D () - From.To2D ();  	if (point.To2D ().Distance (From) < Range && edge1.CrossProduct (v) > 0 && v.CrossProduct (edge2) > 0) {  		return true;  	}  	break;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: if (args.WParam == 1)// LMouse   {  	switch (args.Msg) {  	case 257:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  				Target = hero;  				_maintarget = hero;  				Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: if (args.WParam == 1)// LMouse   {  	switch (args.Msg) {  	case 257:  		foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  			if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  				Target = hero;  				_maintarget = hero;  				Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  			}  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: switch (args.Msg) {  case 257:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  			Target = hero;  			_maintarget = hero;  			Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: switch (args.Msg) {  case 257:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  			Target = hero;  			_maintarget = hero;  			Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  		}  	}  	break;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  		Target = hero;  		_maintarget = hero;  		Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  	}  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  	Target = hero;  	_maintarget = hero;  	Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The following statement contains a magic number: if (!ObjectManager.Player.IsDead && _drawcircle && Target != null && Target.IsVisible && !Target.IsDead) {  	Drawing.DrawCircle (Target.Position' 125' System.Drawing.Color.White);  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The following statement contains a magic number: Drawing.DrawCircle (Target.Position' 125' System.Drawing.Color.White);  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnGameUpdate,The following statement contains a magic number: if (Environment.TickCount > _lasttick + 100) {  	_lasttick = Environment.TickCount;  	if (!_update) {  		return;  	}  	if (_maintarget == null) {  		GetNormalTarget ();  	}  	else {  		if (Geometry.Distance (_maintarget) > _range) {  			GetNormalTarget ();  		}  		else {  			if (_maintarget.IsValidTarget ()) {  				Target = _maintarget;  			}  			else {  				GetNormalTarget ();  			}  		}  	}  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The following statement contains a magic number: if (_mode != TargetingMode.AutoPriority) {  	foreach (var target in ObjectManager.Get<Obj_AI_Hero> ().Where (target => target.IsValidTarget () && Geometry.Distance (target) <= _range)) {  		if (newtarget == null) {  			newtarget = target;  		}  		else {  			switch (_mode) {  			case TargetingMode.LowHP:  				if (target.Health < newtarget.Health) {  					newtarget = target;  				}  				break;  			case TargetingMode.MostAD:  				if (target.BaseAttackDamage + target.FlatPhysicalDamageMod < newtarget.BaseAttackDamage + newtarget.FlatPhysicalDamageMod) {  					newtarget = target;  				}  				break;  			case TargetingMode.MostAP:  				if (target.FlatMagicDamageMod < newtarget.FlatMagicDamageMod) {  					newtarget = target;  				}  				break;  			case TargetingMode.Closest:  				if (Geometry.Distance (target) < Geometry.Distance (newtarget)) {  					newtarget = target;  				}  				break;  			case TargetingMode.NearMouse:  				if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) {  					newtarget = target;  				}  				break;  			case TargetingMode.LessAttack:  				if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Physical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Physical' newtarget.Health)))) {  					newtarget = target;  				}  				break;  			case TargetingMode.LessCast:  				if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Magical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Magical' newtarget.Health)))) {  					newtarget = target;  				}  				break;  			}  		}  	}  }  else {  	newtarget = AutoPriority ();  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero> ().Where (target => target.IsValidTarget () && Geometry.Distance (target) <= _range)) {  	if (newtarget == null) {  		newtarget = target;  	}  	else {  		switch (_mode) {  		case TargetingMode.LowHP:  			if (target.Health < newtarget.Health) {  				newtarget = target;  			}  			break;  		case TargetingMode.MostAD:  			if (target.BaseAttackDamage + target.FlatPhysicalDamageMod < newtarget.BaseAttackDamage + newtarget.FlatPhysicalDamageMod) {  				newtarget = target;  			}  			break;  		case TargetingMode.MostAP:  			if (target.FlatMagicDamageMod < newtarget.FlatMagicDamageMod) {  				newtarget = target;  			}  			break;  		case TargetingMode.Closest:  			if (Geometry.Distance (target) < Geometry.Distance (newtarget)) {  				newtarget = target;  			}  			break;  		case TargetingMode.NearMouse:  			if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) {  				newtarget = target;  			}  			break;  		case TargetingMode.LessAttack:  			if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Physical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Physical' newtarget.Health)))) {  				newtarget = target;  			}  			break;  		case TargetingMode.LessCast:  			if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Magical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Magical' newtarget.Health)))) {  				newtarget = target;  			}  			break;  		}  	}  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The following statement contains a magic number: if (newtarget == null) {  	newtarget = target;  }  else {  	switch (_mode) {  	case TargetingMode.LowHP:  		if (target.Health < newtarget.Health) {  			newtarget = target;  		}  		break;  	case TargetingMode.MostAD:  		if (target.BaseAttackDamage + target.FlatPhysicalDamageMod < newtarget.BaseAttackDamage + newtarget.FlatPhysicalDamageMod) {  			newtarget = target;  		}  		break;  	case TargetingMode.MostAP:  		if (target.FlatMagicDamageMod < newtarget.FlatMagicDamageMod) {  			newtarget = target;  		}  		break;  	case TargetingMode.Closest:  		if (Geometry.Distance (target) < Geometry.Distance (newtarget)) {  			newtarget = target;  		}  		break;  	case TargetingMode.NearMouse:  		if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) {  			newtarget = target;  		}  		break;  	case TargetingMode.LessAttack:  		if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Physical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Physical' newtarget.Health)))) {  			newtarget = target;  		}  		break;  	case TargetingMode.LessCast:  		if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Magical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Magical' newtarget.Health)))) {  			newtarget = target;  		}  		break;  	}  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The following statement contains a magic number: switch (_mode) {  case TargetingMode.LowHP:  	if (target.Health < newtarget.Health) {  		newtarget = target;  	}  	break;  case TargetingMode.MostAD:  	if (target.BaseAttackDamage + target.FlatPhysicalDamageMod < newtarget.BaseAttackDamage + newtarget.FlatPhysicalDamageMod) {  		newtarget = target;  	}  	break;  case TargetingMode.MostAP:  	if (target.FlatMagicDamageMod < newtarget.FlatMagicDamageMod) {  		newtarget = target;  	}  	break;  case TargetingMode.Closest:  	if (Geometry.Distance (target) < Geometry.Distance (newtarget)) {  		newtarget = target;  	}  	break;  case TargetingMode.NearMouse:  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) {  		newtarget = target;  	}  	break;  case TargetingMode.LessAttack:  	if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Physical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Physical' newtarget.Health)))) {  		newtarget = target;  	}  	break;  case TargetingMode.LessCast:  	if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Magical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Magical' newtarget.Health)))) {  		newtarget = target;  	}  	break;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The following statement contains a magic number: if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) {  	newtarget = target;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: if (ap.Contains (ChampionName)) {  	return 2;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: return 2;  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: if (sup.Contains (ChampionName)) {  	return 3;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: return 3;  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: if (bruiser.Contains (ChampionName)) {  	return 4;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: return 4;  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: if (tank.Contains (ChampionName)) {  	return 5;  }  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: return 5;  
Magic Number,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,FindPrioForTarget,The following statement contains a magic number: return 5;  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The following statement contains a magic number: if (_selectedTarget.IsValidTarget () && _config != null && _config.Item ("FocusSelected").GetValue<bool> () && _config.Item ("SelTColor").GetValue<Circle> ().Active) {  	Render.Circle.DrawCircle (_selectedTarget.Position' 150' _config.Item ("SelTColor").GetValue<Circle> ().Color' 7' true);  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The following statement contains a magic number: if (_selectedTarget.IsValidTarget () && _config != null && _config.Item ("FocusSelected").GetValue<bool> () && _config.Item ("SelTColor").GetValue<Circle> ().Active) {  	Render.Circle.DrawCircle (_selectedTarget.Position' 150' _config.Item ("SelTColor").GetValue<Circle> ().Color' 7' true);  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The following statement contains a magic number: Render.Circle.DrawCircle (_selectedTarget.Position' 150' _config.Item ("SelTColor").GetValue<Circle> ().Color' 7' true);  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Drawing_OnDraw,The following statement contains a magic number: Render.Circle.DrawCircle (_selectedTarget.Position' 150' _config.Item ("SelTColor").GetValue<Circle> ().Color' 7' true);  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (hero => hero.IsValidTarget ()).OrderByDescending (h => h.Distance (Game.CursorPos)).Where (enemy => enemy.Distance (Game.CursorPos) < 200)) {  	_selectedTarget = enemy;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,SetPriority,The following statement contains a magic number: p.Value = Math.Max (1' Math.Min (5' newPriority));  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriority,The following statement contains a magic number: switch (p) {  case 2:  	return 1.5f;  case 3:  	return 1.75f;  case 4:  	return 2f;  case 5:  	return 2.5f;  default:  	return 1f;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriority,The following statement contains a magic number: switch (p) {  case 2:  	return 1.5f;  case 3:  	return 1.75f;  case 4:  	return 2f;  case 5:  	return 2.5f;  default:  	return 1f;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriority,The following statement contains a magic number: switch (p) {  case 2:  	return 1.5f;  case 3:  	return 1.75f;  case 4:  	return 2f;  case 5:  	return 2.5f;  default:  	return 1f;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriority,The following statement contains a magic number: switch (p) {  case 2:  	return 1.5f;  case 3:  	return 1.75f;  case 4:  	return 2f;  case 5:  	return 2.5f;  default:  	return 1f;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriorityFromDb,The following statement contains a magic number: if (p2.Contains (championName)) {  	return 2;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriorityFromDb,The following statement contains a magic number: return 2;  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriorityFromDb,The following statement contains a magic number: if (p3.Contains (championName)) {  	return 3;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriorityFromDb,The following statement contains a magic number: return 3;  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetPriorityFromDb,The following statement contains a magic number: return p4.Contains (championName) ? 4 : 1;  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AddToMenu,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (hero => hero.Team != ObjectManager.Player.Team)) {  	Config.AddItem (new MenuItem ("SimpleTS" + enemy.ChampionName + "Priority"' enemy.ChampionName).SetShared ().SetValue (new Slider (autoPriorityItem.GetValue<bool> () ? GetPriorityFromDb (enemy.ChampionName) : 1' 5' 1)));  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AddToMenu,The following statement contains a magic number: Config.AddItem (new MenuItem ("SimpleTS" + enemy.ChampionName + "Priority"' enemy.ChampionName).SetShared ().SetValue (new Slider (autoPriorityItem.GetValue<bool> () ? GetPriorityFromDb (enemy.ChampionName) : 1' 5' 1)));  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,AddToMenu,The following statement contains a magic number: Config.AddItem (new MenuItem ("TargetingMode"' "Target Mode").SetShared ().SetValue<StringList> (new StringList (new[] {  	"Low HP"'  	"Most AD"'  	"Most AP"'  	"Closest"'  	"Near Mouse"'  	"Priority"'  	"Less Attack"'  	"Less Cast"  }' 5)));  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,autoPriorityItem_ValueChanged,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero> ().Where (hero => hero.Team != ObjectManager.Player.Team)) {  	_config.Item ("SimpleTS" + enemy.ChampionName + "Priority").SetValue (new Slider (GetPriorityFromDb (enemy.ChampionName)' 5' 1));  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,autoPriorityItem_ValueChanged,The following statement contains a magic number: _config.Item ("SimpleTS" + enemy.ChampionName + "Priority").SetValue (new Slider (GetPriorityFromDb (enemy.ChampionName)' 5' 1));  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (!hero.IsValidTarget () || IsInvulnerable (hero) || ((!(range < 0) || !Orbwalking.InAutoAttackRange (hero)) && !(champion.Distance (hero) < range))) {  		continue;  	}  	if (bestTarget == null) {  		bestTarget = hero;  		continue;  	}  	switch (targetingMode) {  	case (int)TargetSelector.TargetingMode.LowHP: {  		if (hero.Health < bestTarget.Health) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAD: {  		if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAP: {  		if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.Closest: {  		if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.NearMouse: {  		if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.AutoPriority: {  		var damage = 0f;  		switch (damageType) {  		case DamageType.Magical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  			break;  		case DamageType.Physical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  			break;  		case DamageType.True:  			damage = 100;  			break;  		}  		var ratio = damage / (1 + hero.Health) * GetPriority (hero);  		if (ratio > bestRatio) {  			bestRatio = ratio;  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessAttack: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessCast: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	}  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (!hero.IsValidTarget () || IsInvulnerable (hero) || ((!(range < 0) || !Orbwalking.InAutoAttackRange (hero)) && !(champion.Distance (hero) < range))) {  		continue;  	}  	if (bestTarget == null) {  		bestTarget = hero;  		continue;  	}  	switch (targetingMode) {  	case (int)TargetSelector.TargetingMode.LowHP: {  		if (hero.Health < bestTarget.Health) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAD: {  		if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAP: {  		if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.Closest: {  		if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.NearMouse: {  		if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.AutoPriority: {  		var damage = 0f;  		switch (damageType) {  		case DamageType.Magical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  			break;  		case DamageType.Physical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  			break;  		case DamageType.True:  			damage = 100;  			break;  		}  		var ratio = damage / (1 + hero.Health) * GetPriority (hero);  		if (ratio > bestRatio) {  			bestRatio = ratio;  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessAttack: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessCast: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	}  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (!hero.IsValidTarget () || IsInvulnerable (hero) || ((!(range < 0) || !Orbwalking.InAutoAttackRange (hero)) && !(champion.Distance (hero) < range))) {  		continue;  	}  	if (bestTarget == null) {  		bestTarget = hero;  		continue;  	}  	switch (targetingMode) {  	case (int)TargetSelector.TargetingMode.LowHP: {  		if (hero.Health < bestTarget.Health) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAD: {  		if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAP: {  		if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.Closest: {  		if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.NearMouse: {  		if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.AutoPriority: {  		var damage = 0f;  		switch (damageType) {  		case DamageType.Magical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  			break;  		case DamageType.Physical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  			break;  		case DamageType.True:  			damage = 100;  			break;  		}  		var ratio = damage / (1 + hero.Health) * GetPriority (hero);  		if (ratio > bestRatio) {  			bestRatio = ratio;  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessAttack: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessCast: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	}  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  	if (!hero.IsValidTarget () || IsInvulnerable (hero) || ((!(range < 0) || !Orbwalking.InAutoAttackRange (hero)) && !(champion.Distance (hero) < range))) {  		continue;  	}  	if (bestTarget == null) {  		bestTarget = hero;  		continue;  	}  	switch (targetingMode) {  	case (int)TargetSelector.TargetingMode.LowHP: {  		if (hero.Health < bestTarget.Health) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAD: {  		if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.MostAP: {  		if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.Closest: {  		if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.NearMouse: {  		if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.AutoPriority: {  		var damage = 0f;  		switch (damageType) {  		case DamageType.Magical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  			break;  		case DamageType.Physical:  			damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  			break;  		case DamageType.True:  			damage = 100;  			break;  		}  		var ratio = damage / (1 + hero.Health) * GetPriority (hero);  		if (ratio > bestRatio) {  			bestRatio = ratio;  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessAttack: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	case (int)TargetSelector.TargetingMode.LessCast: {  		if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  			bestTarget = hero;  		}  		break;  	}  	}  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (targetingMode) {  case (int)TargetSelector.TargetingMode.LowHP: {  	if (hero.Health < bestTarget.Health) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAD: {  	if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAP: {  	if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.Closest: {  	if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.NearMouse: {  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.AutoPriority: {  	var damage = 0f;  	switch (damageType) {  	case DamageType.Magical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  		break;  	case DamageType.Physical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  		break;  	case DamageType.True:  		damage = 100;  		break;  	}  	var ratio = damage / (1 + hero.Health) * GetPriority (hero);  	if (ratio > bestRatio) {  		bestRatio = ratio;  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessAttack: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessCast: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (targetingMode) {  case (int)TargetSelector.TargetingMode.LowHP: {  	if (hero.Health < bestTarget.Health) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAD: {  	if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAP: {  	if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.Closest: {  	if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.NearMouse: {  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.AutoPriority: {  	var damage = 0f;  	switch (damageType) {  	case DamageType.Magical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  		break;  	case DamageType.Physical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  		break;  	case DamageType.True:  		damage = 100;  		break;  	}  	var ratio = damage / (1 + hero.Health) * GetPriority (hero);  	if (ratio > bestRatio) {  		bestRatio = ratio;  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessAttack: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessCast: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (targetingMode) {  case (int)TargetSelector.TargetingMode.LowHP: {  	if (hero.Health < bestTarget.Health) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAD: {  	if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAP: {  	if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.Closest: {  	if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.NearMouse: {  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.AutoPriority: {  	var damage = 0f;  	switch (damageType) {  	case DamageType.Magical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  		break;  	case DamageType.Physical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  		break;  	case DamageType.True:  		damage = 100;  		break;  	}  	var ratio = damage / (1 + hero.Health) * GetPriority (hero);  	if (ratio > bestRatio) {  		bestRatio = ratio;  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessAttack: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessCast: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (targetingMode) {  case (int)TargetSelector.TargetingMode.LowHP: {  	if (hero.Health < bestTarget.Health) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAD: {  	if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAP: {  	if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.Closest: {  	if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.NearMouse: {  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.AutoPriority: {  	var damage = 0f;  	switch (damageType) {  	case DamageType.Magical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  		break;  	case DamageType.Physical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  		break;  	case DamageType.True:  		damage = 100;  		break;  	}  	var ratio = damage / (1 + hero.Health) * GetPriority (hero);  	if (ratio > bestRatio) {  		bestRatio = ratio;  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessAttack: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessCast: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  	bestTarget = hero;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (damageType) {  case DamageType.Magical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  	break;  case DamageType.Physical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  	break;  case DamageType.True:  	damage = 100;  	break;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (damageType) {  case DamageType.Magical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  	break;  case DamageType.Physical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  	break;  case DamageType.True:  	damage = 100;  	break;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: switch (damageType) {  case DamageType.Magical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  	break;  case DamageType.Physical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  	break;  case DamageType.True:  	damage = 100;  	break;  }  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  
Magic Number,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following statement contains a magic number: damage = 100;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,HealthPercentage,The following statement contains a magic number: return unit.Health / unit.MaxHealth * 100;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,ManaPercentage,The following statement contains a magic number: return unit.Mana / unit.MaxMana * 100;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: duration = 8000;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: duration = 7000;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: duration = 4500;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: duration = 4000;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: duration = 4000;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following statement contains a magic number: duration = 4000;  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,UnderTurret,The following statement contains a magic number: return ObjectManager.Get<Obj_AI_Turret> ().Any (turret => turret.IsValidTarget (950' enemyTurretsOnly' position));  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,InShopRange,The following statement contains a magic number: return ObjectManager.Get<Obj_Shop> ().Where (shop => shop.IsAlly).Any (shop => Vector2.Distance (ObjectManager.Player.Position.To2D ()' shop.Position.To2D ()) < 1250);  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,DrawCircle,The following statement contains a magic number: for (var i = 0; i < quality; i++) {  	var angle = i * Math.PI * 2 / quality;  	pointList.Add (new Vector3 (center.X + radius * (float)Math.Cos (angle)' center.Y + radius * (float)Math.Sin (angle)' center.Z));  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,InFountain,The following statement contains a magic number: if (map != null && map._MapType == Map.MapType.SummonersRift) {  	fountainRange = 1050;  }  
Magic Number,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,InFountain,The following statement contains a magic number: fountainRange = 1050;  
Magic Number,LeagueSharp.Common,Version,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,Version,The following statement contains a magic number: Build = Convert.ToInt32 (d [2]);  
Magic Number,LeagueSharp.Common,Version,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,Version,The following statement contains a magic number: Revision = Convert.ToInt32 (d [3]);  
Magic Number,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestLineFarmLocation,The following statement contains a magic number: for (var i = 0; i < max; i++) {  	for (var j = 0; j < max; j++) {  		if (minionPositions [j] != minionPositions [i]) {  			minionPositions.Add ((minionPositions [j] + minionPositions [i]) / 2);  		}  	}  }  
Magic Number,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestLineFarmLocation,The following statement contains a magic number: for (var j = 0; j < max; j++) {  	if (minionPositions [j] != minionPositions [i]) {  		minionPositions.Add ((minionPositions [j] + minionPositions [i]) / 2);  	}  }  
Magic Number,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestLineFarmLocation,The following statement contains a magic number: if (minionPositions [j] != minionPositions [i]) {  	minionPositions.Add ((minionPositions [j] + minionPositions [i]) / 2);  }  
Magic Number,LeagueSharp.Common,MinionManager,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\MinionManager.cs,GetBestLineFarmLocation,The following statement contains a magic number: minionPositions.Add ((minionPositions [j] + minionPositions [i]) / 2);  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: if (vKey >= 65 && vKey <= 90) {  	return ("" + (char)vKey);  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: if (vKey >= 65 && vKey <= 90) {  	return ("" + (char)vKey);  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: if (vKey >= 112 && vKey <= 123) {  	return ("F" + (vKey - 111));  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: if (vKey >= 112 && vKey <= 123) {  	return ("F" + (vKey - 111));  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: if (vKey >= 112 && vKey <= 123) {  	return ("F" + (vKey - 111));  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: return ("F" + (vKey - 111));  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Magic Number,LeagueSharp.Common,Utils,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utils.cs,KeyToText,The following statement contains a magic number: switch (vKey) {  case 9:  	return "Tab";  case 16:  	return "Shift";  case 17:  	return "Ctrl";  case 20:  	return "CAPS";  case 27:  	return "ESC";  case 32:  	return "Space";  case 45:  	return "Insert";  case 220:  	return "º";  default:  	return vKey.ToString ();  }  
Missing Default,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,GetItemDamage,The following switch statement is missing a default case: switch (item) {  case DamageItems.Bilgewater:  	return source.CalcDamage (target' DamageType.Magical' 100);  case DamageItems.BlackFireTorch:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.2);  case DamageItems.Botrk:  	return source.CalcDamage (target' DamageType.Physical' target.MaxHealth * 0.1);  case DamageItems.Dfg:  	return source.CalcDamage (target' DamageType.Magical' target.MaxHealth * 0.15);  case DamageItems.FrostQueenClaim:  	return source.CalcDamage (target' DamageType.Magical' 50 + 5 * source.Level);  case DamageItems.Hexgun:  	return source.CalcDamage (target' DamageType.Magical' 150 + 0.4 * source.FlatMagicDamageMod);  case DamageItems.Hydra:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  case DamageItems.OdingVeils:  	return source.CalcDamage (target' DamageType.Magical' 200);  case DamageItems.Tiamat:  	return source.CalcDamage (target' DamageType.Physical' source.BaseAttackDamage + source.FlatPhysicalDamageMod);  }  
Missing Default,LeagueSharp.Common,Damage,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Damage.cs,CalcDamage,The following switch statement is missing a default case: switch (damageType) {  case DamageType.Magical:  	return CalcMagicDamage (source' target' amount);  case DamageType.Physical:  	return CalcPhysicalDamage (source' target' amount);  case DamageType.True:  	return amount;  }  
Missing Default,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following switch statement is missing a default case: switch (ValueType) {  case MenuValueType.Boolean:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		SetValue (!GetValue<bool> ());  	}  	break;  case MenuValueType.Slider:  	if (!Visible) {  		Interacting = false;  		return;  	}  	if (message == WindowsMessages.WM_MOUSEMOVE && Interacting || message == WindowsMessages.WM_LBUTTONDOWN && !Interacting && IsInside (cursorPos)) {  		var val = GetValue<Slider> ();  		var t = val.MinValue + ((cursorPos.X - Position.X) * (val.MaxValue - val.MinValue)) / Width;  		val.Value = (int)t;  		SetValue (val);  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN && message != WindowsMessages.WM_LBUTTONUP) {  		return;  	}  	if (!IsInside (cursorPos) && message == WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	Interacting = message == WindowsMessages.WM_LBUTTONDOWN;  	break;  case MenuValueType.Color:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		var c = GetValue<Color> ();  		ColorPicker.Load (delegate (Color args) {  			SetValue (args);  		}' c);  	}  	break;  case MenuValueType.Circle:  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!Visible) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (cursorPos.X - Position.X > Width - Height) {  		var val = GetValue<Circle> ();  		val.Active = !val.Active;  		SetValue (val);  	}  	else if (cursorPos.X - Position.X > Width - 2 * Height) {  		var c = GetValue<Circle> ();  		ColorPicker.Load (delegate (Color args) {  			var val = GetValue<Circle> ();  			val.Color = args;  			SetValue (val);  		}' c.Color);  	}  	break;  case MenuValueType.KeyBind:  	if (!MenuGUI.IsChatOpen) {  		switch (message) {  		case WindowsMessages.WM_KEYDOWN:  			var val = GetValue<KeyBind> ();  			if (key == val.Key) {  				if (val.Type == KeyBindType.Press) {  					if (!val.Active) {  						val.Active = true;  						SetValue (val);  					}  				}  			}  			break;  		case WindowsMessages.WM_KEYUP:  			var val2 = GetValue<KeyBind> ();  			if (key == val2.Key) {  				if (val2.Type == KeyBindType.Press) {  					val2.Active = false;  					SetValue (val2);  				}  				else {  					val2.Active = !val2.Active;  					SetValue (val2);  				}  			}  			break;  		}  	}  	if (message == WindowsMessages.WM_KEYUP && Interacting) {  		var val = GetValue<KeyBind> ();  		val.Key = key;  		SetValue (val);  		Interacting = false;  	}  	if (!Visible) {  		return;  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	if (cursorPos.X > Position.X + Width - Height) {  		var val = GetValue<KeyBind> ();  		val.Active = !val.Active;  		SetValue (val);  	}  	else {  		Interacting = !Interacting;  	}  	break;  case MenuValueType.StringList:  	if (!Visible) {  		return;  	}  	if (message != WindowsMessages.WM_LBUTTONDOWN) {  		return;  	}  	if (!IsInside (cursorPos)) {  		return;  	}  	var slVal = GetValue<StringList> ();  	if (cursorPos.X > Position.X + Width - Height) {  		slVal.SelectedIndex = slVal.SelectedIndex == slVal.SList.Length - 1 ? 0 : (slVal.SelectedIndex + 1);  		SetValue (slVal);  	}  	else if (cursorPos.X > Position.X + Width - 2 * Height) {  		slVal.SelectedIndex = slVal.SelectedIndex == 0 ? slVal.SList.Length - 1 : (slVal.SelectedIndex - 1);  		SetValue (slVal);  	}  	break;  }  
Missing Default,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,OnReceiveMessage,The following switch statement is missing a default case: switch (message) {  case WindowsMessages.WM_KEYDOWN:  	var val = GetValue<KeyBind> ();  	if (key == val.Key) {  		if (val.Type == KeyBindType.Press) {  			if (!val.Active) {  				val.Active = true;  				SetValue (val);  			}  		}  	}  	break;  case WindowsMessages.WM_KEYUP:  	var val2 = GetValue<KeyBind> ();  	if (key == val2.Key) {  		if (val2.Type == KeyBindType.Press) {  			val2.Active = false;  			SetValue (val2);  		}  		else {  			val2.Active = !val2.Active;  			SetValue (val2);  		}  	}  	break;  }  
Missing Default,LeagueSharp.Common,MenuItem,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Menu.cs,Drawing_OnDraw,The following switch statement is missing a default case: switch (ValueType) {  case MenuValueType.Boolean:  	MenuDrawHelper.DrawOnOff (GetValue<bool> ()' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Slider:  	MenuDrawHelper.DrawSlider (Position' this);  	break;  case MenuValueType.KeyBind:  	var val = GetValue<KeyBind> ();  	s += " (" + Utils.KeyToText (val.Key) + ")";  	if (Interacting) {  		s = MultiLanguage._ ("Press new key");  	}  	MenuDrawHelper.DrawOnOff (val.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.Integer:  	var intVal = GetValue<int> ();  	MenuDrawHelper.Font.DrawText (null' intVal.ToString ()' new SharpDX.Rectangle ((int)Position.X + 5' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  case MenuValueType.Color:  	var colorVal = GetValue<Color> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height' 0)' Height' Height' colorVal' 1' Color.Black);  	break;  case MenuValueType.Circle:  	var circleVal = GetValue<Circle> ();  	MenuDrawHelper.DrawBox (Position + new Vector2 (Width - Height * 2' 0)' Height' Height' circleVal.Color' 1' Color.Black);  	MenuDrawHelper.DrawOnOff (circleVal.Active' new Vector2 (Position.X + Width - Height' Position.Y)' this);  	break;  case MenuValueType.StringList:  	var slVal = GetValue<StringList> ();  	var t = slVal.SList [slVal.SelectedIndex];  	MenuDrawHelper.DrawArrow ("<"' Position + new Vector2 (Width - Height * 2' 0)' this' Color.Black);  	MenuDrawHelper.DrawArrow (">"' Position + new Vector2 (Width - Height' 0)' this' Color.Black);  	MenuDrawHelper.Font.DrawText (null' MultiLanguage._ (t)' new SharpDX.Rectangle ((int)Position.X - 5 - 2 * Height' (int)Position.Y' Width' Height)' FontDrawFlags.VerticalCenter | FontDrawFlags.Right' new ColorBGRA (255' 255' 255' 255));  	break;  }  
Missing Default,LeagueSharp.Common,AoePrediction,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetPrediction,The following switch statement is missing a default case: switch (input.Type) {  case SkillshotType.SkillshotCircle:  	return Circle.GetPrediction (input);  case SkillshotType.SkillshotCone:  	return Cone.GetPrediction (input);  case SkillshotType.SkillshotLine:  	return Line.GetPrediction (input);  }  
Missing Default,LeagueSharp.Common,Collision,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Prediction.cs,GetCollision,The following switch statement is missing a default case: switch (objectType) {  case CollisionableObjects.Minions:  	foreach (var minion in ObjectManager.Get<Obj_AI_Minion> ()) {  		if (minion.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = minion;  			var minionPrediction = Prediction.GetPrediction (input' false' false);  			if (minionPrediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 15 + minion.BoundingRadius)' 2)) {  				result.Add (minion);  			}  		}  	}  	break;  case CollisionableObjects.Heroes:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget (Math.Min (input.Range + input.Radius + 100' 2000)' true' input.RangeCheckFrom)) {  			input.Unit = hero;  			var prediction = Prediction.GetPrediction (input' false' false);  			if (prediction.UnitPosition.To2D ().Distance (input.From.To2D ()' position.To2D ()' true' true) <= Math.Pow ((input.Radius + 50 + hero.BoundingRadius)' 2)) {  				result.Add (hero);  			}  		}  	}  	break;  case CollisionableObjects.Walls:  	var step = position.Distance (input.From) / 20;  	for (var i = 0; i < 20; i++) {  		var p = input.From.To2D ().Extend (position.To2D ()' step * i);  		if (NavMesh.GetCollisionFlags (p.X' p.Y).HasFlag (CollisionFlags.Wall)) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  case CollisionableObjects.YasuoWall:  	if (Environment.TickCount - WallCastT > 4000)  		break;  	GameObject wall = null;  	foreach (var gameObject in ObjectManager.Get<GameObject> ()) {  		if (gameObject.IsValid && System.Text.RegularExpressions.Regex.IsMatch (gameObject.Name' "_w_windwall_enemy_0.\\.troy"' System.Text.RegularExpressions.RegexOptions.IgnoreCase)) {  			wall = gameObject;  		}  	}  	if (wall == null) {  		break;  	}  	var level = wall.Name.Substring (wall.Name.Length - 6' 1);  	var wallWidth = (300 + 50 * Convert.ToInt32 (level));  	var wallDirection = (wall.Position.To2D () - YasuoWallCastedPos).Normalized ().Perpendicular ();  	var wallStart = wall.Position.To2D () + wallWidth / 2 * wallDirection;  	var wallEnd = wallStart - wallWidth * wallDirection;  	if (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Intersects) {  		var t = Environment.TickCount + (wallStart.Intersection (wallEnd' position.To2D ()' input.From.To2D ()).Point.Distance (input.From) / input.Speed + input.Delay) * 1000;  		if (t < WallCastT + 4000) {  			result.Add (ObjectManager.Player);  		}  	}  	break;  }  
Missing Default,LeagueSharp.Common,Spell,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Spell.cs,WillHit,The following switch statement is missing a default case: switch (Type) {  case SkillshotType.SkillshotCircle:  	if (point.To2D ().Distance (castPosition) < Width) {  		return true;  	}  	break;  case SkillshotType.SkillshotLine:  	if (point.To2D ().Distance (castPosition.To2D ()' From.To2D ()' true) < Width + extraWidth) {  		return true;  	}  	break;  case SkillshotType.SkillshotCone:  	var edge1 = (castPosition.To2D () - From.To2D ()).Rotated (-Width / 2);  	var edge2 = edge1.Rotated (Width);  	var v = point.To2D () - From.To2D ();  	if (point.To2D ().Distance (From) < Range && edge1.CrossProduct (v) > 0 && v.CrossProduct (edge2) > 0) {  		return true;  	}  	break;  }  
Missing Default,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,Game_OnWndProc,The following switch statement is missing a default case: switch (args.Msg) {  case 257:  	foreach (var hero in ObjectManager.Get<Obj_AI_Hero> ()) {  		if (hero.IsValidTarget () && SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.ServerPosition.To2D ()) < 300) {  			Target = hero;  			_maintarget = hero;  			Game.PrintChat ("TargetSelector: New main target: " + _maintarget.ChampionName);  		}  	}  	break;  }  
Missing Default,LeagueSharp.Common,TargetSelector,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetNormalTarget,The following switch statement is missing a default case: switch (_mode) {  case TargetingMode.LowHP:  	if (target.Health < newtarget.Health) {  		newtarget = target;  	}  	break;  case TargetingMode.MostAD:  	if (target.BaseAttackDamage + target.FlatPhysicalDamageMod < newtarget.BaseAttackDamage + newtarget.FlatPhysicalDamageMod) {  		newtarget = target;  	}  	break;  case TargetingMode.MostAP:  	if (target.FlatMagicDamageMod < newtarget.FlatMagicDamageMod) {  		newtarget = target;  	}  	break;  case TargetingMode.Closest:  	if (Geometry.Distance (target) < Geometry.Distance (newtarget)) {  		newtarget = target;  	}  	break;  case TargetingMode.NearMouse:  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' target.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' newtarget.Position.To2D ())) {  		newtarget = target;  	}  	break;  case TargetingMode.LessAttack:  	if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Physical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Physical' newtarget.Health)))) {  		newtarget = target;  	}  	break;  case TargetingMode.LessCast:  	if ((target.Health - ObjectManager.Player.CalcDamage (target' Damage.DamageType.Magical' target.Health) < (newtarget.Health - ObjectManager.Player.CalcDamage (newtarget' Damage.DamageType.Magical' newtarget.Health)))) {  		newtarget = target;  	}  	break;  }  
Missing Default,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following switch statement is missing a default case: switch (targetingMode) {  case (int)TargetSelector.TargetingMode.LowHP: {  	if (hero.Health < bestTarget.Health) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAD: {  	if (hero.BaseAttackDamage + hero.FlatPhysicalDamageMod > bestTarget.BaseAttackDamage + bestTarget.FlatPhysicalDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.MostAP: {  	if (hero.BaseAbilityDamage + hero.FlatMagicDamageMod > bestTarget.BaseAbilityDamage + bestTarget.FlatMagicDamageMod) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.Closest: {  	if (Geometry.Distance (hero) < Geometry.Distance (bestTarget)) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.NearMouse: {  	if (SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' hero.Position.To2D ()) + 50 < SharpDX.Vector2.Distance (Game.CursorPos.To2D ()' bestTarget.Position.To2D ())) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.AutoPriority: {  	var damage = 0f;  	switch (damageType) {  	case DamageType.Magical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  		break;  	case DamageType.Physical:  		damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  		break;  	case DamageType.True:  		damage = 100;  		break;  	}  	var ratio = damage / (1 + hero.Health) * GetPriority (hero);  	if (ratio > bestRatio) {  		bestRatio = ratio;  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessAttack: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Physical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  case (int)TargetSelector.TargetingMode.LessCast: {  	if ((hero.Health - ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' hero.Health) < (bestTarget.Health - ObjectManager.Player.CalcDamage (bestTarget' Damage.DamageType.Magical' bestTarget.Health)))) {  		bestTarget = hero;  	}  	break;  }  }  
Missing Default,LeagueSharp.Common,SimpleTs,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\TargetSelector.cs,GetTarget,The following switch statement is missing a default case: switch (damageType) {  case DamageType.Magical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Magical' 100);  	break;  case DamageType.Physical:  	damage = (float)ObjectManager.Player.CalcDamage (hero' Damage.DamageType.Physical' 100);  	break;  case DamageType.True:  	damage = 100;  	break;  }  
Missing Default,LeagueSharp.Common,Utility,C:\repos\ndd305_Common\LeagueSharp.Common\LeagueSharp.Common\Utility.cs,GetRecallTime,The following switch statement is missing a default case: switch (recallName.ToLower ()) {  case "recall":  	duration = 8000;  	break;  case "recallimproved":  	duration = 7000;  	break;  case "odinrecall":  	duration = 4500;  	break;  case "odinrecallimproved":  	duration = 4000;  	break;  case "superrecall":  	duration = 4000;  	break;  case "superrecallimproved":  	duration = 4000;  	break;  }  
