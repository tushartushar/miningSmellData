Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Xdgk.Communi,BCDConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\BCDConverter.cs,DECToBCD,The following statement contains a magic number: return Convert.ToInt32 (dec.ToString ()' 16);  
Magic Number,Xdgk.Communi,BoolBitConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\BoolBitConverter.cs,ConvertToBytes,The following statement contains a magic number: if (b)  	r += (byte)System.Math.Pow (2' BitIndex);  
Magic Number,Xdgk.Communi,BoolBitConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\BoolBitConverter.cs,ConvertToBytes,The following statement contains a magic number: r += (byte)System.Math.Pow (2' BitIndex);  
Magic Number,Xdgk.Communi,XD100TemperatureControlModeConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\XD100TemperatureControlModeConverter.cs,ConvertToObject,The following statement contains a magic number: hi4bit = hi4bit >> 4;  
Magic Number,Xdgk.Communi,XD100OTControlLineConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\Class2.cs,ConvertToBytes,The following statement contains a magic number: for (int i = 0; i < POINT_COUNT; i++) {  	int index = i * 2;  	bs [index] = ByteRealValueConverter.RealValueToByteValue (values [i].Key);  	bs [index + 1] = (byte)(values [i].Value);  }  
Magic Number,Xdgk.Communi,XD100OTControlLineConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\Class2.cs,ConvertToObject,The following statement contains a magic number: for (int i = 0; i < POINT_COUNT; i++) {  	int index = 2 * i;  	int ot = ByteRealValueConverter.ByteValueToRealValue (bytes [index]);  	int gt2 = bytes [index + 1];  	values [i] = new KeyValuePair<int' int> (ot' gt2);  }  
Magic Number,Xdgk.Communi,ByteRealValueConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\Class2.cs,ByteValueToRealValue,The following statement contains a magic number: if (bv > Max)  	return bv - 256;  else  	return bv;  
Magic Number,Xdgk.Communi,ByteRealValueConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\Class2.cs,ByteValueToRealValue,The following statement contains a magic number: return bv - 256;  
Magic Number,Xdgk.Communi,ByteRealValueConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\Class2.cs,RealValueToByteValue,The following statement contains a magic number: if (rv >= 0)  	return (byte)rv;  else  	return (byte)(rv + 256);  
Magic Number,Xdgk.Communi,ByteRealValueConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\Class2.cs,RealValueToByteValue,The following statement contains a magic number: return (byte)(rv + 256);  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,GetAlarmName,The following statement contains a magic number: if (byteIdx == 2)  	ss = AlarmNames2;  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,Parse,The following statement contains a magic number: if (datas.Length < 2)  	throw new ArgumentException ("datas.length must >= 2");  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,Parse,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	bool b = IsSet (b1' i);  	if (b) {  		string n = GetAlarmName (1' i);  		list.Add (n);  	}  }  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,Parse,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	bool b = IsSet (b2' i);  	if (b) {  		string n = GetAlarmName (2' i);  		list.Add (n);  	}  }  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,Parse,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	bool b = IsSet (b2' i);  	if (b) {  		string n = GetAlarmName (2' i);  		list.Add (n);  	}  }  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,Parse,The following statement contains a magic number: if (b) {  	string n = GetAlarmName (2' i);  	list.Add (n);  }  
Magic Number,Xdgk.Communi,GRAlarmDataConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRAlarmDataConverter.cs,IsSet,The following statement contains a magic number: Debug.Assert (bitIndex >= 0 && bitIndex <= 7);  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,ConvertToObject,The following statement contains a magic number: ps = new PumpState (PumpTypeEnum.CyclePump' 2' GetPumpStateEnum (b' 1));  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,ConvertToObject,The following statement contains a magic number: ps = new PumpState (PumpTypeEnum.CyclePump' 3' GetPumpStateEnum (b' 2));  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,ConvertToObject,The following statement contains a magic number: ps = new PumpState (PumpTypeEnum.CyclePump' 3' GetPumpStateEnum (b' 2));  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,ConvertToObject,The following statement contains a magic number: ps = new PumpState (PumpTypeEnum.RecruitPump' 1' GetPumpStateEnum (b' 3));  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,ConvertToObject,The following statement contains a magic number: ps = new PumpState (PumpTypeEnum.RecruitPump' 2' GetPumpStateEnum (b' 4));  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,ConvertToObject,The following statement contains a magic number: ps = new PumpState (PumpTypeEnum.RecruitPump' 2' GetPumpStateEnum (b' 4));  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetIndex,The following statement contains a magic number: if (ps.PumpTypeEnum == PumpTypeEnum.CyclePump) {  	Debug.Assert (ps.PumpNO >= 1 && ps.PumpNO <= 3' "cyclepump NO must in [1' 3] : " + ps.PumpNO);  	return ps.PumpNO - 1;  }  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetIndex,The following statement contains a magic number: Debug.Assert (ps.PumpNO >= 1 && ps.PumpNO <= 3' "cyclepump NO must in [1' 3] : " + ps.PumpNO);  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetIndex,The following statement contains a magic number: if (ps.PumpTypeEnum == PumpTypeEnum.RecruitPump) {  	Debug.Assert (ps.PumpNO >= 1 && ps.PumpNO <= 2' "recruitpump NO must in [1' 2] : " + ps.PumpNO);  	return ps.PumpNO + 2;  }  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetIndex,The following statement contains a magic number: if (ps.PumpTypeEnum == PumpTypeEnum.RecruitPump) {  	Debug.Assert (ps.PumpNO >= 1 && ps.PumpNO <= 2' "recruitpump NO must in [1' 2] : " + ps.PumpNO);  	return ps.PumpNO + 2;  }  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetIndex,The following statement contains a magic number: Debug.Assert (ps.PumpNO >= 1 && ps.PumpNO <= 2' "recruitpump NO must in [1' 2] : " + ps.PumpNO);  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetIndex,The following statement contains a magic number: return ps.PumpNO + 2;  
Magic Number,Xdgk.Communi,GRDevicePumpStateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\GRDevicePumpStateConverter.cs,GetValue,The following statement contains a magic number: return (byte)System.Math.Pow (2' GetIndex (ps));  
Magic Number,Xdgk.Communi,XGDateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\XGDateConverter.cs,ConvertToBytes,The following statement contains a magic number: year %= 100;  
Magic Number,Xdgk.Communi,XGDateConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\XGDateConverter.cs,ConvertToObject,The following statement contains a magic number: if (bytes == null || bytes.Length < 3)  	throw new ArgumentException ("bytes.Length must >= 3");  
Magic Number,Xdgk.Communi,XGDateTimeConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\XGDateTimeConverter.cs,ConvertToObject,The following statement contains a magic number: if (bytes.Length < 8)  	throw new ArgumentException ("xgdatatime bytes length must >= 8");  
Magic Number,Xdgk.Communi,XGDateTimeConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\XGDateTimeConverter.cs,ConvertToObject,The following statement contains a magic number: year += 2000;  
Magic Number,Xdgk.Communi,XGTimeConverter,C:\repos\hkiaipc_yh\8.Src\YeHeCommuniServer\Xdgk.Communi.BytesConverter\XGTimeConverter.cs,ConvertToObject,The following statement contains a magic number: if (bytes == null || bytes.Length < 3)  	throw new ArgumentException ("bytes.Length must >= 3");  
