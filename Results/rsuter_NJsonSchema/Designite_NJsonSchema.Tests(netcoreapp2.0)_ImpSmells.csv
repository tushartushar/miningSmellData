Implementation smell,Namespace,Class,File,Method,Description
Long Method,NJsonSchema.Tests.Validation,SchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\SchemaTests.cs,When_no_additional_properties_are_allowed_then_this_error_is_returned,The method has 315 lines of code.
Complex Method,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,Cyclomatic complexity of the method is 16
Long Identifier,NJsonSchema.Tests.Serialization,AllowAdditionalPropertiesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\AllowAdditionalPropertiesTests.cs,When_schema_JSON_is_deserialized_then_AllowAdditionalProperties_is_correct,The length of the parameter expectedAllowAdditionalProperties is 33.
Long Statement,NJsonSchema.Tests.Conversion,ArrayTypeToSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Conversion\ArrayTypeToSchemaTests.cs,When_converting_smth_then_items_must_correctly_be_loaded,The length of the statement  "            Assert.Equal(JsonObjectType.String | JsonObjectType.Null' property.ActualSchema.Item.ActualSchema.Properties["Id"].Type); " is 121.
Long Statement,NJsonSchema.Tests.Conversion,TypeToSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Conversion\TypeToSchemaTests.cs,When_converting_smth_then_items_must_correctly_be_loaded,The length of the statement  "            Assert.Equal(JsonObjectType.String | JsonObjectType.Null' property.ActualSchema.Item.ActualSchema.Properties["Id"].Type); " is 121.
Long Statement,NJsonSchema.Tests.Generation,ArrayGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\ArrayGenerationTests.cs,When_property_is_JArray_then_schema_with_any_array_is_generated,The length of the statement  "            var schema = JsonSchema.FromType<ClassWithJArray>(new JsonSchemaGeneratorSettings { SchemaType = SchemaType.OpenApi3 }); " is 120.
Long Statement,NJsonSchema.Tests.Generation,CustomContractResolver,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\ContractResolverTests.cs,CreateContract,The length of the statement  "                // by default a type that can convert to string and that is also an enum will have an array contract' but serialize to a string!. fix  this " is 139.
Long Statement,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_string_enum_then_schema_has_enum,The length of the statement  "            Assert.DoesNotContain("="' schema.Properties["Bar"].ActualTypeSchema.Description); // string enums do not have mapping in description " is 133.
Long Statement,NJsonSchema.Tests.Generation,EnumTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumTests.cs,When_enum_is_used_multiple_times_in_array_then_it_is_always_referenced,The length of the statement  "            Assert.True(json.Split(new[] { "\"$ref\": \"#/definitions/MetadataSchemaType\"" }' StringSplitOptions.None).Length == 3); // both classes reference the enum " is 156.
Long Statement,NJsonSchema.Tests.Generation,ExtensionDataGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\ExtensionDataGenerationTests.cs,When_class_has_property_with_JsonExtensionDataAttribute_on_property_then_AdditionalProperties_schema_is_set,The length of the statement  "            var schema = JsonSchema.FromType<ClassWithExtensionData>(new JsonSchemaGeneratorSettings { SchemaType = SchemaType.OpenApi3 }); " is 127.
Long Statement,NJsonSchema.Tests.Generation,JsonInheritanceConverterTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\JsonInheritanceConverterTests.cs,When_deserializing_type_is_resolved_using_discriminator_value,The length of the statement  "            var obj = new JsonInheritanceConverter("discriminator").ReadJson(jsonReader' typeof(BaseClass)' null' DefaultSerializer); " is 121.
Long Statement,NJsonSchema.Tests.Generation,SchemaGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\SchemaGenerationTests.cs,When_generating_schema_with_dictionary_property_then_it_must_allow_additional_properties,The length of the statement  "            Assert.Equal(JsonObjectType.String' schema.Properties["Dictionary"].ActualSchema.AdditionalPropertiesSchema.ActualSchema.Type); " is 127.
Long Statement,NJsonSchema.Tests.Generation,MyTypeMapper,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\TypeMapperTests.cs,GenerateSchema,The length of the statement  "                schema.Reference = context.JsonSchemaGenerator.Generate(context.Type.GenericTypeArguments[0]' context.JsonSchemaResolver); " is 122.
Long Statement,NJsonSchema.Tests.Generation,XmlObjectTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\XmlObjectTests.cs,When_xmlobject_generation_is_active_with_a_type_without_xml_attributes,The length of the statement  "            var schema = JsonSchema.FromType<WithoutXmlAttributesDefined>(new JsonSchemaGeneratorSettings() { GenerateXmlObjects = true }); " is 127.
Long Statement,NJsonSchema.Tests.Generation,XmlObjectTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\XmlObjectTests.cs,When_xmlobject_generation_is_active_with_a_arraytype_as_parent_with_without_xml_attributes_defined,The length of the statement  "            var schema = JsonSchema.FromType<WithoutXmlAttributesDefined[]>(new JsonSchemaGeneratorSettings() { GenerateXmlObjects = true }); " is 129.
Long Statement,NJsonSchema.Tests.Generation,XmlObjectTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\XmlObjectTests.cs,AssertTypeWithoutXmlAttributes,The length of the statement  "            Assert.Equal(shouldBeThisNameProperty.Name' shouldBeThisNameProperty.Xml.Name); // Make sure that the property name and the xml name is the same " is 144.
Long Statement,NJsonSchema.Tests.Generation,XmlObjectTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\XmlObjectTests.cs,When_xmlobject_generation_is_active_with_a_type_without_xml_attributes_and_serialized,The length of the statement  "            var schema = JsonSchema.FromType<WithoutXmlAttributesDefined>(new JsonSchemaGeneratorSettings() { GenerateXmlObjects = true }); " is 127.
Long Statement,NJsonSchema.Tests.Generation,XmlObjectTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\XmlObjectTests.cs,AssertTypeWithXmlAttributes,The length of the statement  "            Assert.Equal(referenceProperty.Name' referenceProperty.Xml.Name); // Make sure that the property name and the xml name is the same " is 130.
Long Statement,NJsonSchema.Tests.Infrastructure,PropertyRenameAndIgnoreSerializerContractResolverTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Infrastructure\PropertyRenameAndIgnoreSerializerContractResolverTests.cs,When_property_is_ignored_then_refs_ignore_it,The length of the statement  "            var json = JsonConvert.SerializeObject(foo' Formatting.Indented' new JsonSerializerSettings { ContractResolver = contractResolver }); " is 133.
Long Statement,NJsonSchema.Tests.Schema,JsonSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Schema\JsonSchemaTests.cs,When_json_schema_is_loaded_then_no_collection_modified_exception_is_thrown,The length of the statement  "            var schema = await JsonSchema.FromUrlAsync("http://schemas.sportradar.com/bsa/json/v1/endpoints/soccer/team_profile.json"); " is 123.
Long Statement,NJsonSchema.Tests.Serialization,AllowAdditionalPropertiesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\AllowAdditionalPropertiesTests.cs,When_schema_JSON_is_deserialized_then_AllowAdditionalProperties_is_correct,The length of the statement  "            var schema = await JsonSchemaSerialization.FromJsonAsync(json' schemaType' null' factory' new DefaultContractResolver()); " is 121.
Long Statement,NJsonSchema.Tests.Serialization,AllowAdditionalPropertiesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\AllowAdditionalPropertiesTests.cs,When_default_schema_is_serialized_then_AllowAdditionalProperties_is_correct,The length of the statement  "            var json = JsonSchemaSerialization.ToJson(new JsonSchema()' schemaType' new DefaultContractResolver()' Formatting.None); " is 120.
Long Statement,NJsonSchema.Tests.Serialization,AllowAdditionalPropertiesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\AllowAdditionalPropertiesTests.cs,When_AllowAdditionalProperties_is_true_then_JSON_is_correct,The length of the statement  "            var json = JsonSchemaSerialization.ToJson(new JsonSchema { AllowAdditionalProperties = allowAdditionalProperties }' schemaType' new DefaultContractResolver()' Formatting.None); " is 176.
Long Statement,NJsonSchema.Tests.Serialization,DiscriminatorSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\DiscriminatorSerializationTests.cs,When_schema_is_serialized_for_Swagger_then_discriminator_is_string,The length of the statement  "            var json = JsonSchemaSerialization.ToJson(schema' SchemaType.Swagger2' new DefaultContractResolver()' Formatting.Indented); " is 123.
Long Statement,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,When_validating_from_string_parse_line_information,The length of the statement  "            Assert.Equal(3' errors.OfType<ChildSchemaValidationError>().Single(error => error.Kind == ValidationErrorKind.NotOneOf).Errors.Count); // Three NotOneOf clause violations expected " is 179.
Long Statement,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,When_validating_from_string_parse_line_information,The length of the statement  "            Assert.Equal(2' errors.OfType<ChildSchemaValidationError>().Single(error => error.Kind == ValidationErrorKind.NotAllOf).Errors.Count); // Two NotAllOf clause violations expected " is 177.
Magic Number,NJsonSchema.Tests.Conversion,TypeToSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Conversion\TypeToSchemaTests.cs,When_converting_range_property_then_it_should_be_set_as_min_max,The following statement contains a magic number: Assert.Equal(5' schema.Properties["RangeInteger"].Minimum);
Magic Number,NJsonSchema.Tests.Conversion,TypeToSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Conversion\TypeToSchemaTests.cs,When_converting_range_property_then_it_should_be_set_as_min_max,The following statement contains a magic number: Assert.Equal(10' schema.Properties["RangeInteger"].Maximum);
Magic Number,NJsonSchema.Tests.Conversion,TypeToSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Conversion\TypeToSchemaTests.cs,When_converting_enum_then_enum_array_must_be_set,The following statement contains a magic number: Assert.Equal(3' property.ActualTypeSchema.Enumeration.Count);
Magic Number,NSwag.Core.Tests.Converters,JsonExceptionConverterTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Converters\JsonExceptionConverterTests.cs,JsonExceptionConverter_is_thread_safe,The following statement contains a magic number: i < 100
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_multipleOf_attribute_is_available_then_value_is_set_in_schema,The following statement contains a magic number: Assert.Equal(4.5m' property.MultipleOf.Value);
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_multipleOf_is_fraction_then_it_is_validated_correctly,The following statement contains a magic number: testClasses.Add(new SimpleClass((decimal)(0.1 * i)));
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_multipleOf_is_fraction_then_it_is_validated_correctly,The following statement contains a magic number: i < 100
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_StringLengthAttribute_is_set_then_minLength_and_maxLenght_is_set,The following statement contains a magic number: Assert.Equal(5' property.MinLength);
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_StringLengthAttribute_is_set_then_minLength_and_maxLenght_is_set,The following statement contains a magic number: Assert.Equal(10' property.MaxLength);
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_MinLengthAttribute_is_set_then_minItems_or_minLength_is_set,The following statement contains a magic number: Assert.Equal(50' stringProperty.MinLength);
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_MaxLengthAttribute_is_set_then_maxItems_or_maxLength_is_set,The following statement contains a magic number: Assert.Equal(100' arrayProperty.MaxItems);
Magic Number,NJsonSchema.Tests.Generation,AnnotationsGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AnnotationsGenerationTests.cs,When_MaxLengthAttribute_is_set_then_maxItems_or_maxLength_is_set,The following statement contains a magic number: Assert.Equal(500' stringProperty.MaxLength);
Magic Number,NJsonSchema.Tests.Generation,ArrayGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\ArrayGenerationTests.cs,When_property_is_JArray_then_schema_with_any_array_is_generated,The following statement contains a magic number: Assert.Equal(2' schema.ActualProperties.Count);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_minLength_and_maxLength_attribute_are_set_on_array_then_minItems_and_maxItems_are_set,The following statement contains a magic number: Assert.Equal(3' property.MinItems);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_minLength_and_maxLength_attribute_are_set_on_array_then_minItems_and_maxItems_are_set,The following statement contains a magic number: Assert.Equal(5' property.MaxItems);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_minLength_and_maxLength_attribute_are_set_on_string_then_minLength_and_maxLenght_are_set,The following statement contains a magic number: Assert.Equal(3' property.MinLength);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_minLength_and_maxLength_attribute_are_set_on_string_then_minLength_and_maxLenght_are_set,The following statement contains a magic number: Assert.Equal(5' property.MaxLength);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_Range_attribute_is_set_on_double_then_minimum_and_maximum_are_set,The following statement contains a magic number: Assert.Equal(5.5m' property.Minimum);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_Range_attribute_is_set_on_double_then_minimum_and_maximum_are_set,The following statement contains a magic number: Assert.Equal(10.5m' property.Maximum);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_Range_attribute_has_double_max_then_max_is_not_set,The following statement contains a magic number: Assert.Equal(5.5m' property.Minimum);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_Range_attribute_is_set_on_integer_then_minimum_and_maximum_are_set,The following statement contains a magic number: Assert.Equal(5' property.Minimum);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_Range_attribute_is_set_on_integer_then_minimum_and_maximum_are_set,The following statement contains a magic number: Assert.Equal(10' property.Maximum);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_dictionary_property_has_attributes_then_they_are_generated_correctly,The following statement contains a magic number: Assert.Equal(2' schema.Properties["Dict"].MinProperties);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_dictionary_property_has_attributes_then_they_are_generated_correctly,The following statement contains a magic number: Assert.Equal(3' schema.Properties["Dict"].MaxProperties);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_array_property_has_attributes_then_they_are_generated_correctly,The following statement contains a magic number: Assert.Equal(2' schema.Properties["Array"].MinItems);
Magic Number,NJsonSchema.Tests.Generation,AttributeGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\AttributeGenerationTests.cs,When_array_property_has_attributes_then_they_are_generated_correctly,The following statement contains a magic number: Assert.Equal(3' schema.Properties["Array"].MaxItems);
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_integer_enum_then_schema_has_enum,The following statement contains a magic number: Assert.Equal(3' schema.Properties["Bar"].ActualTypeSchema.Enumeration.Count);
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_integer_enum_then_schema_has_enum,The following statement contains a magic number: Assert.Equal(5' schema.Properties["Bar"].ActualTypeSchema.Enumeration.ElementAt(1));
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_integer_enum_then_schema_has_enum,The following statement contains a magic number: Assert.Equal(6' schema.Properties["Bar"].ActualTypeSchema.Enumeration.ElementAt(2));
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_integer_enum_then_schema_has_enum,The following statement contains a magic number: Assert.Equal(6' schema.Properties["Bar"].ActualTypeSchema.Enumeration.ElementAt(2));
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_string_enum_then_schema_has_enum,The following statement contains a magic number: Assert.Equal(3' schema.Properties["Bar"].ActualTypeSchema.Enumeration.Count);
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_property_is_string_enum_then_schema_has_enum,The following statement contains a magic number: Assert.Equal("C"' schema.Properties["Bar"].ActualTypeSchema.Enumeration.ElementAt(2));
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_enum_is_generated_then_names_are_set,The following statement contains a magic number: Assert.Equal(3' schema.Properties["Bar"].ActualTypeSchema.EnumerationNames.Count);
Magic Number,NJsonSchema.Tests.Generation,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumGenerationTests.cs,When_enum_is_generated_then_names_are_set,The following statement contains a magic number: Assert.Equal("C"' schema.Properties["Bar"].ActualTypeSchema.EnumerationNames.ElementAt(2));
Magic Number,NJsonSchema.Tests.Generation,EnumTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumTests.cs,When_enum_is_used_multiple_times_in_array_then_it_is_always_referenced,The following statement contains a magic number: Assert.True(json.Split(new[] { "x-enumNames" }' StringSplitOptions.None).Length == 2);
Magic Number,NJsonSchema.Tests.Generation,EnumTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\EnumTests.cs,When_enum_is_used_multiple_times_in_array_then_it_is_always_referenced,The following statement contains a magic number: Assert.True(json.Split(new[] { "\"$ref\": \"#/definitions/MetadataSchemaType\"" }' StringSplitOptions.None).Length == 3);
Magic Number,NJsonSchema.Tests.Generation,FlattenInheritanceHierarchyTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\FlattenInheritanceHierarchyTests.cs,When_FlattenInheritanceHierarchy_is_enabled_then_all_interface_properties_are_in_one_schema,The following statement contains a magic number: Assert.Equal(3' schema.Properties.Count);
Magic Number,NJsonSchema.Tests.Generation,IgnoredPropertyTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\IgnoredPropertyTests.cs,When_indexer_property_has_ignore_attribute_then_it_is_ignored,The following statement contains a magic number: Assert.Equal(2' schema.Properties.Count);
Magic Number,NJsonSchema.Tests.Generation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\InheritanceTests.cs,When_more_properties_are_defined_in_allOf_and_type_none_then_all_of_contains_all_properties,The following statement contains a magic number: Assert.Equal(2' schema.ActualProperties.Count);
Magic Number,NJsonSchema.Tests.Generation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\InheritanceTests.cs,When_generating_type_with_inheritance_then_allOf_has_one_item,The following statement contains a magic number: Assert.Equal(2' schema.AllOf.Count);
Magic Number,NJsonSchema.Tests.Generation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\InheritanceTests.cs,When_generating_type_with_inheritance_and_flattening_then_schema_has_all_properties_of_inherited_classes,The following statement contains a magic number: Assert.Equal(4' schema.Properties.Count);
Magic Number,NJsonSchema.Tests.Generation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\InheritanceTests.cs,When_class_inherits_from_dictionary_then_allOf_contains_base_dictionary_schema_and_actual_schema,The following statement contains a magic number: Assert.Equal(2' bar.AllOf.Count);
Magic Number,NJsonSchema.Tests.Generation,InterfaceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\InterfaceTests.cs,When_class_inherits_from_interface_then_properties_for_interface_are_generated,The following statement contains a magic number: Assert.Equal(2' schema.Definitions["ICategory"].Properties.Count);
Magic Number,NJsonSchema.Tests.Generation,JsonSchemaTypeAttributeTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\JsonSchemaTypeAttributeTests.cs,When_JsonSchemaTypeAttribute_is_on_class_then_property_defines_nullability,The following statement contains a magic number: Assert.Equal(2' reference.Properties.Count);
Magic Number,NJsonSchema.Tests.Generation,SampleJsonSchemaGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\SampleJsonSchemaGeneratorTests.cs,ComplexArrayProperty,The following statement contains a magic number: Assert.Equal(3' property.Item.ActualSchema.Properties.Count);
Magic Number,NJsonSchema.Tests.Generation,SampleJsonSchemaGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\SampleJsonSchemaGeneratorTests.cs,MergedSchemas,The following statement contains a magic number: Assert.Equal(3' schema.Definitions.Count);
Magic Number,NJsonSchema.Tests.Generation,SchemaGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Generation\SchemaGenerationTests.cs,When_default_value_is_set_on_property_then_default_is_set_in_schema,The following statement contains a magic number: Assert.Equal(10' property.Default);
Magic Number,NJsonSchema.Tests.Schema,JsonSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Schema\JsonSchemaTests.cs,When_deserializing_schema_then_it_should_be_read_correctly,The following statement contains a magic number: Assert.Equal(3' schema.Properties.Count);
Magic Number,NJsonSchema.Tests.Schema,JsonSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Schema\JsonSchemaTests.cs,When_property_matches_one_of_the_types_then_it_should_succeed,The following statement contains a magic number: token["Foo"] = new JValue(5);
Magic Number,NJsonSchema.Tests.Schema,JsonSchemaTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Schema\JsonSchemaTests.cs,When_property_type_not_specified_then_anything_should_succeed,The following statement contains a magic number: token["Foo"] = new JValue(5);
Magic Number,NJsonSchema.Tests.Serialization,ExtensionDataTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\ExtensionDataTests.cs,When_schema_has_extension_data_property_then_property_is_in_serialized_json,The following statement contains a magic number: schema.ExtensionData = new Dictionary<string' object>              {                  { "Test"' 123 }              };
Magic Number,NJsonSchema.Tests.Serialization,ExtensionDataTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\ExtensionDataTests.cs,When_json_schema_contains_unknown_data_then_extension_data_is_filled,The following statement contains a magic number: Assert.Equal((long)123' schema.ExtensionData["Test"]);
Magic Number,NJsonSchema.Tests.Serialization,ExtensionDataTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\ExtensionDataTests.cs,When_extension_data_attribute_is_used_on_class_then_extension_data_property_is_set,The following statement contains a magic number: Assert.Equal(123' schema.ExtensionData["MyClass"]);
Magic Number,NJsonSchema.Tests.Serialization,ExtensionDataTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\ExtensionDataTests.cs,When_extension_data_attribute_is_used_on_property_then_extension_data_property_is_set,The following statement contains a magic number: Assert.Equal(2' schema.Properties["Property"].ExtensionData["Foo"]);
Magic Number,NJsonSchema.Tests.Serialization,ExtensionDataTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Serialization\ExtensionDataTests.cs,When_extension_data_attribute_is_used_on_property_then_extension_data_property_is_set,The following statement contains a magic number: Assert.Equal(3' schema.Properties["Property"].ExtensionData["Bar"]);
Magic Number,NJsonSchema.Tests.Validation,ArrayValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ArrayValidationTests.cs,When_token_is_not_array_then_validation_should_fail,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,ArrayValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ArrayValidationTests.cs,When_tuple_correct_then_it_should_pass,The following statement contains a magic number: token.Add(new JValue(5));
Magic Number,NJsonSchema.Tests.Validation,ArrayValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ArrayValidationTests.cs,When_tuple_too_large_then_it_should_fail,The following statement contains a magic number: token.Add(new JValue(5));
Magic Number,NJsonSchema.Tests.Validation,ArrayValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ArrayValidationTests.cs,When_tuple_too_large_then_it_should_fail,The following statement contains a magic number: token.Add(new JValue(5));
Magic Number,NJsonSchema.Tests.Validation,ArrayValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ArrayValidationTests.cs,When_second_item_validation_fails_then_path_should_be_correct,The following statement contains a magic number: token.Add(new JValue(10));
Magic Number,NJsonSchema.Tests.Validation,ArrayValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ArrayValidationTests.cs,When_min_items_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.MinItems = 2;
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_base64_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_base64_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_base64_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_base64_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_byte_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_byte_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_byte_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_byte_formatted_with_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 101' 22' 87' 25 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_base64_formatted_without_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 1' 2' 3 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_base64_formatted_without_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 1' 2' 3 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_byte_formatted_without_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 1' 2' 3 });
Magic Number,NJsonSchema.Tests.Validation,FormatBase64Tests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\FormatBase64Tests.cs,Validation_should_succeed_if_string_is_byte_formatted_without_trailing_equals,The following statement contains a magic number: var value = Convert.ToBase64String(new byte[] { 1' 2' 3 });
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_is_any_of_then_it_should_succeed,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_is_not_any_of_then_it_should_fail,The following statement contains a magic number: var token = new JValue(1.5);
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_is_not_all_of_then_it_should_fail,The following statement contains a magic number: var token = new JValue(5);
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_is_one_of_then_it_should_succeed,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_is_not_one_of_then_it_should_fail,The following statement contains a magic number: var token = new JValue(5);
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_one_of_matches_multiple_then_it_should_fail,The following statement contains a magic number: var token = new JValue(5);
Magic Number,NJsonSchema.Tests.Validation,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\InheritanceTests.cs,When_not_matches_excluded_schema_then_it_should_succeed,The following statement contains a magic number: var token = new JValue(5);
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,When_validating_from_string_parse_line_information,The following statement contains a magic number: Assert.Equal(7' errors.Count);
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,When_validating_from_string_parse_line_information,The following statement contains a magic number: Assert.Equal(3' errors.OfType<ChildSchemaValidationError>().Single(error => error.Kind == ValidationErrorKind.NotOneOf).Errors.Count);
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,When_validating_from_string_parse_line_information,The following statement contains a magic number: Assert.Equal(2' errors.OfType<ChildSchemaValidationError>().Single(error => error.Kind == ValidationErrorKind.NotAllOf).Errors.Count);
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,LineInformationTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\LineInformationTest.cs,ValidateErrors,The following statement contains a magic number: switch (error.Kind)                      {                      case ValidationErrorKind.StringExpected:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberExpected:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.NotInEnumeration:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.StringTooShort:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PatternMismatch:                          AssertLineNumber(3' 36' error);                          break;                      case ValidationErrorKind.PropertyRequired:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NumberTooBig:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.NumberTooSmall:                          AssertLineNumber(2' 27' error);                          break;                      case ValidationErrorKind.ItemsNotUnique:                          AssertLineNumber(4' 26' error);                          break;                      case ValidationErrorKind.NoAdditionalPropertiesAllowed:                          AssertLineNumber(5' 24' error);                          break;                      case ValidationErrorKind.NotOneOf:                          AssertLineNumber(1' 1' error);                          break;                      case ValidationErrorKind.NotAllOf:                          AssertLineNumber(1' 1' error);                          break;                      default:                          throw new ArgumentOutOfRangeException(nameof(error.Kind));                      }
Magic Number,NJsonSchema.Tests.Validation,ObjectValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ObjectValidationTests.cs,When_token_is_not_object_then_validation_should_fail,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,ObjectValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ObjectValidationTests.cs,When_property_matches_one_of_the_types_then_it_should_succeed,The following statement contains a magic number: token["Foo"] = new JValue(5);
Magic Number,NJsonSchema.Tests.Validation,ObjectValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ObjectValidationTests.cs,When_string_property_required_but_integer_provided_then_it_should_fail,The following statement contains a magic number: token["Foo"] = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,PatternPropertyValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\PatternPropertyValidationTests.cs,When_there_are_no_properties_matching_pattern_then_validation_fails,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,NJsonSchema.Tests.Validation,PatternPropertyValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\PatternPropertyValidationTests.cs,When_there_are_properties_matching_pattern_but_types_doesnt_match_then_validation_fails,The following statement contains a magic number: Assert.Equal(2' errors.Count());
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_string_required_but_integer_provided_then_validation_fails,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_number_required_and_integer_provided_then_validation_succeeds,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_integer_required_and_integer_provided_then_validation_succeeds,The following statement contains a magic number: var token = new JValue(10);
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_string_min_length_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.MinLength = 2;
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_string_max_length_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.MaxLength = 2;
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_integer_minimum_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.Minimum = 2;
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_integer_maximum_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.Maximum = 2;
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_integer_maximum_does_not_match_then_it_should_fail,The following statement contains a magic number: var token = new JValue(3);
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_number_minimum_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.Minimum = 1.5m;
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_number_minimum_does_not_match_then_it_should_fail,The following statement contains a magic number: var token = new JValue(1.4);
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_number_maximum_does_not_match_then_it_should_fail,The following statement contains a magic number: schema.Maximum = 1.5m;
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_number_maximum_does_not_match_then_it_should_fail,The following statement contains a magic number: var token = new JValue(1.6);
Magic Number,NJsonSchema.Tests.Validation,ValueTypeValidationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.Tests\Validation\ValueTypeValidationTests.cs,When_value_is_wrong_type_in_enumeration_then_it_should_fail,The following statement contains a magic number: var token = new JValue(3);
