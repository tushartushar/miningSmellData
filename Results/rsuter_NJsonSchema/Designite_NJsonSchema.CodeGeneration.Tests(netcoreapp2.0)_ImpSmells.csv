Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_double_it_is_generated_in_CSharp_and_TypeScript_correctly,The length of the statement  "            var typescriptValue = _typescriptGenerator.GetDefaultValue(schema' true' "double"' "double"' true' typescriptTypeResolver); " is 123.
Long Statement,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_double_without_format_it_is_generated_in_CSharp_and_TypeScript_correctly,The length of the statement  "            var typescriptValue = _typescriptGenerator.GetDefaultValue(schema' true' "double"' "double"' true' typescriptTypeResolver); " is 123.
Long Statement,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_float_it_is_generated_in_CSharp_and_TypeScript_correctly,The length of the statement  "            var typescriptValue = _typescriptGenerator.GetDefaultValue(schema' true' "float"' "float"' true' typescriptTypeResolver); " is 121.
Long Statement,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_string_it_is_generated_in_CSharp_and_TypeScript_correctly,The length of the statement  "            var typescriptValue = _typescriptGenerator.GetDefaultValue(schema' true' "string"' "string"' true' typescriptTypeResolver); " is 123.
Long Statement,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_enum_it_is_generated_in_CSharp_and_TypeScript_correctly,The length of the statement  "            var typescriptValue = typescriptGenerator.GetDefaultValue(schema' true' "MyEnum"' "MyEnum"' true' typescriptTypeResolver); " is 122.
Long Statement,NJsonSchema.CodeGeneration.Tests,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\EnumGenerationTests.cs,When_string_and_integer_enum_used_then_one_enum_is_generated_in_CSharp,The length of the statement  "            Assert.Equal(3' code.Split(new[] { "public enum " }' StringSplitOptions.None).Count()); // two found (one string and one integer based enum) " is 140.
Long Statement,NJsonSchema.CodeGeneration.Tests,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\EnumGenerationTests.cs,When_string_and_integer_enum_used_then_one_enum_is_generated_in_CSharp,The length of the statement  "            Assert.Equal(3' code.Split(new[] { "[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]" }' StringSplitOptions.None).Count()); // two found " is 175.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,When_schema_contains_discriminator_and_inheritance_hierarchy_then_CSharp_is_correctly_generated,The length of the statement  "            Assert.Contains("[Newtonsoft.Json.JsonConverter(typeof(JsonInheritanceConverter)' \"discriminator\")]"' code); // attribute is generated " is 136.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Subtypes_are_serialized_with_correct_discriminator,The length of the statement  "            var json = await JsonSchema.FromJsonAsync(@"{""title"":""foo""'""type"":""object""'""discriminator"":""discriminator""'""properties"":{""discriminator"":{""type"":""string""}}'""definitions"":{""bar"":{""type"":""object""'""allOf"":[{""$ref"":""#""}]}}}"); " is 256.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Subtypes_are_serialized_with_correct_discriminator,The length of the statement  "            var generator = new CSharpGenerator(json' new CSharpGeneratorSettings() { ClassStyle = CSharpClassStyle.Poco' Namespace = "foo" }); " is 131.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "            Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation = Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create("assemblyName") " is 132.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "             .WithOptions(new Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions(Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary)) " is 132.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.Runtime.dll")' " is 127.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.Dynamic.Runtime.dll")' " is 135.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.IO.dll")' " is 122.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.Linq.dll")' " is 124.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.ObjectModel.dll")' " is 131.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.Linq.Expressions.dll")' " is 136.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                            Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(coreDir.FullName + Path.DirectorySeparatorChar + "System.Runtime.Extensions.dll")) " is 138.
Long Statement,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,Compile,The length of the statement  "                        .Where(diagnostic => diagnostic.IsWarningAsError || diagnostic.Severity == Microsoft.CodeAnalysis.DiagnosticSeverity.Error) " is 123.
Long Statement,NJsonSchema.CodeGeneration.Tests,LiquidTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\LiquidTests.cs,LiquidModelHasNestedDictionaryAndLists_KeyAccessAndListIterationShouldWork,The length of the statement  "            var liquid = "{% assign x = Bar[\"Baz\"] -%}{% for i in x -%}key1={{ i[\"key1\"] }}'key2={{ i[\"key2\"] }}{% endfor -%}"; " is 121.
Long Statement,NJsonSchema.CodeGeneration.Tests.Samples,SampleTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\Samples\SampleTests.cs,Demo,The length of the statement  "            var generator = new TypeScriptGenerator(schema' new TypeScriptGeneratorSettings { TypeStyle = TypeScriptTypeStyle.Class' TypeScriptVersion = 2.0m }); " is 149.
Long Statement,NJsonSchema.CodeGeneration.Tests.Samples,SampleTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\Samples\SampleTests.cs,Demo2,The length of the statement  "            var generator = new TypeScriptGenerator(schema' new TypeScriptGeneratorSettings { TypeStyle = TypeScriptTypeStyle.Interface' TypeScriptVersion = 2.0m }); " is 153.
Magic Number,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_int_it_is_generated_in_CSharp_and_TypeScript_correctly,The following statement contains a magic number: var schema = new JsonSchema()              {                  Type = JsonObjectType.Integer'                  Default = (int)6              };
Magic Number,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_long_it_is_generated_in_CSharp_and_TypeScript_correctly,The following statement contains a magic number: var schema = new JsonSchema()              {                  Type = JsonObjectType.Integer'                  Format = JsonFormatStrings.Long'                  Default = 6000000000L              };
Magic Number,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_double_it_is_generated_in_CSharp_and_TypeScript_correctly,The following statement contains a magic number: var schema = new JsonSchema()              {                  Type = JsonObjectType.Number'                  Format = JsonFormatStrings.Double'                  Default = 1234.567F              };
Magic Number,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_double_without_format_it_is_generated_in_CSharp_and_TypeScript_correctly,The following statement contains a magic number: var schema = new JsonSchema()              {                  Type = JsonObjectType.Number'                  Default = 1234.567F              };
Magic Number,NJsonSchema.CodeGeneration.Tests,DefaultValueGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\DefaultValueGeneratorTests.cs,When_schema_has_default_value_of_float_it_is_generated_in_CSharp_and_TypeScript_correctly,The following statement contains a magic number: var schema = new JsonSchema()              {                  Type = JsonObjectType.Number'                  Format = JsonFormatStrings.Float'                  Default = 1234.567F              };
Magic Number,NJsonSchema.CodeGeneration.Tests,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\EnumGenerationTests.cs,When_string_and_integer_enum_used_then_two_enums_are_generated_in_typescript,The following statement contains a magic number: Assert.Equal(3' code.Split(new[] { "export enum " }' StringSplitOptions.None).Count());
Magic Number,NJsonSchema.CodeGeneration.Tests,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\EnumGenerationTests.cs,When_string_and_integer_enum_used_then_one_enum_is_generated_in_CSharp,The following statement contains a magic number: Assert.Equal(3' code.Split(new[] { "public enum " }' StringSplitOptions.None).Count());
Magic Number,NJsonSchema.CodeGeneration.Tests,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\EnumGenerationTests.cs,When_string_and_integer_enum_used_then_one_enum_is_generated_in_CSharp,The following statement contains a magic number: Assert.Equal(3' code.Split(new[] { "[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]" }' StringSplitOptions.None).Count());
Magic Number,NJsonSchema.CodeGeneration.Tests,EnumGenerationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\EnumGenerationTests.cs,When_enum_has_string_value_then_TS_code_has_string_value,The following statement contains a magic number: var generator = new TypeScriptGenerator(schema' new TypeScriptGeneratorSettings { TypeScriptVersion = 1.8m });
Magic Number,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,When_dates_are_converted_then_JsonInheritanceConverter_should_inherit_settings,The following statement contains a magic number: var offset = new TimeSpan(10' 0' 0);
Magic Number,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,JsonInheritanceConverter_is_thread_safe,The following statement contains a magic number: i < 100
Magic Number,NJsonSchema.CodeGeneration.Tests,InheritanceSerializationTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\InheritanceSerializationTests.cs,When_JsonInheritanceConverter_is_set_then_discriminator_mappings_are_generated,The following statement contains a magic number: Assert.Equal(3' baseSchema.ActualDiscriminatorObject.Mapping.Count);
Magic Number,NJsonSchema.CodeGeneration.Tests.Samples,SampleTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\Samples\SampleTests.cs,Demo,The following statement contains a magic number: var generator = new TypeScriptGenerator(schema' new TypeScriptGeneratorSettings { TypeStyle = TypeScriptTypeStyle.Class' TypeScriptVersion = 2.0m });
Magic Number,NJsonSchema.CodeGeneration.Tests.Samples,SampleTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.Tests\Samples\SampleTests.cs,Demo2,The following statement contains a magic number: var generator = new TypeScriptGenerator(schema' new TypeScriptGeneratorSettings { TypeStyle = TypeScriptTypeStyle.Interface' TypeScriptVersion = 2.0m });
