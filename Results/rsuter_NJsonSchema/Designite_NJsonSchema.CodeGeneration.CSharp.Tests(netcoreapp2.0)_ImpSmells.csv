Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,AllOfTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\AllOfTests.cs,When_more_properties_are_defined_in_allOf_and_type_none_then_all_of_contains_all_properties_in_generated_code,The length of the statement  "        [Newtonsoft.Json.JsonProperty(""prop1""' Required = Newtonsoft.Json.Required.DisallowNull' NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)] " is 153.
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,AllOfTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\AllOfTests.cs,When_more_properties_are_defined_in_allOf_and_type_none_then_all_of_contains_all_properties_in_generated_code,The length of the statement  "        [Newtonsoft.Json.JsonProperty(""prop2""' Required = Newtonsoft.Json.Required.DisallowNull' NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)] " is 153.
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,AnnotationsTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\AnnotationsTests.cs,When_array_property_is_not_nullable_then_it_does_not_have_a_setter,The length of the statement  "            Assert.Contains("public System.Collections.Generic.ICollection<string> Collection { get; } = new System.Collections.ObjectModel.Collection<string>();"' code); " is 158.
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,AnnotationsTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\AnnotationsTests.cs,When_array_property_is_not_nullable_then_it_does_not_have_a_setter,The length of the statement  "            Assert.Contains("public System.Collections.Generic.IDictionary<string' object> Dictionary { get; } = new System.Collections.Generic.Dictionary<string' object>();"' code); " is 170.
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,EnumTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\EnumTests.cs,When_enum_is_integer_flags_it_should_use_declared_values,The length of the statement  "            // Verify previous incorrect logic wasn't used to determine enum values (and doesn't generate duplicate incorrect values): " is 122.
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,InheritanceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\InheritanceTests.cs,When_empty_class_inherits_from_dictionary_then_allOf_inheritance_still_works,The length of the statement  "            Assert.Contains("public partial class EmptyClassInheritingDictionary : System.Collections.Generic.Dictionary<string' object>"' code); " is 133.
Long Statement,NJsonSchema.CodeGeneration.Tests.CSharp,ReferencesTest,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ReferencesTest.cs,When_inheritance_with_object_without_props_is_generated_then_all_classes_exist_and_additional_properties_property_is_not_generated,The length of the statement  "            var schema = await JsonSchemaSerialization.FromJsonAsync(json' SchemaType.OpenApi3' null' factory' new DefaultContractResolver()); " is 130.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,DictionaryTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\DictionaryTests.cs,When_dictionary_property_is_required_then_dictionary_instance_can_be_changed,The length of the statement  "            Assert.Contains("public Foo<PropertyName' string> EnumInterfaceDictionary { get; set; } = new Bar<PropertyName' string>();"' code); " is 131.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_enum_property_has_default_and_string_serialization_then_correct_csharp_code_generated,The length of the statement  "            var schema = JsonSchema.FromType<ClassWithDefaultEnumProperty>(new JsonSchemaGeneratorSettings { DefaultEnumHandling = EnumHandling.String }); " is 142.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_enum_type_name_is_missing_then_default_value_is_still_correctly_set,The length of the statement  "            Assert.Contains("public MyClassConstructionCode ConstructionCode { get; set; } = Foo.MyClassConstructionCode.JOIST_MAS;"' code); " is 128.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_patternProperties_is_set_with_string_value_type_then_correct_dictionary_is_generated,The length of the statement  "            Assert.Contains("public System.Collections.Generic.IDictionary<string' string> Dict { get; set; } = new System.Collections.Generic.Dictionary<string' string>();"' code); " is 169.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_property_is_required_then_CSharp_code_is_correct,The length of the statement  "        [Newtonsoft.Json.JsonProperty(""MiddleName""' Required = Newtonsoft.Json.Required.DisallowNull' NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)] " is 158.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_array_property_is_required_or_not_then_the_code_has_correct_initializer,The length of the statement  "            Assert.Contains("public System.Collections.Generic.ICollection<string> A { get; set; } = new System.Collections.ObjectModel.Collection<string>();"' code); " is 154.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_array_property_is_required_or_not_then_the_code_has_correct_initializer,The length of the statement  "            Assert.DoesNotContain("public System.Collections.Generic.ICollection<string> B { get; set; } = new System.Collections.ObjectModel.Collection<string>();"' code); " is 160.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_dictionary_property_is_required_or_not_then_the_code_has_correct_initializer,The length of the statement  "            Assert.Contains("public System.Collections.Generic.IDictionary<string' string> A { get; set; } = new System.Collections.Generic.Dictionary<string' string>();"' code); " is 166.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_dictionary_property_is_required_or_not_then_the_code_has_correct_initializer,The length of the statement  "            Assert.DoesNotContain("public System.Collections.Generic.IDictionary<string' string> B { get; set; } = new System.Collections.Generic.Dictionary<string' string>();"' code); " is 172.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_record_has_inheritance,The length of the statement  "            Assert.Contains("public PersonAddress(string @addressee' string @city' int @houseNumber' string @streetName' string @zip)"' output); " is 132.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_schema_has_AdditionProperties_schema_then_JsonExtensionDataAttribute_is_generated,The length of the statement  "            var schema = JsonSchema.FromType<ClassWithExtensionData>(new JsonSchemaGeneratorSettings { SchemaType = SchemaType.OpenApi3 }); " is 127.
Long Statement,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_array_property_has_minitems_then_minlength_attribute_is_rendered_in_Swagger_mode,The length of the statement  "                            "        public System.Collections.Generic.ICollection<string> Value { get; set; } = new System.Collections.ObjectModel.Collection<string>();\n"' code); " is 152.
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,GeneralGeneratorTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\GeneralGeneratorTests.cs,When_schema_has_negative_value_of_enum_it_is_generated_in_CSharp_and_TypeScript_correctly,The following statement contains a magic number: var schema = new JsonSchema()              {                  Type = JsonObjectType.Integer'                  Enumeration =                  {                      0'                      1'                      2'                      -1'                  }'                  Default = "-1"              };
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,InterfaceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\InterfaceTests.cs,When_interface_has_properties_then_properties_are_included_in_schema,The following statement contains a magic number: Assert.Equal(2' schema.Properties.Count);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,InterfaceTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\InterfaceTests.cs,When_class_implements_interface_then_properties_are_included_in_schema,The following statement contains a magic number: Assert.Equal(2' schema.Properties.Count);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_string_property_has_maxlength_then_stringlength_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(50' schema.Properties["value"].ActualSchema.MaxLength);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_string_property_has_minlength_then_stringlength_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(40' schema.Properties["value"].ActualSchema.MinLength);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_int_property_has_maximum_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(20' schema.Properties["value"].ActualSchema.Maximum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_int32_property_has_minimum_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(10' schema.Properties["value"].ActualSchema.Minimum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_int64_property_has_minimum_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(10' schema.Properties["value"].ActualSchema.Minimum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_integer_property_has_minimum_and_maximum_that_are_int64_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(-10000000000m' schema.Properties["value"].ActualSchema.Minimum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_integer_property_has_minimum_and_maximum_that_are_int64_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(10000000000m' schema.Properties["value"].ActualSchema.Maximum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_integer_property_has_minimum_and_maximum_with_exclusive_true_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(-100000000m' schema.Properties["value"].ActualSchema.Minimum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_integer_property_has_minimum_and_maximum_with_exclusive_true_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(100000000m' schema.Properties["value"].ActualSchema.Maximum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_number_property_has_minimum_and_maximum_with_exclusive_true_and_multipleof_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(-100000000.5m' schema.Properties["value"].ActualSchema.Minimum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_number_property_has_minimum_and_maximum_with_exclusive_true_and_multipleof_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(100000000.5m' schema.Properties["value"].ActualSchema.Maximum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_number_property_has_minimum_and_maximum_that_are_double_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(-10000000000m' schema.Properties["value"].ActualSchema.Minimum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_number_property_has_minimum_and_maximum_that_are_double_then_range_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(10000000000m' schema.Properties["value"].ActualSchema.Maximum);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_array_property_has_maxitems_then_maxlength_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(10' schema.Properties["value"].ActualSchema.MaxItems);
Magic Number,NJsonSchema.CodeGeneration.CSharp.Tests,ValidationAttributesTests,C:\research\architectureSmells\repos\rsuter_NJsonSchema\src\NJsonSchema.CodeGeneration.CSharp.Tests\ValidationAttributesTests.cs,When_array_property_has_minitems_then_minlength_attribute_is_rendered_in_Swagger_mode,The following statement contains a magic number: Assert.Equal(10' schema.Properties["value"].ActualSchema.MinItems);
