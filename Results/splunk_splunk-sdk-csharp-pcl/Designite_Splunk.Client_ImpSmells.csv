Implementation smell,Namespace,Class,File,Method,Description
Long Method,Splunk.Client,AtomEntry,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomEntry.cs,ParseDictionaryAsync,The method has 102 lines of code.
Long Method,Splunk.Client,AtomFeed,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomFeed.cs,ReadXmlAsync,The method has 110 lines of code.
Complex Method,Splunk.Client,AtomEntry,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomEntry.cs,NormalizePropertyName,Cyclomatic complexity of the method is 9
Complex Method,Splunk.Client,AtomEntry,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomEntry.cs,ParseDictionaryAsync,Cyclomatic complexity of the method is 9
Long Parameter List,Splunk.Client,Args<TArgs>,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Args.cs,GetPropertyFormatter,The method has 5 parameters. Parameters: propertyName' container' type' info' formatters
Long Parameter List,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,Context,The method has 6 parameters. Parameters: scheme' host' port' timeout' handler' disposeHandler
Long Parameter List,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,GetResponseAsync,The method has 6 parameters. Parameters: method' ns' resource' content' cancellationToken' argumentSets
Long Parameter List,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,SendAsync,The method has 6 parameters. Parameters: method' ns' resource' content' cancellationToken' argumentSets
Long Parameter List,Splunk.Client,IIndexCollection,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IIndexCollection.cs,CreateAsync,The method has 5 parameters. Parameters: name' attributes' coldPath' homePath' thawedPath
Long Parameter List,Splunk.Client,IJobCollection,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IJobCollection.cs,CreateAsync,The method has 6 parameters. Parameters: search' count' mode' args' customArgs' requiredState
Long Parameter List,Splunk.Client,IJobCollectionContract<TJob>,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IJobCollection.cs,CreateAsync,The method has 6 parameters. Parameters: search' count' mode' args' customArgs' requiredState
Long Parameter List,Splunk.Client,IndexCollection,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IndexCollection.cs,CreateAsync,The method has 5 parameters. Parameters: name' attributes' coldPath' homePath' thawedPath
Long Parameter List,Splunk.Client,ISavedSearchCollection,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ISavedSearchCollection.cs,CreateAsync,The method has 5 parameters. Parameters: name' search' attributes' dispatchArgs' templateArgs
Long Parameter List,Splunk.Client,ISavedSearchCollectionContract<TSavedSearch>,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ISavedSearchCollection.cs,CreateAsync,The method has 5 parameters. Parameters: name' search' attributes' dispatchArgs' templateArgs
Long Parameter List,Splunk.Client,IService,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IService.cs,SearchAsync,The method has 5 parameters. Parameters: search' count' mode' args' customArgs
Long Parameter List,Splunk.Client,IServiceContract,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IService.cs,SearchAsync,The method has 5 parameters. Parameters: search' count' mode' args' customArgs
Long Parameter List,Splunk.Client,JobCollection,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\JobCollection.cs,CreateAsync,The method has 6 parameters. Parameters: search' count' mode' args' customArgs' requiredState
Long Parameter List,Splunk.Client,SavedSearchCollection,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\SavedSearchCollection.cs,CreateAsync,The method has 5 parameters. Parameters: name' search' attributes' dispatchArgs' templateArgs
Long Parameter List,Splunk.Client,Service,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Service.cs,SearchAsync,The method has 5 parameters. Parameters: search' count' mode' args' customArgs
Long Statement,Splunk.Client,AtomEntry,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomEntry.cs,ToString,The length of the statement  "            var text= string.Format(CultureInfo.CurrentCulture' "AtomEntry(Title={0}' Author={1}' Id={2}' Published={3}' Updated={4})"'  " is 123.
Long Statement,Splunk.Client,AtomFeed,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomFeed.cs,ReadXmlAsync,The length of the statement  "                        // string build = reader.GetRequiredAttribute("build"); // TODO: Incorporate build number? Build number sometimes adds a fifth digit. " is 133.
Long Statement,Splunk.Client,AtomFeed,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomFeed.cs,ReadXmlAsync,The length of the statement  "                    default: throw new InvalidDataException(string.Format("Unexpected start tag: {0}"' reader.Name)); // TODO: Improved diagnostics " is 127.
Long Statement,Splunk.Client,Configuration,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Configuration.cs,CreateAsync,The length of the statement  "            throw new ArgumentException("The arguments list does not include '__stanza' as required by the POST properties/{file_name} endpoint.") " is 134.
Long Statement,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,DeleteAsync,The length of the statement  "            var response = await this.GetResponseAsync(HttpMethod.Delete' ns' resource' null' token' argumentSets).ConfigureAwait(false); " is 125.
Long Statement,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,GetAsync,The length of the statement  "            var response = await this.GetResponseAsync(HttpMethod.Get' ns' resource' null' token' argumentSets).ConfigureAwait(false); " is 122.
Long Statement,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,GetAsync,The length of the statement  "            var response = await this.GetResponseAsync(HttpMethod.Get' ns' resourceName' null' token' argumentSets).ConfigureAwait(false); " is 126.
Long Statement,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,PostAsync,The length of the statement  "            var response = await this.GetResponseAsync(HttpMethod.Post' ns' resource' content' token' argumentSets).ConfigureAwait(false); " is 126.
Long Statement,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,SendAsync,The length of the statement  "            Contract.Requires<ArgumentException>(method == HttpMethod.Delete || method == HttpMethod.Get || method == HttpMethod.Post); " is 123.
Long Statement,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,SendAsync,The length of the statement  "                var message = await this.HttpClient.SendAsync(request' HttpCompletionOption.ResponseHeadersRead' cancellationToken).ConfigureAwait(false); " is 138.
Long Statement,Splunk.Client,Entity<TResource>,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Entity.cs,SendAsync,The length of the statement  "            using (var response = await this.Context.SendAsync(method' this.Namespace' resourceName' arguments).ConfigureAwait(false)) " is 122.
Long Statement,Splunk.Client,IEntityContract,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\IEntity.cs,SendAsync,The length of the statement  "            Contract.Requires<ArgumentException>(method == HttpMethod.Post || method == HttpMethod.Get || method == HttpMethod.Delete); " is 123.
Long Statement,Splunk.Client,ISavedSearchContract,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ISavedSearch.cs,UpdateAsync,The length of the statement  "            Contract.Requires<ArgumentException>(!(search == null && attributes == null && dispatchArgs == null && templateArgs == null)); " is 126.
Long Statement,Splunk.Client,Job,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Job.cs,GetSearchPreviewAsync,The length of the statement  "            var searchResults = await this.GetSearchResultsAsync(DispatchState.Running' "results_preview"' args).ConfigureAwait(false); " is 123.
Long Statement,Splunk.Client,Job,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Job.cs,GetSearchResponseMessageAsync,The length of the statement  "            var message = await this.Context.GetHttpResponseMessageAsync(this.Namespace' resourceName' requestArgs).ConfigureAwait(false); " is 126.
Long Statement,Splunk.Client,Pagination,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Pagination.cs,Equals,The length of the statement  "            return this.itemsPerPage == other.itemsPerPage && this.startIndex == other.startIndex && this.totalResults == other.totalResults; " is 129.
Long Statement,Splunk.Client,SavedSearch,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\SavedSearch.cs,DispatchAsync,The length of the statement  "            using (var response = await this.Context.PostAsync(this.Namespace' resourceName' dispatchArgs' templateArgs).ConfigureAwait(false)) " is 131.
Long Statement,Splunk.Client,SavedSearch,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\SavedSearch.cs,ScheduleAsync,The length of the statement  "                new Argument("schedule_time"' scheduleTime.Value.ToString("u")) //string.Format("{0:s}Z"' scheduleTime.Value.ToUniversalTime())) " is 128.
Long Statement,Splunk.Client,Service,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Service.cs,CreateEntityCollectionCollection,The length of the statement  "            return new EntityCollection<EntityCollection<Entity<ResourceCollection>' ResourceCollection>' ResourceCollection>(this' new ResourceName(resourceName)); " is 152.
Long Statement,Splunk.Client,Service,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Service.cs,CreateEntityCollectionCollection,The length of the statement  "            return new EntityCollection<EntityCollection<Entity<ResourceCollection>' ResourceCollection>' ResourceCollection>(this.Context' new Namespace(user' app)' new ResourceName(resourceName)); " is 186.
Long Statement,Splunk.Client,StoragePassword,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\StoragePassword.cs,UpdateAsync,The length of the statement  "            using (var response = await this.Context.PostAsync(this.Namespace' this.ResourceName' attributes).ConfigureAwait(false)) " is 120.
Long Statement,Splunk.Client,Transmitter,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Transmitter.cs,SendAsync,The length of the statement  "                using (var response = await this.Context.PostAsync(this.Namespace' StreamReceiver' content' arguments).ConfigureAwait(false)) " is 125.
Long Statement,Splunk.Client,Transmitter,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Transmitter.cs,SendAsync,The length of the statement  "                using (var response = await this.Context.PostAsync(this.Namespace' SimpleReceiver' content' arguments).ConfigureAwait(false)) " is 125.
Virtual Method Call from Constructor,Splunk.Client,BaseResource,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\BaseResource.cs,BaseResource,The constructor "BaseResource" calls a virtual method "Initialize".
Virtual Method Call from Constructor,Splunk.Client,BaseResource,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\BaseResource.cs,BaseResource,The constructor "BaseResource" calls a virtual method "Initialize".
Empty Catch Block,Splunk.Client,Response,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Response.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Splunk.Client,Server,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Server.cs,RestartAsync,The method has an empty catch block.
Magic Number,Splunk.Client,Args<TArgs>,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Args.cs,ToString,The following statement contains a magic number: if (builder.Length > 0)              {                  builder.Length = builder.Length - 2;              }
Magic Number,Splunk.Client,Ordinal,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Args.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Splunk.Client,Ordinal,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Args.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Position.GetHashCode();
Magic Number,Splunk.Client,Ordinal,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Args.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Name.GetHashCode();
Magic Number,Splunk.Client,Argument,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Argument.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Splunk.Client,Argument,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Argument.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Name.GetHashCode();
Magic Number,Splunk.Client,Argument,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Argument.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Value.GetHashCode();
Magic Number,Splunk.Client,BuildNumberConverter,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\BuildNumberConverter.cs,Convert,The following statement contains a magic number: if (value.Length == 12)  // Assume hexadecimal Git commit number              {                  Int64 result;                    if (Int64.TryParse(value' NumberStyles.AllowHexSpecifier' CultureInfo.InvariantCulture' out result))                  {                      return result;                  }              }              else  // Assume unsigned 32-bit decimal value              {                  Int32 result;                    if (Int32.TryParse(value' NumberStyles.None' CultureInfo.InvariantCulture' result: out result))                  {                      return result;                  }              }
Magic Number,Splunk.Client,ConfigurationStanza,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ConfigurationStanza.cs,RemoveAsync,The following statement contains a magic number: var rn = new ResourceName("configs"' string.Concat("conf-"' this.ResourceName[1])' this.ResourceName[2]);
Magic Number,Splunk.Client,Context,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Context.cs,Context,The following statement contains a magic number: Contract.Requires<ArgumentException>(0 <= port && port <= 65535);
Magic Number,Splunk.Client,Endpoint,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Endpoint.cs,Initialize,The following statement contains a magic number: if (path.Length < 2)              {                  throw new InvalidDataException(); // TODO: Diagnostics : conversion error              }
Magic Number,Splunk.Client,Endpoint,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Endpoint.cs,Initialize,The following statement contains a magic number: switch (path[0])              {                  case "services":                        ns = Namespace.Default;                      name = new ResourceName(new ArraySegment<string>(path' 1' path.Length - 1));                      break;                    case "servicesNS":                        if (path.Length < 4)                      {                          throw new InvalidDataException(); // TODO: Diagnostics : conversion error                      }                        var parts = new ArraySegment<string>(path' 3' path.Length - 3);                      ns = new Namespace(user: path[1]' app: path[2]);                      name = new ResourceName(parts);                      break;                    default: throw new InvalidDataException(); // TODO: Diagnostics : conversion error              }
Magic Number,Splunk.Client,Endpoint,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Endpoint.cs,Initialize,The following statement contains a magic number: switch (path[0])              {                  case "services":                        ns = Namespace.Default;                      name = new ResourceName(new ArraySegment<string>(path' 1' path.Length - 1));                      break;                    case "servicesNS":                        if (path.Length < 4)                      {                          throw new InvalidDataException(); // TODO: Diagnostics : conversion error                      }                        var parts = new ArraySegment<string>(path' 3' path.Length - 3);                      ns = new Namespace(user: path[1]' app: path[2]);                      name = new ResourceName(parts);                      break;                    default: throw new InvalidDataException(); // TODO: Diagnostics : conversion error              }
Magic Number,Splunk.Client,Endpoint,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Endpoint.cs,Initialize,The following statement contains a magic number: switch (path[0])              {                  case "services":                        ns = Namespace.Default;                      name = new ResourceName(new ArraySegment<string>(path' 1' path.Length - 1));                      break;                    case "servicesNS":                        if (path.Length < 4)                      {                          throw new InvalidDataException(); // TODO: Diagnostics : conversion error                      }                        var parts = new ArraySegment<string>(path' 3' path.Length - 3);                      ns = new Namespace(user: path[1]' app: path[2]);                      name = new ResourceName(parts);                      break;                    default: throw new InvalidDataException(); // TODO: Diagnostics : conversion error              }
Magic Number,Splunk.Client,Endpoint,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Endpoint.cs,Initialize,The following statement contains a magic number: switch (path[0])              {                  case "services":                        ns = Namespace.Default;                      name = new ResourceName(new ArraySegment<string>(path' 1' path.Length - 1));                      break;                    case "servicesNS":                        if (path.Length < 4)                      {                          throw new InvalidDataException(); // TODO: Diagnostics : conversion error                      }                        var parts = new ArraySegment<string>(path' 3' path.Length - 3);                      ns = new Namespace(user: path[1]' app: path[2]);                      name = new ResourceName(parts);                      break;                    default: throw new InvalidDataException(); // TODO: Diagnostics : conversion error              }
Magic Number,Splunk.Client,ExpandoAdapter,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ExpandoAdapter.cs,GetValue,The following statement contains a magic number: do              {                  unconvertedValue = valueConverter.Convert(value);                    lock (this.gate)                  {                      value = dictionary[name];                      convertedValue = value as ConvertedValue;                        if (convertedValue != null)                      {                          unconvertedValue = convertedValue.GetAs<TValue>();                          value = convertedValue.Get();                      }                      else                      {                          dictionary[name] = new ConvertedValue(unconvertedValue);                      }                  }                    Debug.Assert(++count < 2' string.Concat("count: "' count));              }              while (unconvertedValue == null);
Magic Number,Splunk.Client,Job,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Job.cs,GetAsync,The following statement contains a magic number: using (var cancellationTokenSource = new CancellationTokenSource())              {                  cancellationTokenSource.CancelAfter(delay);                  var token = cancellationTokenSource.Token;                    for (int i = 0; ; i++)                  {                      using (var response = await this.Context.GetAsync(this.Namespace' this.ResourceName' token).ConfigureAwait(false))                      {                          if (response.Message.StatusCode != HttpStatusCode.NoContent)                          {                              await response.EnsureStatusCodeAsync(HttpStatusCode.OK).ConfigureAwait(false);                              await this.ReconstructSnapshotAsync(response).ConfigureAwait(false);                                if (this.DispatchState >= dispatchState)                              {                                  break;                              }                          }                      }                        await Task.Delay(retryInterval).ConfigureAwait(false);                      retryInterval += retryInterval / 2;                  }              }
Magic Number,Splunk.Client,Message,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Message.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Splunk.Client,Message,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Message.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.MessageType.GetHashCode();
Magic Number,Splunk.Client,Message,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Message.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.Text.GetHashCode();
Magic Number,Splunk.Client,Namespace,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Namespace.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Splunk.Client,Namespace,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Namespace.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.User.GetHashCode();
Magic Number,Splunk.Client,Namespace,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Namespace.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.App.GetHashCode();
Magic Number,Splunk.Client,Pagination,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Pagination.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,Splunk.Client,Pagination,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Pagination.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.ItemsPerPage;
Magic Number,Splunk.Client,Pagination,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Pagination.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.StartIndex;
Magic Number,Splunk.Client,Pagination,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\Pagination.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + this.TotalResults;
Magic Number,Splunk.Client,RequestException,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\RequestException.cs,FormatMessageText,The following statement contains a magic number: StringBuilder builder = new StringBuilder(1024);
Magic Number,Splunk.Client,ResourceName,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ResourceName.cs,GetHashCode,The following statement contains a magic number: return this.Items.Aggregate(seed: 17' func: (value' part) => (value * 23) + part.GetHashCode());
Magic Number,Splunk.Client,ResourceName,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\ResourceName.cs,GetHashCode,The following statement contains a magic number: return this.Items.Aggregate(seed: 17' func: (value' part) => (value * 23) + part.GetHashCode());
Magic Number,Splunk.Client,SearchResult,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\SearchResult.cs,ToString,The following statement contains a magic number: foreach (KeyValuePair<string' object> pair in (IDictionary<string' object>)this.Object)              {                  builder.Append(pair.Key);                  builder.Append(": ");                    var value = pair.Value;                    if (value is string || value is TaggedFieldValue)                  {                      quote(value);                  }                  else                  {                      builder.Append('[');                        foreach (var item in (IEnumerable)value)                      {                          builder.Append(item);                          builder.Append("' ");                      }                        builder.Length = builder.Length - 2;                      builder.Append(']');                  }                    builder.Append("' ");              }
Magic Number,Splunk.Client,SearchResult,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\SearchResult.cs,ToString,The following statement contains a magic number: builder.Length = builder.Length - 2;
Magic Number,Splunk.Client,TaggedFieldValue,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\TaggedFieldValue.cs,TaggedFieldValue,The following statement contains a magic number: this.hashCode = this.tags.Aggregate(31 * 17 + value.GetHashCode()' (h' t) => 31 * h + t.GetHashCode());
Magic Number,Splunk.Client,TaggedFieldValue,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\TaggedFieldValue.cs,TaggedFieldValue,The following statement contains a magic number: this.hashCode = this.tags.Aggregate(31 * 17 + value.GetHashCode()' (h' t) => 31 * h + t.GetHashCode());
Magic Number,Splunk.Client,TaggedFieldValue,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\TaggedFieldValue.cs,TaggedFieldValue,The following statement contains a magic number: this.hashCode = this.tags.Aggregate(31 * 17 + value.GetHashCode()' (h' t) => 31 * h + t.GetHashCode());
Magic Number,Splunk.Client,TaggedFieldValue,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\TaggedFieldValue.cs,ToString,The following statement contains a magic number: lock (this.locker)              {                  if (this.formattedValue != null)                      return this.formattedValue;                    if (this.tags.Count == 0)                  {                      return this.formattedValue = value;                  }                    var builder = new StringBuilder();                    builder.Append("TaggedFieldValue(Value: ");                  builder.Append(this.value);                  builder.Append("' Tags: [");                    foreach (var tag in this.tags)                  {                      builder.Append(tag);                      builder.Append("' ");                  }                    builder.Length = builder.Length - 2;                  builder.Append("])");                    return this.formattedValue = builder.ToString();              }
Magic Number,Splunk.Client,XmlReaderExtensions,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\XmlReaderExtensions.cs,Conjoin,The following statement contains a magic number: if (names.Length == 2)              {                  return string.Join(" "' names[0]' conjunction' names[1]);              }
Missing Default,Splunk.Client,AtomEntry,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\AtomEntry.cs,ParseDictionaryAsync,The following switch statement is missing a default case: switch (name)                          {                              case "action.email.subject.alert":                                  name = "action.email.subject_alert";                                  break;                              case "action.email.subject.report":                                  name = "action.email.subject_report";                                  break;                              case "action.email":                              case "action.populate_lookup":                              case "action.rss":                              case "action.script":                              case "action.summary_index":                              case "action.webhook":                              case "alert.suppress":                              case "auto_summarize":                                  name += ".IsEnabled";                                  break;                              case "alert_comparator":                                  name = "alert.comparator";                                  break;                              case "alert_condition":                                  name = "alert.condition";                                  break;                              case "alert_threshold":                                  name = "alert.threshold";                                  break;                              case "alert_type":                                  name = "alert.type";                                  break;                              case "coldPath.maxDataSizeMB":                                  name = "coldPath_maxDataSizeMB";                                  break;                              case "display.visualizations.charting.chart":                                  name += ".Type";                                  break;                              case "display.visualizations.charting.layout.splitSeries.allowIndependentYRanges":                                  name = "display.visualizations.charting.layout.splitSeries_allowIndependentYRanges";                                  break;                              case "homePath.maxDataSizeMB":                                  name = "homePath_maxDataSizeMB";                                  break;                              case "update.checksum.type":                                  name = "update.checksum_type";                                  break;                          }
Missing Default,Splunk.Client,BooleanConverter,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\BooleanConverter.cs,Convert,The following switch statement is missing a default case: switch (value)              {                  case "t": return true;                  case "f": return false;                  case "true": return true;                  case "false": return false;              }
Missing Default,Splunk.Client,SearchResult,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\SearchResult.cs,ReadXmlAsync,The following switch statement is missing a default case: switch (elementName)                              {                                  case "text":                                      value = content;                                      break;                                  case "tag":                                      if (tags == null)                                      {                                          tags = ImmutableSortedSet.CreateBuilder<string>();                                      }                                      tags.Add(content);                                      break;                              }
Missing Default,Splunk.Client,MonoPurifier,C:\repos\splunk_splunk-sdk-csharp-pcl\src\Splunk.Client\Splunk\Client\UriConverter.cs,MonoPurifier,The following switch statement is missing a default case: switch (field.Name)                      {                          case "source":                              Source = field;                              break;                          case "path":                              Path = field;                              break;                          case "query":                              Query = field;                              break;                          case "fragment":                              Fragment = field;                              break;                          case "cachedToString":                              CachedToString = field;                              break;                          case "cachedAbsoluteUri":                              CachedAbsoluteUri = field;                              break;                      }
