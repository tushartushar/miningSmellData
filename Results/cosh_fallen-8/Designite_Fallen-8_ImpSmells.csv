Implementation smell,Namespace,Class,File,Method,Description
Long Method,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,Calculate,The method has 104 lines of code.
Long Method,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetValidIncomingEdges,The method has 107 lines of code.
Long Method,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetValidOutgoingEdges,The method has 107 lines of code.
Long Method,NoSQL.GraphDB.Index.Fulltext,RegExIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Fulltext\RegExIndex.cs,TryQuery,The method has 115 lines of code.
Long Method,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,GetNextNeighbors,The method has 123 lines of code.
Long Method,NoSQL.GraphDB,Fallen8,C:\repos\cosh_fallen-8\Fallen-8\Fallen8.cs,TryRemoveGraphElement,The method has 155 lines of code.
Long Method,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,LoadVertex,The method has 109 lines of code.
Complex Method,NoSQL.GraphDB.Algorithms.Path,PathHelper,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\PathHelper.cs,GetValidEdges,Cyclomatic complexity of the method is 9
Complex Method,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetValidIncomingEdges,Cyclomatic complexity of the method is 10
Complex Method,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetValidOutgoingEdges,Cyclomatic complexity of the method is 10
Complex Method,NoSQL.GraphDB.Index.Fulltext,RegExIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Fulltext\RegExIndex.cs,TryQuery,Cyclomatic complexity of the method is 17
Complex Method,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,GetNextNeighbors,Cyclomatic complexity of the method is 11
Complex Method,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,GetNextNeighbors,Cyclomatic complexity of the method is 9
Complex Method,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,Initialize,Cyclomatic complexity of the method is 10
Complex Method,NoSQL.GraphDB,Fallen8,C:\repos\cosh_fallen-8\Fallen-8\Fallen8.cs,TryRemoveGraphElement,Cyclomatic complexity of the method is 10
Complex Method,NoSQL.GraphDB.Model,AGraphElement,C:\repos\cosh_fallen-8\Fallen-8\Model\AGraphElement.cs,TryRemoveProperty,Cyclomatic complexity of the method is 8
Complex Method,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,LoadGraphElements,Cyclomatic complexity of the method is 10
Complex Method,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,LoadVertex,Cyclomatic complexity of the method is 11
Complex Method,NoSQL.GraphDB.Service.REST,GraphService,C:\repos\cosh_fallen-8\Fallen-8\Service\REST\GraphService.cs,CreateSource,Cyclomatic complexity of the method is 9
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,PathHelper,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\PathHelper.cs,GetValidEdges,The method has 5 parameters. Parameters: vertex' direction' edgepropertyFilter' edgeFilter' vertexFilter
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,IShortestPathAlgorithm,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\IShortestPathAlgorithm.cs,Calculate,The method has 10 parameters. Parameters: sourceVertexId' destinationVertexId' maxDepth' maxPathWeight' maxResults' edgePropertyFilter' vertexFilter' edgeFilter' edgeCost' vertexCost
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,Calculate,The method has 10 parameters. Parameters: sourceVertexId' destinationVertexId' maxDepth' maxPathWeight' maxResults' edgePropertyFilter' vertexFilter' edgeFilter' edgeCost' vertexCost
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,CreatePaths,The method has 6 parameters. Parameters: middleVertices' sourceFrontiers' targetFrontiers' maxResults' sourceLevel' targetLevel
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,CreatePathsRecusive,The method has 5 parameters. Parameters: currentPaths' frontier' level' incomingPredDirection' outgoingPredDirection
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetGlobalFrontier,The method has 5 parameters. Parameters: startingVertices' visitedVertices' edgepropertyFilter' edgeFilter' vertexFilter
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetValidIncomingEdges,The method has 5 parameters. Parameters: vertex' edgepropertyFilter' edgeFilter' vertexFilter' alreadyVisited
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetValidOutgoingEdges,The method has 5 parameters. Parameters: vertex' edgepropertyFilter' edgeFilter' vertexFilter' alreadyVisited
Long Parameter List,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,GetLocalFrontier,The method has 5 parameters. Parameters: vertex' alreadyVisitedVertices' edgepropertyFilter' edgeFilter' vertexFilter
Long Parameter List,NoSQL.GraphDB.Index.Range,IRangeIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Range\IRangeIndex.cs,Between,The method has 5 parameters. Parameters: result' lowerLimit' upperLimit' includeLowerLimit' includeUpperLimit
Long Parameter List,NoSQL.GraphDB.Index.Range,RangeIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Range\RangeIndex.cs,Between,The method has 5 parameters. Parameters: result' lowerLimit' upperLimit' includeLowerLimit' includeUpperLimit
Long Parameter List,NoSQL.GraphDB,IRead,C:\repos\cosh_fallen-8\Fallen-8\IRead.cs,RangeIndexScan,The method has 6 parameters. Parameters: result' indexId' leftLimit' rightLimit' includeLeft' includeRight
Long Parameter List,NoSQL.GraphDB,IRead,C:\repos\cosh_fallen-8\Fallen-8\IRead.cs,CalculateShortestPath,The method has 12 parameters. Parameters: result' algorithmname' sourceVertexId' destinationVertexId' maxDepth' maxPathWeight' maxResults' edgePropertyFilter' vertexFilter' edgeFilter' edgeCost' vertexCost
Long Parameter List,NoSQL.GraphDB,IWrite,C:\repos\cosh_fallen-8\Fallen-8\IWrite.cs,CreateEdge,The method has 5 parameters. Parameters: sourceVertexId' edgePropertyId' targetVertexId' creationDate' properties
Long Parameter List,NoSQL.GraphDB,Fallen8,C:\repos\cosh_fallen-8\Fallen-8\Fallen8.cs,CreateEdge,The method has 5 parameters. Parameters: sourceVertexId' edgePropertyId' targetVertexId' creationDate' properties
Long Parameter List,NoSQL.GraphDB,Fallen8,C:\repos\cosh_fallen-8\Fallen-8\Fallen8.cs,CalculateShortestPath,The method has 12 parameters. Parameters: result' algorithmname' sourceVertexId' destinationVertexId' maxDepth' maxPathWeight' maxResults' edgePropertyFilter' vertexFilter' edgeFilter' edgeCost' vertexCost
Long Parameter List,NoSQL.GraphDB,Fallen8,C:\repos\cosh_fallen-8\Fallen-8\Fallen8.cs,RangeIndexScan,The method has 6 parameters. Parameters: result' indexId' leftLimit' rightLimit' includeLeft' includeRight
Long Parameter List,NoSQL.GraphDB.Model,EdgeModel,C:\repos\cosh_fallen-8\Fallen-8\Model\EdgeModel.cs,EdgeModel,The method has 5 parameters. Parameters: id' creationDate' targetVertex' sourceVertex' properties
Long Parameter List,NoSQL.GraphDB.Model,EdgeModel,C:\repos\cosh_fallen-8\Fallen-8\Model\EdgeModel.cs,EdgeModel,The method has 6 parameters. Parameters: id' creationDate' modificationDate' targetVertex' sourceVertex' properties
Long Parameter List,NoSQL.GraphDB.Model,VertexModel,C:\repos\cosh_fallen-8\Fallen-8\Model\VertexModel.cs,VertexModel,The method has 6 parameters. Parameters: id' creationDate' modificationDate' properties' outEdges' incEdges
Long Parameter List,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,Load,The method has 5 parameters. Parameters: fallen8' graphElements' pathToSavePoint' currentId' startServices
Long Parameter List,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,Save,The method has 5 parameters. Parameters: fallen8' graphElements' path' savePartitions' currentId
Long Parameter List,NoSQL.GraphDB.Service,ServiceFactory,C:\repos\cosh_fallen-8\Fallen-8\Service\ServiceFactory.cs,OpenService,The method has 5 parameters. Parameters: serviceName' servicePluginName' reader' fallen8' startService
Long Statement,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,Calculate,The length of the statement  "                var depthOneFrontier = GetGlobalFrontier(new List<VertexModel> { sourceVertex }' sourceVisitedVertices' edgePropertyFilter' edgeFilter' vertexFilter); " is 150.
Long Statement,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,Calculate,The length of the statement  "                    currentSourceFrontier = GetGlobalFrontier(currentSourceVertices' sourceVisitedVertices' edgePropertyFilter' edgeFilter' vertexFilter); " is 134.
Long Statement,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,Calculate,The length of the statement  "                    currentTargetFrontier = GetGlobalFrontier(currentTargetVertices' targetVisitedVertices' edgePropertyFilter' edgeFilter' vertexFilter); " is 134.
Long Statement,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,CreatePaths,The length of the statement  "                        result = CreatePathsRecusive(middleToSourcePaths' targetFrontiers' targetLevel' Direction.OutgoingEdge' Direction.IncomingEdge); " is 128.
Long Statement,NoSQL.GraphDB.Algorithms.Path,BidirectionalLevelSynchronousSSSP,C:\repos\cosh_fallen-8\Fallen-8\Algorithms\Path\BidirectionalLevelSynchronousSSSP.cs,CreateToSourcePaths,The length of the statement  "            return CreatePathsRecusive(firstPaths' sourceFrontiers' newSourceLevel' Direction.IncomingEdge' Direction.OutgoingEdge); " is 120.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,TryStart,The length of the statement  "                    Logger.LogInfo (Description + " v" + Version + Environment.NewLine + "   -> Service is started at " + String.Join (" | "' _uris)); " is 130.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,TryStart,The length of the statement  "                    Logger.LogInfo (Description + " v" + Version + Environment.NewLine + "   -> Service is already started at " + String.Join (" | "' _uris)); " is 138.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,InitializeParams,The length of the statement  "            _uriPattern = (string)GetConfigParamOrDefault (parameter' "URIPattern"' PluginName) + "/" + RESTInterfaceVersion.ToString ("0.0"' CultureInfo.InvariantCulture); " is 160.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,LogConfigParam,The length of the statement  "            Logger.LogInfo (String.Format ("[{0}:config] {1}{2}: {3}"' PluginName' paramName' paramAvailable ? "" : " (n/a' using default)"' param)); " is 137.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The length of the statement  "            // TODO: Dynamisch Anzahl und Art der Prefixes herausfinden; momentan sind die Werte fix (max 2 Prefixes/Instanzen' einmal "" und einmal "2nd") " is 143.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The length of the statement  "                        // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll " is 139.
Long Statement,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The length of the statement  "                    ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single; " is 139.
Long Statement,NoSQL.GraphDB.Plugin,PluginFactory,C:\repos\cosh_fallen-8\Fallen-8\Plugin\PluginFactory.cs,Assimilate,The length of the statement  "            var assimilationPath = path ?? Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + Path.DirectorySeparatorChar + Path.GetRandomFileName() + ".dll"; " is 161.
Long Statement,NoSQL.GraphDB.Index.Fulltext,RegExIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Fulltext\RegExIndex.cs,GetKeyValues,The length of the statement  "                        yield return new KeyValuePair<object' ReadOnlyCollection<AGraphElement>>(aKv.Key' new ReadOnlyCollection<AGraphElement>(aKv.Value)); " is 132.
Long Statement,NoSQL.GraphDB.Index.Fulltext,RegExIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Fulltext\RegExIndex.cs,Load,The length of the statement  "                                Logger.LogError(String.Format("Error while deserializing the index. Could not find the graph element \"{0}\""' graphElementId)); " is 128.
Long Statement,NoSQL.GraphDB.Index,SingleValueIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\SingleValueIndex.cs,GetKeyValues,The length of the statement  "                        yield return new KeyValuePair<object' ReadOnlyCollection<AGraphElement>>(aKv.Key' new ReadOnlyCollection<AGraphElement>(new List<AGraphElement> { aKv.Value })); " is 160.
Long Statement,NoSQL.GraphDB.Index,SingleValueIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\SingleValueIndex.cs,Load,The length of the statement  "                        Logger.LogError(String.Format("[SingleValueIndex] Error while deserializing the index. Could not find the graph element \"{0}\""' graphElementId)); " is 147.
Long Statement,NoSQL.GraphDB.Index,DictionaryIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\DictionaryIndex.cs,GetKeyValues,The length of the statement  "                        yield return new KeyValuePair<object' ReadOnlyCollection<AGraphElement>>(aKv.Key' new ReadOnlyCollection<AGraphElement>(aKv.Value)); " is 132.
Long Statement,NoSQL.GraphDB.Index,DictionaryIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\DictionaryIndex.cs,Load,The length of the statement  "                                Logger.LogError(String.Format("[DictionaryIndex] Error while deserializing the index. Could not find the graph element \"{0}\""' graphElementId)); " is 146.
Long Statement,NoSQL.GraphDB.Index.Range,RangeIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Range\RangeIndex.cs,Load,The length of the statement  "                            Logger.LogError(String.Format("Error while deserializing the index. Could not find the graph element \"{0}\""' graphElementId)); " is 128.
Long Statement,NoSQL.GraphDB.Index.Range,RangeIndex,C:\repos\cosh_fallen-8\Fallen-8\Index\Range\RangeIndex.cs,GetKeyValues,The length of the statement  "                        yield return new KeyValuePair<object' ReadOnlyCollection<AGraphElement>>(aKv.Key' new ReadOnlyCollection<AGraphElement>(aKv.Value)); " is 132.
Long Statement,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,Distance,The length of the statement  "            var points = FindNeighborPoints(container1.LowerPoint' container1.UpperPoint' container2.LowerPoint' container2.UpperPoint); " is 124.
Long Statement,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,GetLeavesLevelByOverlap,The length of the statement  "                        if ((enlargementMinArea > enlargementCurrentArea) || (enlargementMinArea == enlargementCurrentArea && oldMinArea > oldCurrentArea)) " is 131.
Long Statement,NoSQL.GraphDB,Fallen8,C:\repos\cosh_fallen-8\Fallen-8\Fallen8.cs,FindElementsIndex,The length of the statement  "                                                             .Select(aIndexElement => new KeyValuePair<IComparable' ReadOnlyCollection<AGraphElement>>((IComparable)aIndexElement.Key' aIndexElement.Value)) " is 143.
Long Statement,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,Load,The length of the statement  "                Logger.LogError(String.Format("Fallen-8 could not be loaded because the path \"{0}\" does not exist."' pathToSavePoint)); " is 121.
Long Statement,NoSQL.GraphDB.Service.REST,GraphService,C:\repos\cosh_fallen-8\Fallen-8\Service\REST\GraphService.cs,CreateIndex,The length of the statement  "            return _fallen8.IndexFactory.TryCreateIndex(out result' definition.UniqueId' definition.PluginType' ServiceHelper.CreatePluginOptions(definition.PluginOptions)); " is 161.
Long Statement,NoSQL.GraphDB.Service.REST,AdminService,C:\repos\cosh_fallen-8\Fallen-8\Service\REST\AdminService.cs,CreateService,The length of the statement  "            return _fallen8.ServiceFactory.TryAddService(out service' definition.PluginType' definition.UniqueId' ServiceHelper.CreatePluginOptions(definition.PluginOptions)); " is 163.
Long Statement,NoSQL.GraphDB.Service.REST,AdminService,C:\repos\cosh_fallen-8\Fallen-8\Service\REST\AdminService.cs,FindLatestFallen8,The length of the statement  "                Logger.LogInfo(String.Format("The latest revivision is from {0}"' DateTime.FromBinary(Convert.ToInt64(latestRevision)))); " is 121.
Magic Number,NoSQL.GraphDB.Helper,Statistics,C:\repos\cosh_fallen-8\Fallen-8\Helper\Statistics.cs,Median,The following statement contains a magic number: if (numbers != null && numbers.Count > 0)              {                  if (numbers.Count() % 2 == 0)                  {                      return numbers.OrderBy(_ => _).Skip(numbers.Count() / 2 - 1).Take(2).Sum() / 2;                  }                  return numbers.OrderBy(_ => _).ElementAt(Convert.ToInt32(Math.Floor((Convert.ToDouble(numbers.Count()) / 2))));              }
Magic Number,NoSQL.GraphDB.Helper,Statistics,C:\repos\cosh_fallen-8\Fallen-8\Helper\Statistics.cs,Median,The following statement contains a magic number: if (numbers != null && numbers.Count > 0)              {                  if (numbers.Count() % 2 == 0)                  {                      return numbers.OrderBy(_ => _).Skip(numbers.Count() / 2 - 1).Take(2).Sum() / 2;                  }                  return numbers.OrderBy(_ => _).ElementAt(Convert.ToInt32(Math.Floor((Convert.ToDouble(numbers.Count()) / 2))));              }
Magic Number,NoSQL.GraphDB.Helper,Statistics,C:\repos\cosh_fallen-8\Fallen-8\Helper\Statistics.cs,Median,The following statement contains a magic number: if (numbers != null && numbers.Count > 0)              {                  if (numbers.Count() % 2 == 0)                  {                      return numbers.OrderBy(_ => _).Skip(numbers.Count() / 2 - 1).Take(2).Sum() / 2;                  }                  return numbers.OrderBy(_ => _).ElementAt(Convert.ToInt32(Math.Floor((Convert.ToDouble(numbers.Count()) / 2))));              }
Magic Number,NoSQL.GraphDB.Helper,Statistics,C:\repos\cosh_fallen-8\Fallen-8\Helper\Statistics.cs,Median,The following statement contains a magic number: if (numbers != null && numbers.Count > 0)              {                  if (numbers.Count() % 2 == 0)                  {                      return numbers.OrderBy(_ => _).Skip(numbers.Count() / 2 - 1).Take(2).Sum() / 2;                  }                  return numbers.OrderBy(_ => _).ElementAt(Convert.ToInt32(Math.Floor((Convert.ToDouble(numbers.Count()) / 2))));              }
Magic Number,NoSQL.GraphDB.Helper,Statistics,C:\repos\cosh_fallen-8\Fallen-8\Helper\Statistics.cs,Median,The following statement contains a magic number: if (numbers != null && numbers.Count > 0)              {                  if (numbers.Count() % 2 == 0)                  {                      return numbers.OrderBy(_ => _).Skip(numbers.Count() / 2 - 1).Take(2).Sum() / 2;                  }                  return numbers.OrderBy(_ => _).ElementAt(Convert.ToInt32(Math.Floor((Convert.ToDouble(numbers.Count()) / 2))));              }
Magic Number,NoSQL.GraphDB.Helper,Fallen8Pool,C:\repos\cosh_fallen-8\Fallen-8\Helper\Fallen8Pool.cs,FillQueue,The following statement contains a magic number: if (countOfNewInstances > _minValue)              {                  //do not try to fill the pool entirely... maybe there are some recycled instances                  countOfNewInstances = (countOfNewInstances + _minValue)/2;              }
Magic Number,NoSQL.GraphDB.Helper,ParallelHelper,C:\repos\cosh_fallen-8\Fallen-8\Helper\ParallelHelper.cs,GetOptimalNumberOfTasks,The following statement contains a magic number: return (Environment.ProcessorCount / 2) * 3;
Magic Number,NoSQL.GraphDB.Helper,ParallelHelper,C:\repos\cosh_fallen-8\Fallen-8\Helper\ParallelHelper.cs,GetOptimalNumberOfTasks,The following statement contains a magic number: return (Environment.ProcessorCount / 2) * 3;
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,InitializeParams,The following statement contains a magic number: _port = (ushort)Convert.ChangeType (GetConfigParamOrDefault (parameter' "Port"' 9923)' typeof(ushort));
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: int instances = configs.ContainsKey ("2ndPort") ? 2 : 1;
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,ARESTServicePlugin,C:\repos\cosh_fallen-8\Fallen-8\Plugin\ARESTServicePlugin.cs,StartService,The following statement contains a magic number: try {                  for (int instance = 1; instance <= instances; instance++) {                      String authMethod = ConfigHelper.GetInstanceParam (configs' "AuthenticationMethod"' prefixes' instance);                        ServiceSecurity serviceSecurity = new ServiceSecurity (authMethod);                      Uri uri = new Uri (serviceSecurity.HTTP_S + "://" + _address + ":" + _port + "/" + _uriPattern + "/REST");                      if (!uri.IsWellFormedOriginalString ()) {                          throw new Exception ("The URI Pattern is not well formed!");                      }                      _uris.Add (uri);                        ServiceHost host = new ServiceHost (_service' uri) {                          CloseTimeout = new TimeSpan (0' 0' 0' 0' 50)                        };                      _hosts.Add (host);                        var binding = new WebHttpBinding {                          MaxReceivedMessageSize = 268435456'                          SendTimeout = new TimeSpan (1' 0' 0)'                          ReceiveTimeout = new TimeSpan (1' 0' 0)'                          // für Security: Anhand des Binding-Namens wird eruiert' welche ConfigSection & Prefix für diese ServiceBinding-Instanz genutzt werden soll                          Name = PluginName + "." + prefixes [instance - 1]                      };                      binding.Security.Mode = serviceSecurity.BindingSecurityMode;                      binding.Security.Transport.ClientCredentialType = serviceSecurity.BindingClientCredentialType;                        var readerQuotas = new XmlDictionaryReaderQuotas {                          MaxDepth = 2147483647'                          MaxStringContentLength = 2147483647'                          MaxBytesPerRead = 2147483647'                          MaxNameTableCharCount = 2147483647'                          MaxArrayLength = 2147483647                      };                      binding.ReaderQuotas = readerQuotas;                        var se = host.AddServiceEndpoint (RESTServiceInterfaceType' binding' uri);                      var webBehav = new WebHttpBehavior {                          FaultExceptionEnabled = true'                          HelpEnabled = true                      };                      se.Behaviors.Add (webBehav);                        // this adds a additional instanceId header to every response                      se.Behaviors.Add (new FaultTolerantServiceBehavior ());                        ((ServiceBehaviorAttribute)host.Description.Behaviors [typeof(ServiceBehaviorAttribute)]).InstanceContextMode = InstanceContextMode.Single;                  }              } catch (Exception) {                  _hosts.ForEach (h => h.Abort ());                  throw;              }
Magic Number,NoSQL.GraphDB.Plugin,PluginFactory,C:\repos\cosh_fallen-8\Fallen-8\Plugin\PluginFactory.cs,Assimilate,The following statement contains a magic number: using(var dllFileStream = File.Create(assimilationPath' 1024))  			{                  dllStream.CopyTo(dllFileStream);  			}
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: if (point1.Coordinates.Length != 2 && point2.Coordinates.Length != 2)                  throw new Exception("The points are not in geo space");
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: if (point1.Coordinates.Length != 2 && point2.Coordinates.Length != 2)                  throw new Exception("The points are not in geo space");
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: var longitudeStart = currentRPointStart[1] * Math.PI / 180;
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: var latitudueStart = currentRPointStart[0] * Math.PI / 180;
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: var longitudeEnd = currentRPointEnd[1] * Math.PI / 180;
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: var latitudeEnd = currentRPointEnd[0] * Math.PI / 180;
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: var y = Math.Sqrt(Math.Pow(cl2 * sdelta' 2) + Math.Pow(cl1 * sl2 - sl1 * cl2 * cdelta' 2));
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,Distance,The following statement contains a magic number: var y = Math.Sqrt(Math.Pow(cl2 * sdelta' 2) + Math.Pow(cl1 * sl2 - sl1 * cl2 * cdelta' 2));
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.Metric,GeoMetric,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\Metric\GeoMetric.cs,TransformationOfDistance,The following statement contains a magic number: {                  if (mbr.Lower.Length != 2)                      throw new Exception("The points are not in geo space");                    var result = new float[2];                  var latidtude = mbr.Lower[0] * Math.PI / 180;                  result[0] = 180 * distance / ((float)Math.PI * RadiusOfEarth);                  var dist = (float)(180 * distance / (Math.PI * RadiusOfEarth * Math.Cos(latidtude)));                  if (dist > 360)                  {                        result[1] = 360;                  }                  else                  {                      result[1] = dist;                  }                  return result;              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,FindCenterOfContainer,The following statement contains a magic number: for (int i = 0; i < _countOfR; i++)              {                  center[i] = ((container.Lower[i] + container.Upper[i]) / 2);              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,ChooseSplitAxis,The following statement contains a magic number: for (int i = 0; i < _countOfR; i++)              {                    currentContainers.Sort((x' y) => x.LowerPoint[i].CompareTo(y.LowerPoint[i]));                  currentContainers.Sort((x' y) => x.UpperPoint[i].CompareTo(y.UpperPoint[i]));                    var firstSeq = new List<IRTreeContainer>();                  var secondSeq = new List<IRTreeContainer>();                    firstSeq.AddRange(currentContainers.GetRange(0' MinCountOfNode));                  secondSeq.AddRange(currentContainers.GetRange(MinCountOfNode' currentContainers.Count - MinCountOfNode));                    var position = 0;                  marginValue[i] = FindMarginValue(firstSeq' i) +                                         FindMarginValue(secondSeq' i);                  while (position <= currentContainers.Count - 2 * MinCountOfNode)                  {                      firstSeq.Add(secondSeq.First());                      secondSeq.RemoveAt(0);                      marginValue[i] += FindMarginValue(firstSeq' i) +                                         FindMarginValue(secondSeq' i);                      position++;                  }              }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,ChooseSplitIndex,The following statement contains a magic number: while (position <= containers.Count - 2 * MinCountOfNode)              {                  firstSeqTest.Add(secondSeqTest.First());                  secondSeqTest.RemoveAt(0);                  var mbr1 = FindMBR(firstSeqTest);                  var mbr2 = FindMBR(secondSeqTest);                  var currentOverlap = FindOverlapValue(mbr1' mbr2);                  if (minOverlapValue > currentOverlap)                  {                      mbrParent1 = mbr1;                      mbrParent2 = mbr2;                      sequenzPosition = position;                      minOverlapValue = currentOverlap;                    }                  else                  {                      if (minOverlapValue == currentOverlap)                      {                          area1 = GetArea(mbrParent1);                          area2 = GetArea(mbrParent2);                          var currentArea1 = GetArea(mbr1);                          var currentArea2 = GetArea(mbr2);                            if (area1 + area2 > currentArea1 + currentArea2)                          {                              mbrParent1 = mbr1;                              mbrParent2 = mbr2;                              sequenzPosition = position;                              minOverlapValue = currentOverlap;                              area1 = currentArea1;                              area2 = currentArea2;                          }                      }                    }                  position++;                }
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,Initialize,The following statement contains a magic number: if (MinCountOfNode*2 > MaxCountOfNode+1)                  throw new Exception("with this parametrs MinCount and MaxCount is split method inposible");
Magic Number,NoSQL.GraphDB.Index.Spatial.Implementation.RTree,RTree,C:\repos\cosh_fallen-8\Fallen-8\Index\Spatial\Implementation\RTree\RTree.cs,Initialize,The following statement contains a magic number: _countOfReInsert = (MaxCountOfNode - MinCountOfNode) / 3;
Magic Number,NoSQL.GraphDB.Service.REST,AdminService,C:\repos\cosh_fallen-8\Fallen-8\Service\REST\AdminService.cs,AdminService,The following statement contains a magic number: _optimalNumberOfPartitions = Convert.ToUInt32(Environment.ProcessorCount * 3 / 2);
Magic Number,NoSQL.GraphDB.Service.REST,AdminService,C:\repos\cosh_fallen-8\Fallen-8\Service\REST\AdminService.cs,AdminService,The following statement contains a magic number: _optimalNumberOfPartitions = Convert.ToUInt32(Environment.ProcessorCount * 3 / 2);
Missing Default,NoSQL.GraphDB.Persistency,PersistencyFactory,C:\repos\cosh_fallen-8\Fallen-8\Persistency\PersistencyFactory.cs,LoadAGraphElementBunch,The following switch statement is missing a default case: switch (kind)                      {                          case SerializedEdge:                              //edge                              LoadEdge(reader' graphElementsOfFallen8' ref result);                              break;                            case SerializedVertex:                              //vertex                              LoadVertex(reader' graphElementsOfFallen8' edgeTodoOnVertex);                              break;                            case SerializedNull:                              //null --> do nothing                              break;                      }
