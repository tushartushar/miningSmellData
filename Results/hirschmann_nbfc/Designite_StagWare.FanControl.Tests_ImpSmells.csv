Implementation smell,Namespace,Class,File,Method,Description
Magic Number,StagWare.FanControl.Tests,Constructor,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,ThrowsWithInvalidTimespan,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new ArithmeticMeanTemperatureFilter(100' 0));
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: int interval = 2000;
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: int timespan = 6000;
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: double temperature = (i * 5.125);
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: sum -= (0 * 5.125);
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: sum += 40;
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: Assert.Equal(sum / (timespan / interval)' filter.FilterTemperature(40));
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: sum -= (1 * 5.125);
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: sum += -5;
Magic Number,StagWare.FanControl.Tests,FilterTemperature,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\ArithmeticMeanTemperatureFilterTests.cs,RespectsTimespan,The following statement contains a magic number: Assert.Equal(sum / (timespan / interval)' filter.FilterTemperature(-5));
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg }                  };
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: var fan = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg' 70' false }));
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: await Task.WhenAny(task' Task.Delay(cfg.EcPollInterval * 3)).ConfigureAwait(false);
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,RespectsReadOnlyArg,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg }                  };
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,RespectsReadOnlyArg,The following statement contains a magic number: var fan = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg' 70' false }));
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,RespectsReadOnlyArg,The following statement contains a magic number: await Task.WhenAny(task' Task.Delay(cfg.EcPollInterval * 3));
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,AppliesRegisterWriteConfigurations,The following statement contains a magic number: var registerWriteCfg = new RegisterWriteConfiguration()                  {                      Register = 123'                      Value = 12'                      WriteOccasion = RegisterWriteOccasion.OnInitialization                  };
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,AppliesRegisterWriteConfigurations,The following statement contains a magic number: var registerWriteCfg = new RegisterWriteConfiguration()                  {                      Register = 123'                      Value = 12'                      WriteOccasion = RegisterWriteOccasion.OnInitialization                  };
Magic Number,StagWare.FanControl.Tests,Start,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,AppliesRegisterWriteConfigurations,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg }'                      RegisterWriteConfigurations = { registerWriteCfg }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg1' fanCfg2 }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: var fan1 = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg1' 70' false }));
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: var fan2 = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg2' 70' false }));
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsSetTargetSpeed,The following statement contains a magic number: await Task.WhenAny(task' Task.Delay(cfg.EcPollInterval * 3)).ConfigureAwait(false);
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ThrowsWhenIndexIsInvalid,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { new FanConfiguration() }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ThrowsWhenIndexIsInvalid,The following statement contains a magic number: var exception = Record.Exception(() => fanControl.SetTargetFanSpeed(123' 12));
Magic Number,StagWare.FanControl.Tests,SetTargetFanSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ThrowsWhenIndexIsInvalid,The following statement contains a magic number: var exception = Record.Exception(() => fanControl.SetTargetFanSpeed(123' 12));
Magic Number,StagWare.FanControl.Tests,Stop,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsResetOnFans,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg }                  };
Magic Number,StagWare.FanControl.Tests,Stop,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsResetOnFans,The following statement contains a magic number: var fan = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg' 70' false }));
Magic Number,StagWare.FanControl.Tests,Stop,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ResetsRegisterWriteConfigurations,The following statement contains a magic number: var regWriteCfg = new RegisterWriteConfiguration()                  {                      Register = 123'                      Value = 12'                      ResetRequired = true'                      ResetValue = 24                  };
Magic Number,StagWare.FanControl.Tests,Stop,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ResetsRegisterWriteConfigurations,The following statement contains a magic number: var regWriteCfg = new RegisterWriteConfiguration()                  {                      Register = 123'                      Value = 12'                      ResetRequired = true'                      ResetValue = 24                  };
Magic Number,StagWare.FanControl.Tests,Stop,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ResetsRegisterWriteConfigurations,The following statement contains a magic number: var regWriteCfg = new RegisterWriteConfiguration()                  {                      Register = 123'                      Value = 12'                      ResetRequired = true'                      ResetValue = 24                  };
Magic Number,StagWare.FanControl.Tests,Stop,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,ResetsRegisterWriteConfigurations,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { new FanConfiguration() }'                      RegisterWriteConfigurations = { regWriteCfg }                  };
Magic Number,StagWare.FanControl.Tests,Dispose,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsResetOnFans,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg }                  };
Magic Number,StagWare.FanControl.Tests,Dispose,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,CallsResetOnFans,The following statement contains a magic number: var fan = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg' 70' false }));
Magic Number,StagWare.FanControl.Tests,Dispose,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,TriesToForceResetFans,The following statement contains a magic number: var cfg = new FanControlConfigV2()                  {                      EcPollInterval = 100'                      FanConfigurations = { fanCfg }                  };
Magic Number,StagWare.FanControl.Tests,Dispose,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanControlTests.cs,TriesToForceResetFans,The following statement contains a magic number: var fan = A.Fake<Fan>(opt => opt.WithArgumentsForConstructor(                      new object[] { ec' fanCfg' 70' false }));
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: byte expectedValue = (byte)Math.Round((cfg.MaxSpeedValue * speed) / 100);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: Assert.Equal(speed' fan.TargetSpeed' 10);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 20000                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 20000                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' true);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: fan.SetTargetSpeed(speed' 50' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: ushort expectedValue = (ushort)Math.Round((cfg.MaxSpeedValue * speed) / 100);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: Assert.Equal(speed' fan.TargetSpeed' 10);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesCriticalTemperature,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesCriticalTemperature,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesCriticalTemperature,The following statement contains a magic number: int criticalTemperature = 70;
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesCriticalTemperature,The following statement contains a magic number: fan.SetTargetSpeed(50' criticalTemperature + 1' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesCriticalTemperature,The following statement contains a magic number: Assert.Equal(100' fan.TargetSpeed' 10);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesCriticalTemperature,The following statement contains a magic number: Assert.Equal(100' fan.TargetSpeed' 10);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: var fan1 = new Fan(ec' cfg' 100' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: fan1.SetTargetSpeed(100' 50' true);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: fan1.SetTargetSpeed(100' 50' true);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: var fan2 = new Fan(ec' cfg' 100' true);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: fan2.SetTargetSpeed(100' 50' true);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,DoesRespectReadOnlyArg,The following statement contains a magic number: fan2.SetTargetSpeed(100' 50' true);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesAutoControl,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesAutoControl,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesAutoControl,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,HandlesAutoControl,The following statement contains a magic number: fan.SetTargetSpeed(Fan.AutoFanSpeed' 50' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverrides,The following statement contains a magic number: var fanSpeedOverride = new FanSpeedPercentageOverride()                  {                      FanSpeedPercentage = 0'                      FanSpeedValue = 255'                      TargetOperation = OverrideTargetOperation.Write                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverrides,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200'                      FanSpeedPercentageOverrides = new List<FanSpeedPercentageOverride>()                      {                          fanSpeedOverride                      }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverrides,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200'                      FanSpeedPercentageOverrides = new List<FanSpeedPercentageOverride>()                      {                          fanSpeedOverride                      }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverrides,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverrides,The following statement contains a magic number: fan.SetTargetSpeed(fanSpeedOverride.FanSpeedPercentage' 50' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: var fanSpeedOverride = new FanSpeedPercentageOverride()                  {                      FanSpeedPercentage = 100'                      FanSpeedValue = 255'                      TargetOperation = OverrideTargetOperation.Write                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: var fanSpeedOverride = new FanSpeedPercentageOverride()                  {                      FanSpeedPercentage = 100'                      FanSpeedValue = 255'                      TargetOperation = OverrideTargetOperation.Write                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200'                      FanSpeedPercentageOverrides = new List<FanSpeedPercentageOverride>()                  {                      fanSpeedOverride                  }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200'                      FanSpeedPercentageOverrides = new List<FanSpeedPercentageOverride>()                  {                      fanSpeedOverride                  }                  };
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: int criticalTemperature = 70;
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: fan.SetTargetSpeed(50' criticalTemperature + 1' false);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: Assert.Equal(100' fan.TargetSpeed' 10);
Magic Number,StagWare.FanControl.Tests,SetTargetSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,AppliesFanSpeedOverridesWhenTempIsCritical,The following statement contains a magic number: Assert.Equal(100' fan.TargetSpeed' 10);
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadByte,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      ReadRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadByte,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      ReadRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 200                  };
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadByte,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' false);
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadByte,The following statement contains a magic number: Assert.Equal(100' fan.CurrentSpeed);
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadWord,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      ReadRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 20000                  };
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadWord,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      ReadRegister = 123'                      MinSpeedValue = 0'                      MaxSpeedValue = 20000                  };
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadWord,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' true);
Magic Number,StagWare.FanControl.Tests,GetCurrentSpeed,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsReadWord,The following statement contains a magic number: Assert.Equal(100' fan.CurrentSpeed);
Magic Number,StagWare.FanControl.Tests,Reset,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      ResetRequired = true'                      FanSpeedResetValue = byte.MaxValue                  };
Magic Number,StagWare.FanControl.Tests,Reset,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteByte,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' false);
Magic Number,StagWare.FanControl.Tests,Reset,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: var cfg = new FanConfiguration()                  {                      WriteRegister = 123'                      ResetRequired = true'                      FanSpeedResetValue = ushort.MaxValue                  };
Magic Number,StagWare.FanControl.Tests,Reset,D:\research\architectureSmells\repos\hirschmann_nbfc\Tests\StagWare.FanControl.Tests\FanTests.cs,CallsWriteWord,The following statement contains a magic number: var fan = new Fan(ec' cfg' 100' true);
