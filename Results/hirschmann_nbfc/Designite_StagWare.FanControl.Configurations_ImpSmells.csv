Implementation smell,Namespace,Class,File,Method,Description
Complex Method,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,Cyclomatic complexity of the method is 9
Long Statement,StagWare.FanControl.Configurations,FanControlConfigV2,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfigV2.cs,Clone,The length of the statement  "		RegisterWriteConfigurations = this.RegisterWriteConfigurations.Select (x => x.Clone () as RegisterWriteConfiguration).ToList () " is 127.
Long Statement,StagWare.FanControl.Configurations,FanConfiguration,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanConfiguration.cs,Clone,The length of the statement  "		FanSpeedPercentageOverrides = this.FanSpeedPercentageOverrides.Select (x => x.Clone () as FanSpeedPercentageOverride).ToList () " is 127.
Empty Catch Block,StagWare.Configurations,ConfigManager,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ConfigManager.cs,LoadConfig,The method has an empty catch block.
Magic Number,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,The following statement contains a magic number: for (int i = 0; i < maxString.Length; i++) {  	int rowIdx = i % 2;  	for (int j = 0; j < minString.Length; j++) {  		if (maxString [i] == minString [j]) {  			if ((i == 0) || (j == 0)) {  				lookup [rowIdx] [j] = 1;  			} else {  				lookup [rowIdx] [j] = lookup [(rowIdx + 1) % 2] [j - 1] + 1;  			}  			if (lookup [rowIdx] [j] > substrLength) {  				substrLength = lookup [rowIdx] [j];  				substrEndIndices.Clear ();  				substrEndIndices.Add (i);  			} else if (lookup [rowIdx] [j] == substrLength) {  				substrEndIndices.Add (i);  			}  		} else {  			lookup [rowIdx] [j] = 0;  		}  	}  }  
Magic Number,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,The following statement contains a magic number: for (int i = 0; i < maxString.Length; i++) {  	int rowIdx = i % 2;  	for (int j = 0; j < minString.Length; j++) {  		if (maxString [i] == minString [j]) {  			if ((i == 0) || (j == 0)) {  				lookup [rowIdx] [j] = 1;  			} else {  				lookup [rowIdx] [j] = lookup [(rowIdx + 1) % 2] [j - 1] + 1;  			}  			if (lookup [rowIdx] [j] > substrLength) {  				substrLength = lookup [rowIdx] [j];  				substrEndIndices.Clear ();  				substrEndIndices.Add (i);  			} else if (lookup [rowIdx] [j] == substrLength) {  				substrEndIndices.Add (i);  			}  		} else {  			lookup [rowIdx] [j] = 0;  		}  	}  }  
Magic Number,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,The following statement contains a magic number: for (int j = 0; j < minString.Length; j++) {  	if (maxString [i] == minString [j]) {  		if ((i == 0) || (j == 0)) {  			lookup [rowIdx] [j] = 1;  		} else {  			lookup [rowIdx] [j] = lookup [(rowIdx + 1) % 2] [j - 1] + 1;  		}  		if (lookup [rowIdx] [j] > substrLength) {  			substrLength = lookup [rowIdx] [j];  			substrEndIndices.Clear ();  			substrEndIndices.Add (i);  		} else if (lookup [rowIdx] [j] == substrLength) {  			substrEndIndices.Add (i);  		}  	} else {  		lookup [rowIdx] [j] = 0;  	}  }  
Magic Number,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,The following statement contains a magic number: if (maxString [i] == minString [j]) {  	if ((i == 0) || (j == 0)) {  		lookup [rowIdx] [j] = 1;  	} else {  		lookup [rowIdx] [j] = lookup [(rowIdx + 1) % 2] [j - 1] + 1;  	}  	if (lookup [rowIdx] [j] > substrLength) {  		substrLength = lookup [rowIdx] [j];  		substrEndIndices.Clear ();  		substrEndIndices.Add (i);  	} else if (lookup [rowIdx] [j] == substrLength) {  		substrEndIndices.Add (i);  	}  } else {  	lookup [rowIdx] [j] = 0;  }  
Magic Number,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,The following statement contains a magic number: if ((i == 0) || (j == 0)) {  	lookup [rowIdx] [j] = 1;  } else {  	lookup [rowIdx] [j] = lookup [(rowIdx + 1) % 2] [j - 1] + 1;  }  
Magic Number,StagWare.ExtensionMethods,StringExtensionMethods,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\ExtensionMethods\StringExtensionMethods.cs,GetLongestCommonSubstrings,The following statement contains a magic number: lookup [rowIdx] [j] = lookup [(rowIdx + 1) % 2] [j - 1] + 1;  
Magic Number,StagWare.FanControl.Configurations,FanControlConfigManager,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfigManager.cs,GetSimilarityIndex,The following statement contains a magic number: foreach (string s1 in modelName1.Split (new[] {  	' '  }' StringSplitOptions.RemoveEmptyEntries)) {  	double maxSimilarity = 0;  	foreach (string s2 in modelName2.Split (new[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries)) {  		int lcsLength = s1.GetLongestCommonSubstring (s2).Length;  		if (lcsLength < 2) {  			continue;  		}  		double similarity = (double)lcsLength / Math.Max (s1.Length' s2.Length);  		maxSimilarity = Math.Max (maxSimilarity' similarity);  	}  	result += maxSimilarity;  }  
Magic Number,StagWare.FanControl.Configurations,FanControlConfigManager,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfigManager.cs,GetSimilarityIndex,The following statement contains a magic number: foreach (string s2 in modelName2.Split (new[] {  	' '  }' StringSplitOptions.RemoveEmptyEntries)) {  	int lcsLength = s1.GetLongestCommonSubstring (s2).Length;  	if (lcsLength < 2) {  		continue;  	}  	double similarity = (double)lcsLength / Math.Max (s1.Length' s2.Length);  	maxSimilarity = Math.Max (maxSimilarity' similarity);  }  
Magic Number,StagWare.FanControl.Configurations,FanControlConfigManager,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfigManager.cs,GetSimilarityIndex,The following statement contains a magic number: if (lcsLength < 2) {  	continue;  }  
Magic Number,StagWare.FanControl.Configurations,FanControlConfig,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfig.cs,FanControlConfig,The following statement contains a magic number: EcPollInterval = 3000;  
Magic Number,StagWare.FanControl.Configurations,FanControlConfigV2,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfigV2.cs,FanControlConfigV2,The following statement contains a magic number: this.CriticalTemperature = 75;  
Magic Number,StagWare.FanControl.Configurations,FanControlConfigV2,F:\newReposMay17\hirschmann_nbfc\Core\StagWare.Configurations\FanControlConfigV2.cs,FanControlConfigV2,The following statement contains a magic number: this.EcPollInterval = 3000;  
