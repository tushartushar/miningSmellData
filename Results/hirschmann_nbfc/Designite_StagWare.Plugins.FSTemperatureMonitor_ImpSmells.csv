Implementation smell,Namespace,Class,File,Method,Description
Complex Method,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,Cyclomatic complexity of the method is 10
Empty Catch Block,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The method has an empty catch block.
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,GetTemperature,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	try {  		string src = File.ReadAllText (sourceFilePath);  		temp = double.Parse (src' NumberStyles.Number' CultureInfo.InvariantCulture) * multiplier;  		break;  	} catch (FormatException e) {  		lastException = e;  		break;  	} catch (IOException e) {  		lastException = e;  	}  	Thread.Sleep (50);  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,GetTemperature,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	try {  		string src = File.ReadAllText (sourceFilePath);  		temp = double.Parse (src' NumberStyles.Number' CultureInfo.InvariantCulture) * multiplier;  		break;  	} catch (FormatException e) {  		lastException = e;  		break;  	} catch (IOException e) {  		lastException = e;  	}  	Thread.Sleep (50);  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,GetTemperature,The following statement contains a magic number: Thread.Sleep (50);  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix) {  	for (int i = 0; i < 10; i++) {  		foreach (string s in LinuxHwmonDirs) {  			string dir = string.Format (s' i);  			string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  			if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  				continue;  			}  			string sensorName = File.ReadAllText (sensorNameFile).Trim ();  			if (LinuxTempSensorNames.Contains (sensorName)) {  				for (int j = 0; j < 10; j++) {  					string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  					if (File.Exists (sensorFile)) {  						try {  							GetTemperature (sensorFile' 0.001);  							var src = new TemperatureSource (sensorFile' 0.001);  							sources.Add (src);  						} catch (Exception) {  						}  					}  				}  				if (sources.Count > 0) {  					return sources;  				}  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix) {  	for (int i = 0; i < 10; i++) {  		foreach (string s in LinuxHwmonDirs) {  			string dir = string.Format (s' i);  			string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  			if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  				continue;  			}  			string sensorName = File.ReadAllText (sensorNameFile).Trim ();  			if (LinuxTempSensorNames.Contains (sensorName)) {  				for (int j = 0; j < 10; j++) {  					string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  					if (File.Exists (sensorFile)) {  						try {  							GetTemperature (sensorFile' 0.001);  							var src = new TemperatureSource (sensorFile' 0.001);  							sources.Add (src);  						} catch (Exception) {  						}  					}  				}  				if (sources.Count > 0) {  					return sources;  				}  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix) {  	for (int i = 0; i < 10; i++) {  		foreach (string s in LinuxHwmonDirs) {  			string dir = string.Format (s' i);  			string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  			if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  				continue;  			}  			string sensorName = File.ReadAllText (sensorNameFile).Trim ();  			if (LinuxTempSensorNames.Contains (sensorName)) {  				for (int j = 0; j < 10; j++) {  					string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  					if (File.Exists (sensorFile)) {  						try {  							GetTemperature (sensorFile' 0.001);  							var src = new TemperatureSource (sensorFile' 0.001);  							sources.Add (src);  						} catch (Exception) {  						}  					}  				}  				if (sources.Count > 0) {  					return sources;  				}  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (Environment.OSVersion.Platform == PlatformID.Unix) {  	for (int i = 0; i < 10; i++) {  		foreach (string s in LinuxHwmonDirs) {  			string dir = string.Format (s' i);  			string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  			if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  				continue;  			}  			string sensorName = File.ReadAllText (sensorNameFile).Trim ();  			if (LinuxTempSensorNames.Contains (sensorName)) {  				for (int j = 0; j < 10; j++) {  					string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  					if (File.Exists (sensorFile)) {  						try {  							GetTemperature (sensorFile' 0.001);  							var src = new TemperatureSource (sensorFile' 0.001);  							sources.Add (src);  						} catch (Exception) {  						}  					}  				}  				if (sources.Count > 0) {  					return sources;  				}  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	foreach (string s in LinuxHwmonDirs) {  		string dir = string.Format (s' i);  		string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  		if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  			continue;  		}  		string sensorName = File.ReadAllText (sensorNameFile).Trim ();  		if (LinuxTempSensorNames.Contains (sensorName)) {  			for (int j = 0; j < 10; j++) {  				string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  				if (File.Exists (sensorFile)) {  					try {  						GetTemperature (sensorFile' 0.001);  						var src = new TemperatureSource (sensorFile' 0.001);  						sources.Add (src);  					} catch (Exception) {  					}  				}  			}  			if (sources.Count > 0) {  				return sources;  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	foreach (string s in LinuxHwmonDirs) {  		string dir = string.Format (s' i);  		string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  		if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  			continue;  		}  		string sensorName = File.ReadAllText (sensorNameFile).Trim ();  		if (LinuxTempSensorNames.Contains (sensorName)) {  			for (int j = 0; j < 10; j++) {  				string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  				if (File.Exists (sensorFile)) {  					try {  						GetTemperature (sensorFile' 0.001);  						var src = new TemperatureSource (sensorFile' 0.001);  						sources.Add (src);  					} catch (Exception) {  					}  				}  			}  			if (sources.Count > 0) {  				return sources;  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	foreach (string s in LinuxHwmonDirs) {  		string dir = string.Format (s' i);  		string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  		if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  			continue;  		}  		string sensorName = File.ReadAllText (sensorNameFile).Trim ();  		if (LinuxTempSensorNames.Contains (sensorName)) {  			for (int j = 0; j < 10; j++) {  				string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  				if (File.Exists (sensorFile)) {  					try {  						GetTemperature (sensorFile' 0.001);  						var src = new TemperatureSource (sensorFile' 0.001);  						sources.Add (src);  					} catch (Exception) {  					}  				}  			}  			if (sources.Count > 0) {  				return sources;  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	foreach (string s in LinuxHwmonDirs) {  		string dir = string.Format (s' i);  		string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  		if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  			continue;  		}  		string sensorName = File.ReadAllText (sensorNameFile).Trim ();  		if (LinuxTempSensorNames.Contains (sensorName)) {  			for (int j = 0; j < 10; j++) {  				string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  				if (File.Exists (sensorFile)) {  					try {  						GetTemperature (sensorFile' 0.001);  						var src = new TemperatureSource (sensorFile' 0.001);  						sources.Add (src);  					} catch (Exception) {  					}  				}  			}  			if (sources.Count > 0) {  				return sources;  			}  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: foreach (string s in LinuxHwmonDirs) {  	string dir = string.Format (s' i);  	string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  	if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  		continue;  	}  	string sensorName = File.ReadAllText (sensorNameFile).Trim ();  	if (LinuxTempSensorNames.Contains (sensorName)) {  		for (int j = 0; j < 10; j++) {  			string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  			if (File.Exists (sensorFile)) {  				try {  					GetTemperature (sensorFile' 0.001);  					var src = new TemperatureSource (sensorFile' 0.001);  					sources.Add (src);  				} catch (Exception) {  				}  			}  		}  		if (sources.Count > 0) {  			return sources;  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: foreach (string s in LinuxHwmonDirs) {  	string dir = string.Format (s' i);  	string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  	if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  		continue;  	}  	string sensorName = File.ReadAllText (sensorNameFile).Trim ();  	if (LinuxTempSensorNames.Contains (sensorName)) {  		for (int j = 0; j < 10; j++) {  			string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  			if (File.Exists (sensorFile)) {  				try {  					GetTemperature (sensorFile' 0.001);  					var src = new TemperatureSource (sensorFile' 0.001);  					sources.Add (src);  				} catch (Exception) {  				}  			}  		}  		if (sources.Count > 0) {  			return sources;  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: foreach (string s in LinuxHwmonDirs) {  	string dir = string.Format (s' i);  	string sensorNameFile = Path.Combine (dir' LinuxTempSensorNameFile);  	if (!Directory.Exists (dir) || !File.Exists (sensorNameFile)) {  		continue;  	}  	string sensorName = File.ReadAllText (sensorNameFile).Trim ();  	if (LinuxTempSensorNames.Contains (sensorName)) {  		for (int j = 0; j < 10; j++) {  			string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  			if (File.Exists (sensorFile)) {  				try {  					GetTemperature (sensorFile' 0.001);  					var src = new TemperatureSource (sensorFile' 0.001);  					sources.Add (src);  				} catch (Exception) {  				}  			}  		}  		if (sources.Count > 0) {  			return sources;  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (LinuxTempSensorNames.Contains (sensorName)) {  	for (int j = 0; j < 10; j++) {  		string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  		if (File.Exists (sensorFile)) {  			try {  				GetTemperature (sensorFile' 0.001);  				var src = new TemperatureSource (sensorFile' 0.001);  				sources.Add (src);  			} catch (Exception) {  			}  		}  	}  	if (sources.Count > 0) {  		return sources;  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (LinuxTempSensorNames.Contains (sensorName)) {  	for (int j = 0; j < 10; j++) {  		string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  		if (File.Exists (sensorFile)) {  			try {  				GetTemperature (sensorFile' 0.001);  				var src = new TemperatureSource (sensorFile' 0.001);  				sources.Add (src);  			} catch (Exception) {  			}  		}  	}  	if (sources.Count > 0) {  		return sources;  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (LinuxTempSensorNames.Contains (sensorName)) {  	for (int j = 0; j < 10; j++) {  		string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  		if (File.Exists (sensorFile)) {  			try {  				GetTemperature (sensorFile' 0.001);  				var src = new TemperatureSource (sensorFile' 0.001);  				sources.Add (src);  			} catch (Exception) {  			}  		}  	}  	if (sources.Count > 0) {  		return sources;  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  	if (File.Exists (sensorFile)) {  		try {  			GetTemperature (sensorFile' 0.001);  			var src = new TemperatureSource (sensorFile' 0.001);  			sources.Add (src);  		} catch (Exception) {  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  	if (File.Exists (sensorFile)) {  		try {  			GetTemperature (sensorFile' 0.001);  			var src = new TemperatureSource (sensorFile' 0.001);  			sources.Add (src);  		} catch (Exception) {  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: for (int j = 0; j < 10; j++) {  	string sensorFile = Path.Combine (dir' string.Format (LinuxTempSensorFile' j));  	if (File.Exists (sensorFile)) {  		try {  			GetTemperature (sensorFile' 0.001);  			var src = new TemperatureSource (sensorFile' 0.001);  			sources.Add (src);  		} catch (Exception) {  		}  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (File.Exists (sensorFile)) {  	try {  		GetTemperature (sensorFile' 0.001);  		var src = new TemperatureSource (sensorFile' 0.001);  		sources.Add (src);  	} catch (Exception) {  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: if (File.Exists (sensorFile)) {  	try {  		GetTemperature (sensorFile' 0.001);  		var src = new TemperatureSource (sensorFile' 0.001);  		sources.Add (src);  	} catch (Exception) {  	}  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: try {  	GetTemperature (sensorFile' 0.001);  	var src = new TemperatureSource (sensorFile' 0.001);  	sources.Add (src);  } catch (Exception) {  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: try {  	GetTemperature (sensorFile' 0.001);  	var src = new TemperatureSource (sensorFile' 0.001);  	sources.Add (src);  } catch (Exception) {  }  
Magic Number,StagWare.Plugins.Generic,FSTemperatureMonitor,F:\newReposMay17\hirschmann_nbfc\Core\Plugins\StagWare.Plugins.FSTemperatureMonitor\FSTemperatureMonitor.cs,FindTemperatureSources,The following statement contains a magic number: GetTemperature (sensorFile' 0.001);  
