Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Hanselman.UWP,MainPage,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\MainPage.xaml.cs,MainPage,The following statement contains a magic number: ApplicationView.PreferredLaunchViewSize = new Size(800' 600);
Magic Number,Hanselman.UWP,MainPage,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\MainPage.xaml.cs,MainPage,The following statement contains a magic number: ApplicationView.PreferredLaunchViewSize = new Size(800' 600);
Magic Number,Hanselman.UWP,MainPage,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\MainPage.xaml.cs,MainPage,The following statement contains a magic number: ApplicationView.GetForCurrentView().SetPreferredMinSize(new Size(800' 600));
Magic Number,Hanselman.UWP,MainPage,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\MainPage.xaml.cs,MainPage,The following statement contains a magic number: ApplicationView.GetForCurrentView().SetPreferredMinSize(new Size(800' 600));
Magic Number,ImageCircle.Forms.Plugin.UWP,ImageCircleRenderer,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\Renderers\ImageCircle.cs,OnElementPropertyChanged,The following statement contains a magic number: if (Control != null)              {                  var min = Math.Min(Element.Width' Element.Height) / 2.0f;                  if (min <= 0)                      return;                    try                  {                        Control.Width = Element.Width;                      Control.Height = Element.Height;                        // That will be our fallback fill if can't make sense of the ImageSource.                      var color = ((ImageCircle.Forms.Plugin.Abstractions.CircleImage)Element).BorderColor;                      Control.Fill = new SolidColorBrush(Windows.UI.Color.FromArgb(                          (byte)(color.A * 255)'                          (byte)(color.R * 255)'                          (byte)(color.G * 255)'                          (byte)(color.B * 255)));                          BitmapImage bitmapImage = null;                        // Handle file images                      if (Element.Source is FileImageSource)                      {                          var fi = Element.Source as FileImageSource;                          var myFile = System.IO.Path.Combine(Package.Current.InstalledLocation.Path' fi.File);                          var myFolder = await StorageFolder.GetFolderFromPathAsync(System.IO.Path.GetDirectoryName(myFile));                            using (Stream s = await myFolder.OpenStreamForReadAsync(System.IO.Path.GetFileName(myFile)))                          {                              var memStream = new MemoryStream();                              await s.CopyToAsync(memStream);                              memStream.Position = 0;                              bitmapImage = new BitmapImage();                              bitmapImage.SetSource(memStream.AsRandomAccessStream());                          }                        }                        // Handle uri images                      if (Element.Source is UriImageSource)                          bitmapImage = new BitmapImage((Element.Source as UriImageSource).Uri);                        if (bitmapImage != null)                          Control.Fill = new ImageBrush() { ImageSource = bitmapImage' Stretch = Stretch.UniformToFill };                  }                  catch                  {                      System.Diagnostics.Debug.WriteLine("Unable to create cicrle image");                  }              }
Magic Number,ImageCircle.Forms.Plugin.UWP,ImageCircleRenderer,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\Renderers\ImageCircle.cs,OnElementPropertyChanged,The following statement contains a magic number: if (Control != null)              {                  var min = Math.Min(Element.Width' Element.Height) / 2.0f;                  if (min <= 0)                      return;                    try                  {                        Control.Width = Element.Width;                      Control.Height = Element.Height;                        // That will be our fallback fill if can't make sense of the ImageSource.                      var color = ((ImageCircle.Forms.Plugin.Abstractions.CircleImage)Element).BorderColor;                      Control.Fill = new SolidColorBrush(Windows.UI.Color.FromArgb(                          (byte)(color.A * 255)'                          (byte)(color.R * 255)'                          (byte)(color.G * 255)'                          (byte)(color.B * 255)));                          BitmapImage bitmapImage = null;                        // Handle file images                      if (Element.Source is FileImageSource)                      {                          var fi = Element.Source as FileImageSource;                          var myFile = System.IO.Path.Combine(Package.Current.InstalledLocation.Path' fi.File);                          var myFolder = await StorageFolder.GetFolderFromPathAsync(System.IO.Path.GetDirectoryName(myFile));                            using (Stream s = await myFolder.OpenStreamForReadAsync(System.IO.Path.GetFileName(myFile)))                          {                              var memStream = new MemoryStream();                              await s.CopyToAsync(memStream);                              memStream.Position = 0;                              bitmapImage = new BitmapImage();                              bitmapImage.SetSource(memStream.AsRandomAccessStream());                          }                        }                        // Handle uri images                      if (Element.Source is UriImageSource)                          bitmapImage = new BitmapImage((Element.Source as UriImageSource).Uri);                        if (bitmapImage != null)                          Control.Fill = new ImageBrush() { ImageSource = bitmapImage' Stretch = Stretch.UniformToFill };                  }                  catch                  {                      System.Diagnostics.Debug.WriteLine("Unable to create cicrle image");                  }              }
Magic Number,ImageCircle.Forms.Plugin.UWP,ImageCircleRenderer,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\Renderers\ImageCircle.cs,OnElementPropertyChanged,The following statement contains a magic number: if (Control != null)              {                  var min = Math.Min(Element.Width' Element.Height) / 2.0f;                  if (min <= 0)                      return;                    try                  {                        Control.Width = Element.Width;                      Control.Height = Element.Height;                        // That will be our fallback fill if can't make sense of the ImageSource.                      var color = ((ImageCircle.Forms.Plugin.Abstractions.CircleImage)Element).BorderColor;                      Control.Fill = new SolidColorBrush(Windows.UI.Color.FromArgb(                          (byte)(color.A * 255)'                          (byte)(color.R * 255)'                          (byte)(color.G * 255)'                          (byte)(color.B * 255)));                          BitmapImage bitmapImage = null;                        // Handle file images                      if (Element.Source is FileImageSource)                      {                          var fi = Element.Source as FileImageSource;                          var myFile = System.IO.Path.Combine(Package.Current.InstalledLocation.Path' fi.File);                          var myFolder = await StorageFolder.GetFolderFromPathAsync(System.IO.Path.GetDirectoryName(myFile));                            using (Stream s = await myFolder.OpenStreamForReadAsync(System.IO.Path.GetFileName(myFile)))                          {                              var memStream = new MemoryStream();                              await s.CopyToAsync(memStream);                              memStream.Position = 0;                              bitmapImage = new BitmapImage();                              bitmapImage.SetSource(memStream.AsRandomAccessStream());                          }                        }                        // Handle uri images                      if (Element.Source is UriImageSource)                          bitmapImage = new BitmapImage((Element.Source as UriImageSource).Uri);                        if (bitmapImage != null)                          Control.Fill = new ImageBrush() { ImageSource = bitmapImage' Stretch = Stretch.UniformToFill };                  }                  catch                  {                      System.Diagnostics.Debug.WriteLine("Unable to create cicrle image");                  }              }
Magic Number,ImageCircle.Forms.Plugin.UWP,ImageCircleRenderer,C:\repos\jamesmontemagno_Hanselman.Forms\Hanselman.UWP\Renderers\ImageCircle.cs,OnElementPropertyChanged,The following statement contains a magic number: if (Control != null)              {                  var min = Math.Min(Element.Width' Element.Height) / 2.0f;                  if (min <= 0)                      return;                    try                  {                        Control.Width = Element.Width;                      Control.Height = Element.Height;                        // That will be our fallback fill if can't make sense of the ImageSource.                      var color = ((ImageCircle.Forms.Plugin.Abstractions.CircleImage)Element).BorderColor;                      Control.Fill = new SolidColorBrush(Windows.UI.Color.FromArgb(                          (byte)(color.A * 255)'                          (byte)(color.R * 255)'                          (byte)(color.G * 255)'                          (byte)(color.B * 255)));                          BitmapImage bitmapImage = null;                        // Handle file images                      if (Element.Source is FileImageSource)                      {                          var fi = Element.Source as FileImageSource;                          var myFile = System.IO.Path.Combine(Package.Current.InstalledLocation.Path' fi.File);                          var myFolder = await StorageFolder.GetFolderFromPathAsync(System.IO.Path.GetDirectoryName(myFile));                            using (Stream s = await myFolder.OpenStreamForReadAsync(System.IO.Path.GetFileName(myFile)))                          {                              var memStream = new MemoryStream();                              await s.CopyToAsync(memStream);                              memStream.Position = 0;                              bitmapImage = new BitmapImage();                              bitmapImage.SetSource(memStream.AsRandomAccessStream());                          }                        }                        // Handle uri images                      if (Element.Source is UriImageSource)                          bitmapImage = new BitmapImage((Element.Source as UriImageSource).Uri);                        if (bitmapImage != null)                          Control.Fill = new ImageBrush() { ImageSource = bitmapImage' Stretch = Stretch.UniformToFill };                  }                  catch                  {                      System.Diagnostics.Debug.WriteLine("Unable to create cicrle image");                  }              }
