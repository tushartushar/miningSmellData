Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Mindscape.Raygun4Net.WebApi,RaygunWebApiClientProvider,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\IRaygunWebApiClientProvider.cs,RaygunWebApiClientProvider,The length of the parameter generateRaygunClientWithHttpRequest is 35.
Long Identifier,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,AttachInternal,The length of the parameter generateRaygunClientWithMessage is 31.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,AttachInternal,The length of the statement  "      config.Services.Replace(typeof(IHttpControllerActivator)' new RaygunWebApiControllerActivator(concreteActivator' clientCreator)); " is 129.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,AttachInternal,The length of the statement  "      var concreteControllerSelector = config.Services.GetHttpControllerSelector() ?? new DefaultHttpControllerSelector(config); " is 122.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,AttachInternal,The length of the statement  "      config.Services.Replace(typeof(IHttpControllerSelector)' new RaygunWebApiControllerSelector(concreteControllerSelector' clientCreator)); " is 136.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,AttachInternal,The length of the statement  "      config.Services.Replace(typeof(IHttpActionSelector)' new RaygunWebApiActionSelector(concreteActionSelector' clientCreator)); " is 124.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,Detach,The length of the statement  "        int exceptionLoggerIndex = config.Services.FindIndex(typeof(IExceptionLogger)' (o) => o is RaygunWebApiExceptionLogger); " is 120.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,Detach,The length of the statement  "        RaygunWebApiControllerActivator controllerActivator = config.Services.GetHttpControllerActivator() as RaygunWebApiControllerActivator; " is 134.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,Detach,The length of the statement  "        RaygunWebApiControllerSelector controllerSelector = config.Services.GetHttpControllerSelector() as RaygunWebApiControllerSelector; " is 130.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,CanSend,The length of the statement  "      if (RaygunSettings.Settings.ExcludeErrorsFromLocal && _currentWebRequest.Value != null && _currentWebRequest.Value.IsLocal()) " is 125.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,BuildRequestMessage,The length of the statement  "      var message = _currentWebRequest.Value != null ? RaygunWebApiRequestMessageBuilder.Build(_currentWebRequest.Value' _requestMessageOptions) : null; " is 146.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,StripWrapperExceptions,The length of the statement  "      if (exception != null && _wrapperExceptions.Any(wrapperException => exception.GetType() == wrapperException && (exception.InnerException != null || exception is ReflectionTypeLoadException))) " is 191.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiActionFilter,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiFilters.cs,OnActionExecuted,The length of the statement  "      // Don't bother processing bad StatusCodes if there is an exception attached - it will be handled by another part of the framework. " is 131.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiActionFilter,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiFilters.cs,OnActionExecuted,The length of the statement  "      if (context != null && context.Exception == null && context.Response != null && (int)context.Response.StatusCode >= 400) " is 120.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiActionFilter,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiFilters.cs,OnActionExecuted,The length of the statement  "          string.Format("HTTP {0} returned while handling Request {2} {1}"' (int)context.Response.StatusCode' context.Request.RequestUri' context.Request.Method)' " is 152.
Long Statement,Mindscape.Raygun4Net.WebApi,RaygunWebApiMessageBuilder,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiMessageBuilder.cs,SetExceptionDetails,The length of the statement  "        string content = RaygunSettings.Settings.IsResponseContentIgnored ? null : responseException.Response.Content.ReadAsString(); " is 125.
Long Statement,Mindscape.Raygun4Net.WebApi.Builders,RaygunWebApiRequestMessageBuilder,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\Builders\RaygunWebApiRequestMessageBuilder.cs,Build,The length of the statement  "        if (contentType == null || CultureInfo.InvariantCulture.CompareInfo.IndexOf(contentType' "application/x-www-form-urlencoded"' CompareOptions.IgnoreCase) < 0) " is 157.
Complex Conditional,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,StripWrapperExceptions,The conditional expression  "exception != null && _wrapperExceptions.Any(wrapperException => exception.GetType() == wrapperException && (exception.InnerException != null || exception is ReflectionTypeLoadException))"  is complex.
Complex Conditional,Mindscape.Raygun4Net.WebApi,RaygunWebApiActionFilter,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiFilters.cs,OnActionExecuted,The conditional expression  "context != null && context.Exception == null && context.Response != null && (int)context.Response.StatusCode >= 400"  is complex.
Empty Catch Block,Mindscape.Raygun4Net.WebApi,RaygunHttpContentExtensions,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\Extensions\RaygunHttpContentExtensions.cs,ReadAsString,The method has an empty catch block.
Empty Catch Block,Mindscape.Raygun4Net.WebApi,RaygunWebApiClient,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiClient.cs,StripWrapperExceptions,The method has an empty catch block.
Magic Number,Mindscape.Raygun4Net.WebApi,RaygunHttpContentExtensions,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\Extensions\RaygunHttpContentExtensions.cs,ReadAsString,The following statement contains a magic number: try        {          var task = httpContent.ReadAsStreamAsync();          task.Wait();          var stream = task.Result;          if (stream != null && stream.CanSeek)          {            var lengthToRead = (int)(stream.Length < 4096 ? stream.Length : 4096);            var buffer = new byte[lengthToRead];              var stringTask = stream.ReadAsync(buffer' 0' lengthToRead);            stringTask.Wait();              var content = Encoding.UTF8.GetString(buffer);            stream.Seek(0' System.IO.SeekOrigin.Begin);            if (!string.IsNullOrEmpty(content))            {              return content;            }          }        }        catch { }
Magic Number,Mindscape.Raygun4Net.WebApi,RaygunHttpContentExtensions,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\Extensions\RaygunHttpContentExtensions.cs,ReadAsString,The following statement contains a magic number: try        {          var task = httpContent.ReadAsStreamAsync();          task.Wait();          var stream = task.Result;          if (stream != null && stream.CanSeek)          {            var lengthToRead = (int)(stream.Length < 4096 ? stream.Length : 4096);            var buffer = new byte[lengthToRead];              var stringTask = stream.ReadAsync(buffer' 0' lengthToRead);            stringTask.Wait();              var content = Encoding.UTF8.GetString(buffer);            stream.Seek(0' System.IO.SeekOrigin.Begin);            if (!string.IsNullOrEmpty(content))            {              return content;            }          }        }        catch { }
Magic Number,Mindscape.Raygun4Net.WebApi,RaygunWebApiDelegatingHandler,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiDelegatingHandler.cs,SendAsync,The following statement contains a magic number: if (stream != null && stream.CanSeek)        {          var lengthToRead = (int)(stream.Length < 4096 ? stream.Length : 4096);          var buffer = new byte[lengthToRead];            await stream.ReadAsync(buffer' 0' lengthToRead' cancellationToken);            var body = Encoding.UTF8.GetString(buffer);          if (!string.IsNullOrEmpty(body))          {            request.Properties[RequestBodyKey] = body;          }            stream.Seek(0' System.IO.SeekOrigin.Begin);        }
Magic Number,Mindscape.Raygun4Net.WebApi,RaygunWebApiDelegatingHandler,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiDelegatingHandler.cs,SendAsync,The following statement contains a magic number: if (stream != null && stream.CanSeek)        {          var lengthToRead = (int)(stream.Length < 4096 ? stream.Length : 4096);          var buffer = new byte[lengthToRead];            await stream.ReadAsync(buffer' 0' lengthToRead' cancellationToken);            var body = Encoding.UTF8.GetString(buffer);          if (!string.IsNullOrEmpty(body))          {            request.Properties[RequestBodyKey] = body;          }            stream.Seek(0' System.IO.SeekOrigin.Begin);        }
Magic Number,Mindscape.Raygun4Net.WebApi,RaygunWebApiActionFilter,C:\repos\MindscapeHQ_raygun4net\Mindscape.Raygun4Net.WebApi\RaygunWebApiFilters.cs,OnActionExecuted,The following statement contains a magic number: if (context != null && context.Exception == null && context.Response != null && (int)context.Response.StatusCode >= 400)        {          Exception e = new RaygunWebApiHttpException(            string.Format("HTTP {0} returned while handling Request {2} {1}"' (int)context.Response.StatusCode' context.Request.RequestUri' context.Request.Method)'            context.Response);            _clientCreator.GenerateRaygunWebApiClient(context.Request).SendInBackground(e);        }
