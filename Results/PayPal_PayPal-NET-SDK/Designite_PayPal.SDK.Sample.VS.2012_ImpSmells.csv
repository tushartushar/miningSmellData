Implementation smell,Namespace,Class,File,Method,Description
Long Method,PayPal.Sample,PaymentWithPayPalWithWebExperienceProfile,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPalWithWebExperienceProfile.aspx.cs,RunSample,The method has 167 lines of code.
Long Method,PayPal.Sample,AuthorizationVoid,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationVoid.aspx.cs,RunSample,The method has 109 lines of code.
Long Method,PayPal.Sample,InvoiceCancel,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceCancel.aspx.cs,RunSample,The method has 126 lines of code.
Long Method,PayPal.Sample,InvoiceCreate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceCreate.aspx.cs,RunSample,The method has 105 lines of code.
Long Method,PayPal.Sample,InvoiceDelete,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceDelete.aspx.cs,RunSample,The method has 113 lines of code.
Long Method,PayPal.Sample,InvoiceGetQrCode,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceGetQrCode.aspx.cs,RunSample,The method has 118 lines of code.
Long Method,PayPal.Sample,InvoiceDeletePayment,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceDeletePayment.aspx.cs,RunSample,The method has 162 lines of code.
Long Method,PayPal.Sample,InvoiceRecordPayment,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceRecordPayment.aspx.cs,RunSample,The method has 135 lines of code.
Long Method,PayPal.Sample,InvoiceDeleteRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceDeleteRefund.aspx.cs,RunSample,The method has 179 lines of code.
Long Method,PayPal.Sample,InvoiceRecordRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceRecordRefund.aspx.cs,RunSample,The method has 154 lines of code.
Long Method,PayPal.Sample,InvoiceSend,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceSend.aspx.cs,RunSample,The method has 114 lines of code.
Long Method,PayPal.Sample,InvoiceSendReminder,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceSendReminder.aspx.cs,RunSample,The method has 149 lines of code.
Long Method,PayPal.Sample,InvoiceUpdate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceUpdate.aspx.cs,RunSample,The method has 132 lines of code.
Long Method,PayPal.Sample,OrderSample,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\OrderSample.aspx.cs,RunSample,The method has 129 lines of code.
Long Method,PayPal.Sample,PaymentWithPayPalWithDiscount,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPalWithDiscount.aspx.cs,RunSample,The method has 147 lines of code.
Long Method,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The method has 125 lines of code.
Long Method,PayPal.Sample,PaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPal.aspx.cs,RunSample,The method has 150 lines of code.
Long Method,PayPal.Sample,ThirdPartyPaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\ThirdPartyPaymentWithPayPal.aspx.cs,RunSample,The method has 159 lines of code.
Long Method,PayPal.Sample,SaleRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\SaleRefund.aspx.cs,RunSample,The method has 166 lines of code.
Long Statement,PayPal.Sample,PayoutItemCancel,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PayoutItemCancel.aspx.cs,RunSample,The length of the statement  "            // `syncMode = true` indicates that this call will be performed **synchronously** and will return once the payout has been processed." is 133.
Long Statement,PayPal.Sample,AuthorizationCapture,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationCapture.aspx.cs,RunSample,The length of the statement  "            // Specify an amount to capture.  By setting 'is_final_capture' to true' all remaining funds held by the authorization will be released from the funding instrument." is 164.
Long Statement,PayPal.Sample,AuthorizationCapture,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationCapture.aspx.cs,RunSample,The length of the statement  "            this.flow.AddNewRequest("Capture authorized payment"' capture' string.Format("URI: v1/payments/authorization/{0}/capture"' authorization.id));" is 142.
Long Statement,PayPal.Sample,AuthorizationVoid,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationVoid.aspx.cs,RunSample,The length of the statement  "                // A resource representing a Payer that funds a payment. Use the List of `FundingInstrument` and the Payment Method as 'credit_card'" is 132.
Long Statement,PayPal.Sample,AuthorizationVoid,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationVoid.aspx.cs,RunSample,The length of the statement  "                    // A transaction defines the contract of a payment - what is the payment for and who is fulfilling it. Transaction is created with a `Payee` and `Amount` types" is 159.
Long Statement,PayPal.Sample,AuthorizationVoid,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationVoid.aspx.cs,RunSample,The length of the statement  "            this.flow.AddNewRequest("Void authorization"' description: string.Format("URI: v1/payments/authorization/{0}/void"' authorization.id));" is 135.
Long Statement,PayPal.Sample,BillingAgreementCreateAndExecute,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\BillingAgreementCreateAndExecute.aspx.cs,ExecuteBillingAgreement,The length of the statement  "            this.flow.AddNewRequest("Execute billing agreement"' description: string.Format("URI: v1/payments/billing-agreements/{0}/agreement-execute"' agreement.token));" is 159.
Long Statement,PayPal.Sample,BillingAgreementListTransactions,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\BillingAgreementListTransactions.aspx.cs,RunSample,The length of the statement  "            // The billing agreement being retrieved is one that was previously created and executed using a PayPal account as the funding source." is 134.
Long Statement,PayPal.Sample,BillingAgreementGet,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\BillingAgreementGet.aspx.cs,RunSample,The length of the statement  "            // The billing agreement being retrieved is one that was previously created and executed using a PayPal account as the funding source." is 134.
Long Statement,PayPal.Sample,BillingPlanUpdate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\BillingPlanUpdate.aspx.cs,RunSample,The length of the statement  "            // After it's been updated' get it again to make sure it was updated properly (and so we can see what it looks like afterwards)." is 128.
Long Statement,PayPal.Sample,PaymentWithPayPalWithDiscount,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPalWithDiscount.aspx.cs,RunSample,The length of the statement  "                    // These URLs will determine how the user is redirected from PayPal once they have either approved or canceled the payment." is 123.
Long Statement,PayPal.Sample,PaymentWithPayPalWithDiscount,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPalWithDiscount.aspx.cs,RunSample,The length of the statement  "                // Using the `links` provided by the `createdPayment` object' we can give the user the option to redirect to PayPal to approve the payment." is 139.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Make a payment with a PayPal account"' ExecutePage = "PaymentWithPayPal.aspx"' HasSourcePage = true }'" is 128.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Make a payment to a third party with a PayPal account"' ExecutePage = "ThirdPartyPaymentWithPayPal.aspx"' HasSourcePage = true }'" is 155.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Make a payment with a PayPal account and include a discount"' ExecutePage = "PaymentWithPayPalWithDiscount.aspx"' HasSourcePage = true }' " is 163.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve a history of payments"' ExecutePage = "GetPaymentHistory.aspx"' HasSourcePage = true }'" is 122.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve the details of a sale transaction (completed payment)"' ExecutePage = "GetSale.aspx"' HasSourcePage = true }'" is 144.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve the details of an authorized payment"' ExecutePage = "GetAuthorization.aspx"' HasSourcePage = true }'" is 136.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Capture an authorized payment"' ExecutePage = "AuthorizationCapture.aspx"' HasSourcePage = true }'" is 124.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve the details of a captured payment"' ExecutePage = "GetCapture.aspx"' HasSourcePage = true }'" is 127.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Create a new web experience profile"' ExecutePage = "PaymentExperienceCreate.aspx"' HasSourcePage = true }'" is 133.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve a web experience profile"' ExecutePage = "PaymentExperienceGet.aspx"' HasSourcePage = true }'" is 128.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "List web experience profiles"' ExecutePage = "PaymentExperienceGetList.aspx"' HasSourcePage = true }'" is 127.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Update a web experience profile"' ExecutePage = "PaymentExperienceUpdate.aspx"' HasSourcePage = true }'" is 129.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Partially update a web experience profile"' ExecutePage = "PaymentExperiencePartialUpdate.aspx"' HasSourcePage = true }'" is 146.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Delete a web experience profile"' ExecutePage = "PaymentExperienceDelete.aspx"' HasSourcePage = true }'" is 129.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Make a PayPal payment using a web experience profile"' ExecutePage = "PaymentWithPayPalWithWebExperienceProfile.aspx"' HasSourcePage = true }" is 167.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve the details of a billing plan"' ExecutePage = "BillingPlanGet.aspx"' HasSourcePage = true }'" is 127.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve a list of billing plans"' ExecutePage = "BillingPlanGetList.aspx"' HasSourcePage = true }'" is 125.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Setup a billing agreement using a PayPal account"' ExecutePage = "BillingAgreementCreateAndExecute.aspx"' HasSourcePage = true }'" is 155.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve the details of a billing agreement"' ExecutePage = "BillingAgreementGet.aspx"' HasSourcePage = true }'" is 137.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve a list of transactions for a billing agreement"' ExecutePage = "BillingAgreementListTransactions.aspx"' HasSourcePage = true }" is 161.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Create an invoice template"' ExecutePage = "InvoiceTemplateCreate.aspx"' HasSourcePage = true }'" is 122.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Delete an invoice template"' ExecutePage = "InvoiceTemplateDelete.aspx"' HasSourcePage = true }'" is 122.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve an invoice template"' ExecutePage = "InvoiceTemplateRetrieve.aspx"' HasSourcePage = true }'" is 126.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retreive a list of invoice templates"' ExecutePage = "InvoiceTemplateRetrieveList.aspx"' HasSourcePage = true }'" is 138.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Update an invoice template"' ExecutePage = "InvoiceTemplateUpdate.aspx"' HasSourcePage = true }'" is 122.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve a list of recent webhook events"' ExecutePage = "WebhookEventList.aspx"' HasSourcePage = true }'" is 131.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Delete all webhooks"' ExecutePage = "WebhookDelete.aspx?deleteAll=true"' Note = "Use this if you get the error WEBHOOK_NUMBER_LIMIT_EXCEEDED" }'" is 170.
Long Statement,PayPal.Sample,Default,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Default.aspx.cs,Page_Load,The length of the statement  "                            new SampleItem { Title = "Retrieve the details of a payout item"' ExecutePage = "PayoutItemGet.aspx"' HasSourcePage = true }'" is 125.
Long Statement,PayPal.Sample,GetPayment,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\GetPayment.aspx.cs,RunSample,The length of the statement  "            // Specify a Payment ID to retrieve.  For demonstration purposes' we'll be using a previously-executed payment that used a PayPal account." is 138.
Long Statement,PayPal.Sample,PaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPal.aspx.cs,RunSample,The length of the statement  "                // These URLs will determine how the user is redirected from PayPal once they have either approved or canceled the payment." is 123.
Long Statement,PayPal.Sample,PaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPal.aspx.cs,RunSample,The length of the statement  "                // Using the `links` provided by the `createdPayment` object' we can give the user the option to redirect to PayPal to approve the payment." is 139.
Long Statement,PayPal.Sample,ThirdPartyPaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\ThirdPartyPaymentWithPayPal.aspx.cs,RunSample,The length of the statement  "                // These URLs will determine how the user is redirected from PayPal once they have either approved or canceled the payment." is 123.
Long Statement,PayPal.Sample,ThirdPartyPaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\ThirdPartyPaymentWithPayPal.aspx.cs,RunSample,The length of the statement  "                // Using the `links` provided by the `createdPayment` object' we can give the user the option to redirect to PayPal to approve the payment." is 139.
Long Statement,PayPal.Sample,SaleRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\SaleRefund.aspx.cs,RunSample,The length of the statement  "                // These URLs will determine how the user is redirected from PayPal once they have either approved or canceled the payment." is 123.
Long Statement,PayPal.Sample,SaleRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\SaleRefund.aspx.cs,RunSample,The length of the statement  "                // Using the `links` provided by the `createdPayment` object' we can give the user the option to redirect to PayPal to approve the payment." is 139.
Long Statement,PayPal.Sample,VerifyWebhookSignature,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\VerifyWebhookSignature.aspx.cs,RunSample,The length of the statement  "            string accessToken = new OAuthTokenCredential("EBWKjlELKMYqRNQ6sYvFo64FtaRLRR5BdHEESmha49TM"' "EO422dn3gQLgDbuwqTjzrFgFtaRLRR5BdHEESmha49TM"' Configuration.GetConfig()).GetAccessToken();" is 186.
Long Statement,PayPal.Sample,VerifyWebhookSignature,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\VerifyWebhookSignature.aspx.cs,RunSample,The length of the statement  "            // Call the `Post` method on your `VerifyWebhookSignature` object to verify the Webhook event was actually sent by PayPal." is 122.
Long Statement,PayPal.Sample,PayoutCreate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PayoutCreate.aspx.cs,RunSample,The length of the statement  "            // `syncMode = true` indicates that this call will be performed **synchronously** and will return once the payout has been processed." is 133.
Magic Number,PayPal.Sample,PaymentWithPayPalWithWebExperienceProfile,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPalWithWebExperienceProfile.aspx.cs,RunSample,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,PayoutItemCancel,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PayoutItemCancel.aspx.cs,RunSample,The following statement contains a magic number: var payout = new Payout             {                 // #### sender_batch_header                 // Describes how the payments defined in the `items` array are to be handled.                 sender_batch_header = new PayoutSenderBatchHeader                 {                     sender_batch_id = "batch_" + System.Guid.NewGuid().ToString().Substring(0' 8)'                     email_subject = "You have a payment"                 }'                 // #### items                 // The `items` array contains the list of payout items to be included in this payout.                 // If `syncMode` is set to `true` when calling `Payout.Create()`' then the `items` array must only                 // contain **one** item.  If `syncMode` is set to `false` when calling `Payout.Create()`' then the `items`                 // array can contain more than one item.                 items = new List<PayoutItem>                 {                     new PayoutItem                     {                         recipient_type = PayoutRecipientType.EMAIL'                         amount = new Currency                         {                             value = "0.99"'                             currency = "USD"                         }'                         receiver = "shirt-supplier-one@mail.com"'                         note = "Thank you."'                         sender_item_id = "item_1"                     }                 }             };
Magic Number,PayPal.Sample,AuthorizationVoid,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationVoid.aspx.cs,RunSample,The following statement contains a magic number: var payment = new Payment()             {                 intent = "authorize"'                 // A resource representing a Payer that funds a payment. Use the List of `FundingInstrument` and the Payment Method as 'credit_card'                 payer = new Payer()                 {                     // The Payment creation API requires a list of                     // FundingInstrument; add the created `FundingInstrument`                     // to a List                     funding_instruments = new List<FundingInstrument>()                      {                         // A resource representing a Payeer's funding instrument.                         // Use a Payer ID (A unique identifier of the payer generated                         // and provided by the facilitator. This is required when                         // creating or using a tokenized funding instrument)                         // and the `CreditCardDetails`                         new FundingInstrument()                         {                             // A resource representing a credit card that can be used to fund a payment.                             credit_card = new CreditCard()                             {                                 billing_address = new Address()                                 {                                     city = "Johnstown"'                                     country_code = "US"'                                     line1 = "52 N Main ST"'                                     postal_code = "43210"'                                     state = "OH"                                 }'                                 cvv2 = "874"'                                 expire_month = 11'                                 expire_year = 2018'                                 first_name = "Joe"'                                 last_name = "Shopper"'                                 number = "4877274905927862"'                                 type = "visa"                             }                         }                     }'                     payment_method = "credit_card"                 }'                 // The Payment creation API requires a list of transactions; add the created `Transaction` to a List                 transactions = new List<Transaction>()                 {                     // A transaction defines the contract of a payment - what is the payment for and who is fulfilling it. Transaction is created with a `Payee` and `Amount` types                     new Transaction()                     {                         // Let's you specify a payment amount.                         amount = new Amount()                         {                             currency = "USD"'                             // Total must be equal to sum of shipping' tax and subtotal.                             total = "107.47"'                             details = new Details()                             {                                 shipping = "0.03"'                                 subtotal = "107.41"'                                 tax = "0.03"                             }                         }'                         description = "This is the payment transaction description."                     }                 }             };
Magic Number,PayPal.Sample,AuthorizationVoid,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\AuthorizationVoid.aspx.cs,RunSample,The following statement contains a magic number: var payment = new Payment()             {                 intent = "authorize"'                 // A resource representing a Payer that funds a payment. Use the List of `FundingInstrument` and the Payment Method as 'credit_card'                 payer = new Payer()                 {                     // The Payment creation API requires a list of                     // FundingInstrument; add the created `FundingInstrument`                     // to a List                     funding_instruments = new List<FundingInstrument>()                      {                         // A resource representing a Payeer's funding instrument.                         // Use a Payer ID (A unique identifier of the payer generated                         // and provided by the facilitator. This is required when                         // creating or using a tokenized funding instrument)                         // and the `CreditCardDetails`                         new FundingInstrument()                         {                             // A resource representing a credit card that can be used to fund a payment.                             credit_card = new CreditCard()                             {                                 billing_address = new Address()                                 {                                     city = "Johnstown"'                                     country_code = "US"'                                     line1 = "52 N Main ST"'                                     postal_code = "43210"'                                     state = "OH"                                 }'                                 cvv2 = "874"'                                 expire_month = 11'                                 expire_year = 2018'                                 first_name = "Joe"'                                 last_name = "Shopper"'                                 number = "4877274905927862"'                                 type = "visa"                             }                         }                     }'                     payment_method = "credit_card"                 }'                 // The Payment creation API requires a list of transactions; add the created `Transaction` to a List                 transactions = new List<Transaction>()                 {                     // A transaction defines the contract of a payment - what is the payment for and who is fulfilling it. Transaction is created with a `Payee` and `Amount` types                     new Transaction()                     {                         // Let's you specify a payment amount.                         amount = new Amount()                         {                             currency = "USD"'                             // Total must be equal to sum of shipping' tax and subtotal.                             total = "107.47"'                             details = new Details()                             {                                 shipping = "0.03"'                                 subtotal = "107.41"'                                 tax = "0.03"                             }                         }'                         description = "This is the payment transaction description."                     }                 }             };
Magic Number,PayPal.Sample,BillingAgreementCreateAndExecute,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\BillingAgreementCreateAndExecute.aspx.cs,CreateBillingAgreement,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,InvoiceCancel,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceCancel.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceCreate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceCreate.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceDelete,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceDelete.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceGetList,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceGetList.aspx.cs,RunSample,The following statement contains a magic number: var invoices = Invoice.GetAll(apiContext' pageSize: 10' totalCountRequired: true);
Magic Number,PayPal.Sample,InvoiceGetQrCode,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceGetQrCode.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceDeletePayment,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceDeletePayment.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceRecordPayment,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceRecordPayment.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceDeleteRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceDeleteRefund.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceRecordRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceRecordRefund.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceSearch,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceSearch.aspx.cs,RunSample,The following statement contains a magic number: var search = new Search             {                 start_invoice_date = "2014-11-20 PST"'                 end_invoice_date = "2014-11-21 PST"'                 page = 1'                 page_size = 10'                 total_count_required = true             };
Magic Number,PayPal.Sample,InvoiceSend,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceSend.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceSendReminder,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceSendReminder.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceUpdate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceUpdate.aspx.cs,RunSample,The following statement contains a magic number: var invoice = new Invoice()             {                 // #### Merchant Information                 // Information about the merchant who is sending the invoice.                 merchant_info = new MerchantInfo()                 {                     email = "jziaja.test.merchant-facilitator@gmail.com"'                     first_name = "Dennis"'                     last_name = "Doctor"'                     business_name = "Medical Professionals' LLC"'                     phone = new Phone()                     {                         country_code = "001"'                         national_number = "4083741550"                     }'                     address = new InvoiceAddress()                     {                         line1 = "1234 Main St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97217"'                         country_code = "US"                     }                 }'                 // #### Billing Information                 // Email address of invoice recipient and optional billing information.                 // > Note: PayPal currently only allows one recipient.                 billing_info = new List<BillingInfo>()                 {                     new BillingInfo()                     {                         // **(Required)** Email address of the invoice recipient.                         email = "example@example.com"                     }                 }'                 // #### Invoice Items                 // List of items to be included in the invoice.                 // > Note: 100 max per invoice.                 items = new List<InvoiceItem>()                 {                     new InvoiceItem()                     {                         name = "Sutures"'                         quantity = 100'                         unit_price = new Currency()                         {                             currency = "USD"'                             value = "5"                         }                     }                 }'                 // #### Invoice Note                 // Note to the payer. Maximum length is 4000 characters.                 note = "Medical Invoice 16 Jul' 2013 PST"'                 // #### Payment Term                 // **(Optional)** Specifies the payment deadline for the invoice.                 // > Note: Either `term_type` or `due_date` can be sent' **but not both.**                 payment_term = new PaymentTerm()                 {                     term_type = "NET_30"                 }'                 // #### Shipping Information                 // Shipping information for entities to whom items are being shipped.                 shipping_info = new ShippingInfo()                 {                     first_name = "Sally"'                     last_name = "Patient"'                     business_name = "Not applicable"'                     address = new InvoiceAddress()                     {                         line1 = "1234 Broad St."'                         city = "Portland"'                         state = "OR"'                         postal_code = "97216"'                         country_code = "US"                     }                 }             };
Magic Number,PayPal.Sample,InvoiceTemplateCreate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceTemplateCreate.aspx.cs,RunSample,The following statement contains a magic number: var invoiceTemplate = new InvoiceTemplate()             {                 name = "Template " + Guid.NewGuid().ToString().Replace("-"' string.Empty).Substring(0' 8)'                 @default = true'                 unit_of_measure = "HOURS"'                 template_data = new InvoiceTemplateData()                 {                     items = new List<InvoiceItem>()                     {                         new InvoiceItem()                         {                             name = "Nutri Bullet"'                             quantity = 1.0F'                             unit_price = new Currency()                             {                                 currency = "USD"'                                 value = "50.00"                             }                         }                     }'                     merchant_info = new MerchantInfo()                     {                         email = "jziaja.test.merchant-facilitator@gmail.com"                     }'                     tax_calculated_after_discount = false'                     tax_inclusive = false'                     note = "Thank you for your business"'                     logo_url = "https://pics.paypal.com/v1/images/redDot.jpeg"'                 }'                 settings = new List<InvoiceTemplateSettings>()                 {                     new InvoiceTemplateSettings()                     {                         field_name = "items.date"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }'                     new InvoiceTemplateSettings()                     {                         field_name = "custom"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }                 }             };
Magic Number,PayPal.Sample,InvoiceTemplateDelete,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceTemplateDelete.aspx.cs,RunSample,The following statement contains a magic number: var invoiceTemplate = new InvoiceTemplate()             {                 name = "Template " + Guid.NewGuid().ToString().Replace("-"' string.Empty).Substring(0' 8)'                 @default = true'                 unit_of_measure = "HOURS"'                 template_data = new InvoiceTemplateData()                 {                     items = new List<InvoiceItem>()                     {                         new InvoiceItem()                         {                             name = "Nutri Bullet"'                             quantity = 1.0F'                             unit_price = new Currency()                             {                                 currency = "USD"'                                 value = "50.00"                             }                         }                     }'                     merchant_info = new MerchantInfo()                     {                         email = "jziaja.test.merchant-facilitator@gmail.com"                     }'                     tax_calculated_after_discount = false'                     tax_inclusive = false'                     note = "Thank you for your business"'                     logo_url = "https://pics.paypal.com/v1/images/redDot.jpeg"'                 }'                 settings = new List<InvoiceTemplateSettings>()                 {                     new InvoiceTemplateSettings()                     {                         field_name = "items.date"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }'                     new InvoiceTemplateSettings()                     {                         field_name = "custom"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }                 }             };
Magic Number,PayPal.Sample,InvoiceTemplateRetrieve,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceTemplateRetrieve.aspx.cs,RunSample,The following statement contains a magic number: var invoiceTemplate = new InvoiceTemplate()             {                 name = "Template " + Guid.NewGuid().ToString().Replace("-"' string.Empty).Substring(0' 8)'                 @default = true'                 unit_of_measure = "HOURS"'                 template_data = new InvoiceTemplateData()                 {                     items = new List<InvoiceItem>()                     {                         new InvoiceItem()                         {                             name = "Nutri Bullet"'                             quantity = 1.0F'                             unit_price = new Currency()                             {                                 currency = "USD"'                                 value = "50.00"                             }                         }                     }'                     merchant_info = new MerchantInfo()                     {                         email = "jziaja.test.merchant-facilitator@gmail.com"                     }'                     tax_calculated_after_discount = false'                     tax_inclusive = false'                     note = "Thank you for your business"'                     logo_url = "https://pics.paypal.com/v1/images/redDot.jpeg"'                 }'                 settings = new List<InvoiceTemplateSettings>()                 {                     new InvoiceTemplateSettings()                     {                         field_name = "items.date"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }'                     new InvoiceTemplateSettings()                     {                         field_name = "custom"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }                 }             };
Magic Number,PayPal.Sample,InvoiceTemplateRetrieveList,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceTemplateRetrieveList.aspx.cs,RunSample,The following statement contains a magic number: var invoiceTemplate = new InvoiceTemplate()             {                 name = "Template " + Guid.NewGuid().ToString().Replace("-"' string.Empty).Substring(0' 8)'                 @default = true'                 unit_of_measure = "HOURS"'                 template_data = new InvoiceTemplateData()                 {                     items = new List<InvoiceItem>()                     {                         new InvoiceItem()                         {                             name = "Nutri Bullet"'                             quantity = 1.0F'                             unit_price = new Currency()                             {                                 currency = "USD"'                                 value = "50.00"                             }                         }                     }'                     merchant_info = new MerchantInfo()                     {                         email = "jziaja.test.merchant-facilitator@gmail.com"                     }'                     tax_calculated_after_discount = false'                     tax_inclusive = false'                     note = "Thank you for your business"'                     logo_url = "https://pics.paypal.com/v1/images/redDot.jpeg"'                 }'                 settings = new List<InvoiceTemplateSettings>()                 {                     new InvoiceTemplateSettings()                     {                         field_name = "items.date"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }'                     new InvoiceTemplateSettings()                     {                         field_name = "custom"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }                 }             };
Magic Number,PayPal.Sample,InvoiceTemplateUpdate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\InvoiceTemplateUpdate.aspx.cs,RunSample,The following statement contains a magic number: var invoiceTemplate = new InvoiceTemplate()             {                 name = "Template " + Guid.NewGuid().ToString().Replace("-"' string.Empty).Substring(0' 8)'                 @default = true'                 unit_of_measure = "HOURS"'                 template_data = new InvoiceTemplateData()                 {                     items = new List<InvoiceItem>()                     {                         new InvoiceItem()                         {                             name = "Nutri Bullet"'                             quantity = 1.0F'                             unit_price = new Currency()                             {                                 currency = "USD"'                                 value = "50.00"                             }                         }                     }'                     merchant_info = new MerchantInfo()                     {                         email = "jziaja.test.merchant-facilitator@gmail.com"                     }'                     tax_calculated_after_discount = false'                     tax_inclusive = false'                     note = "Thank you for your business"'                     logo_url = "https://pics.paypal.com/v1/images/redDot.jpeg"'                 }'                 settings = new List<InvoiceTemplateSettings>()                 {                     new InvoiceTemplateSettings()                     {                         field_name = "items.date"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }'                     new InvoiceTemplateSettings()                     {                         field_name = "custom"'                         display_preference = new InvoiceTemplateSettingsMetadata()                         {                             hidden = true                         }                     }                 }             };
Magic Number,PayPal.Sample,OrderSample,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\OrderSample.aspx.cs,RunSample,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,PaymentWithPayPalWithDiscount,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPalWithDiscount.aspx.cs,RunSample,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,Common,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Utilities\Common.cs,FormatJsonString,The following statement contains a magic number: formattedText = formattedText.Substring(13' formattedText.Length - 14).Replace("\n  "' "\n");
Magic Number,PayPal.Sample,Common,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Utilities\Common.cs,FormatJsonString,The following statement contains a magic number: formattedText = formattedText.Substring(13' formattedText.Length - 14).Replace("\n  "' "\n");
Magic Number,PayPal.Sample,Common,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Utilities\Common.cs,GetRandomInvoiceNumber,The following statement contains a magic number: return new Random().Next(999999).ToString();
Magic Number,PayPal.Sample,GetPaymentHistory,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\GetPaymentHistory.aspx.cs,RunSample,The following statement contains a magic number: var paymentList = Payment.List(apiContext' count: 10' startIndex: 5);
Magic Number,PayPal.Sample,GetPaymentHistory,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\GetPaymentHistory.aspx.cs,RunSample,The following statement contains a magic number: var paymentList = Payment.List(apiContext' count: 10' startIndex: 5);
Magic Number,PayPal.Sample,PaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PaymentWithPayPal.aspx.cs,RunSample,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,ThirdPartyPaymentWithPayPal,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\ThirdPartyPaymentWithPayPal.aspx.cs,RunSample,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,SaleRefund,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\SaleRefund.aspx.cs,RunSample,The following statement contains a magic number: var guid = Convert.ToString((new Random()).Next(100000));
Magic Number,PayPal.Sample,PayoutCreate,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\PayoutCreate.aspx.cs,RunSample,The following statement contains a magic number: var payout = new Payout             {                 // #### sender_batch_header                 // Describes how the payments defined in the `items` array are to be handled.                 sender_batch_header = new PayoutSenderBatchHeader                 {                     sender_batch_id = "batch_" + System.Guid.NewGuid().ToString().Substring(0' 8)'                     email_subject = "You have a payment"                 }'                 // #### items                 // The `items` array contains the list of payout items to be included in this payout.                 // If `syncMode` is set to `true` when calling `Payout.Create()`' then the `items` array must only                 // contain **one** item.  If `syncMode` is set to `false` when calling `Payout.Create()`' then the `items`                 // array can contain more than one item.                 items = new List<PayoutItem>                 {                     new PayoutItem                     {                         recipient_type = PayoutRecipientType.EMAIL'                         amount = new Currency                         {                             value = "0.99"'                             currency = "USD"                         }'                         receiver = "shirt-supplier-one@mail.com"'                         note = "Thank you."'                         sender_item_id = "item_1"                     }'                     new PayoutItem                     {                         recipient_type = PayoutRecipientType.EMAIL'                         amount = new Currency                         {                             value = "0.90"'                             currency = "USD"                         }'                         receiver = "shirt-supplier-two@mail.com"'                         note = "Thank you."'                         sender_item_id = "item_2"                     }'                     new PayoutItem                     {                         recipient_type = PayoutRecipientType.EMAIL'                         amount = new Currency                         {                             value = "2.00"'                             currency = "USD"                         }'                         receiver = "shirt-supplier-three@mail.com"'                         note = "Thank you."'                         sender_item_id = "item_3"                     }                 }             };
Missing Default,PayPal.Sample,Response,C:\research\architectureSmells\repos\PayPal_PayPal-NET-SDK\Samples\Source\Response.aspx.cs,GetMessageWithMarkup,The following switch statement is missing a default case: switch(message.Type)             {                 case RequestFlowItemMessageType.Error:                     iconText = "<i class=\"fa fa-times-circle\"></i>";                     break;                  case RequestFlowItemMessageType.Success:                     iconText = "<i class=\"fa fa-check-circle\"></i>";                     break;                  case RequestFlowItemMessageType.General:                     iconText = "<i class=\"fa fa-info-circle\"></i>";                     break;             }
