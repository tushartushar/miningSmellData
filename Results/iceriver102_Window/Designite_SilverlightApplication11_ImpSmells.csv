Implementation smell,Namespace,Class,File,Method,Description
Long Method,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The method has 156 lines of code.
Complex Method,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,Cyclomatic complexity of the method is 21
Long Statement,SilverlightApplication11,App,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\App.xaml.cs,ReportErrorToDOM,The length of the statement  "		System.Windows.Browser.HtmlPage.Window.Eval ("throw new Error(\"Unhandled Error in Silverlight Application " + errorMsg + "\");"); " is 130.
Long Statement,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,PopulateCustomersList,The length of the statement  "	txt_today.Text = DateTime.Now.Day.ToString () + "/" + DateTime.Now.Month.ToString () + "/" + DateTime.Now.Year.ToString (); " is 123.
Long Statement,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The length of the statement  "			string totalLed = ((float.Parse (doc.Element ("led").Element ("heightled").Value) * float.Parse (doc.Element ("led").Element ("widthled").Value)).ToString ()); " is 159.
Empty Catch Block,SilverlightApplication11,App,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\App.xaml.cs,ReportErrorToDOM,The method has an empty catch block.
Empty Catch Block,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The method has an empty catch block.
Empty Catch Block,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The method has an empty catch block.
Empty Catch Block,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The method has an empty catch block.
Empty Catch Block,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The method has an empty catch block.
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: if (e.Error == null) {  	string xmlData = e.Result;  	XDocument doc = XDocument.Parse (xmlData);  	string barcode = doc.Element ("led").Element ("barcode").Value;  	imbarcode.Source = new BitmapImage (new Uri ("http://bmsled.altamedia.vn/barcode/index.php?code=" + barcode));  	txtLocation.Text = doc.Element ("led").Element ("location").Value;  	txtEvent.Text = doc.Element ("led").Element ("event").Value;  	txtNameCustomer.Text = doc.Element ("led").Element ("namecustomer").Value;  	txtPhoneCustomer.Text = doc.Element ("led").Element ("phonecustomer").Value;  	txtPhoneSaler.Text = doc.Element ("led").Element ("phoneuser").Value;  	txtNameSaler.Text = doc.Element ("led").Element ("nameuser").Value;  	txtdaygetfile.Text = doc.Element ("led").Element ("daygetfile").Value;  	txtdaygetvideo.Text = doc.Element ("led").Element ("daygetvideo").Value;  	txttimeinstall.Content = doc.Element ("led").Element ("timeinstall").Value;  	txttimeruntest.Content = doc.Element ("led").Element ("timeruntest").Value;  	txttimerun.Content = doc.Element ("led").Element ("timerun").Value;  	txtdaygetfile.Text = doc.Element ("led").Element ("daygetfile").Value;  	if (doc.Element ("led").Element ("Backdrop").Value == "0")  		backdrop.IsChecked = true;  	else  		backdrop.IsChecked = false;  	//thông tin của chi tiết led nắm trong element info  	// mỗi row tương ứng với một dòng trong table;  	try {  		var lines = from line in doc.Descendants ("row")  		select new row {  			title = (string)line.Attribute ("title")'  			w = (string)line.Attribute ("width")'  			h = (string)line.Attribute ("height")'  			cabinetH = (string)line.Attribute ("cabinetH")'  			cabinetW = (string)line.Attribute ("cabinetW")'  			num = (string)line.Attribute ("num")'  			dientich = (string)line.Attribute ("dientich")'  			pixel = (string)line.Attribute ("pixel")'  			note = (string)line.Attribute ("note")  		};  		listLed.ItemsSource = lines;  	}  	catch (Exception ex) {  	}  	txt_codecontract.Text = doc.Element ("led").Element ("codecontract").Value;  	try {  		string totalLed = ((float.Parse (doc.Element ("led").Element ("heightled").Value) * float.Parse (doc.Element ("led").Element ("widthled").Value)).ToString ());  		if (totalLed.Length >= 6) {  			totalLed = totalLed.Substring (0' 6);  		}  	}  	catch (Exception ex) {  	}  	String tmp = doc.Element ("led").Element ("connectpclab").Value;  	if (tmp != "0") {  		connectpc.IsChecked = true;  		connectpc.Content = "Có kết nối với laptop/PC " + doc.Element ("led").Element ("connectpclab").Value + " cái";  	}  	string ground = doc.Element ("led").Element ("ground").Value;  	if (ground == "2") {  		cbouthouse.IsChecked = true;  		cbinhouse.IsChecked = false;  	}  	else {  		cbouthouse.IsChecked = false;  		cbinhouse.IsChecked = true;  	}  	string groundtype = doc.Element ("led").Element ("groundtype").Value;  	if (groundtype == "1") {  		txttype.Text = "Có bạt che";  	}  	else {  		txttype.Text = "Không có bạt che";  	}  	try {  		txtgroundheight1.Text = doc.Element ("led").Element ("groundheight1").Value;  		txtgroundheight2.Text = doc.Element ("led").Element ("groundheight2").Value;  		txtgroundheight3.Text = doc.Element ("led").Element ("groundheight3").Value;  		txtgroundheight4.Text = doc.Element ("led").Element ("groundheight4").Value;  		txtgroundheight5.Text = doc.Element ("led").Element ("groundheight5").Value;  		txtdescription.Text = doc.Element ("led").Element ("description").Value;  		string avis = doc.Element ("led").Element ("avi").Value;  		string mpegs = doc.Element ("led").Element ("mpeg").Value;  		string flvs = doc.Element ("led").Element ("flv").Value;  		string ppts = doc.Element ("led").Element ("ppt").Value;  		string jpegs = doc.Element ("led").Element ("jpeg").Value;  		string dvds = doc.Element ("led").Element ("dvd").Value;  		if (avis == "0") {  			cbavi.IsChecked = false;  		}  		else {  			cbavi.IsChecked = true;  		}  		if (mpegs == "0") {  			cbmpeg.IsChecked = false;  		}  		else {  			cbmpeg.IsChecked = true;  		}  		if (flvs == "0") {  			cbflv.IsChecked = false;  		}  		else {  			cbflv.IsChecked = true;  		}  		if (ppts == "0") {  			cbppt.IsChecked = false;  		}  		else {  			cbppt.IsChecked = true;  		}  		if (jpegs == "0") {  			cbjpeg.IsChecked = false;  		}  		else {  			cbjpeg.IsChecked = true;  		}  		if (dvds == "0") {  			cbdvd.IsChecked = false;  		}  		else {  			cbdvd.IsChecked = true;  		}  	}  	catch (Exception ex) {  	}  	try {  		string cameras = doc.Element ("led").Element ("camera").Value;  		string audios = doc.Element ("led").Element ("audio").Value;  		string connects = doc.Element ("led").Element ("connect").Value;  		if (cameras == "0") {  			cbcamera.IsChecked = false;  		}  		else {  			cbcamera.IsChecked = true;  		}  		if (cameras == "2") {  			cbcamera.Content = "kết nối Camera HD";  		}  		else {  			cbcamera.Content = "kết nối Camera";  		}  		if (connects == "0") {  			cbconnect.IsChecked = false;  		}  		else {  			cbconnect.IsChecked = true;  		}  		if (connects == "2") {  			cbconnect.Content = "Có truyền hình trực tiếp HD";  		}  		else {  			cbconnect.Content = "Có truyền hình trực tiếp";  		}  	}  	catch (Exception ex) {  	}  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: if (e.Error == null) {  	string xmlData = e.Result;  	XDocument doc = XDocument.Parse (xmlData);  	string barcode = doc.Element ("led").Element ("barcode").Value;  	imbarcode.Source = new BitmapImage (new Uri ("http://bmsled.altamedia.vn/barcode/index.php?code=" + barcode));  	txtLocation.Text = doc.Element ("led").Element ("location").Value;  	txtEvent.Text = doc.Element ("led").Element ("event").Value;  	txtNameCustomer.Text = doc.Element ("led").Element ("namecustomer").Value;  	txtPhoneCustomer.Text = doc.Element ("led").Element ("phonecustomer").Value;  	txtPhoneSaler.Text = doc.Element ("led").Element ("phoneuser").Value;  	txtNameSaler.Text = doc.Element ("led").Element ("nameuser").Value;  	txtdaygetfile.Text = doc.Element ("led").Element ("daygetfile").Value;  	txtdaygetvideo.Text = doc.Element ("led").Element ("daygetvideo").Value;  	txttimeinstall.Content = doc.Element ("led").Element ("timeinstall").Value;  	txttimeruntest.Content = doc.Element ("led").Element ("timeruntest").Value;  	txttimerun.Content = doc.Element ("led").Element ("timerun").Value;  	txtdaygetfile.Text = doc.Element ("led").Element ("daygetfile").Value;  	if (doc.Element ("led").Element ("Backdrop").Value == "0")  		backdrop.IsChecked = true;  	else  		backdrop.IsChecked = false;  	//thông tin của chi tiết led nắm trong element info  	// mỗi row tương ứng với một dòng trong table;  	try {  		var lines = from line in doc.Descendants ("row")  		select new row {  			title = (string)line.Attribute ("title")'  			w = (string)line.Attribute ("width")'  			h = (string)line.Attribute ("height")'  			cabinetH = (string)line.Attribute ("cabinetH")'  			cabinetW = (string)line.Attribute ("cabinetW")'  			num = (string)line.Attribute ("num")'  			dientich = (string)line.Attribute ("dientich")'  			pixel = (string)line.Attribute ("pixel")'  			note = (string)line.Attribute ("note")  		};  		listLed.ItemsSource = lines;  	}  	catch (Exception ex) {  	}  	txt_codecontract.Text = doc.Element ("led").Element ("codecontract").Value;  	try {  		string totalLed = ((float.Parse (doc.Element ("led").Element ("heightled").Value) * float.Parse (doc.Element ("led").Element ("widthled").Value)).ToString ());  		if (totalLed.Length >= 6) {  			totalLed = totalLed.Substring (0' 6);  		}  	}  	catch (Exception ex) {  	}  	String tmp = doc.Element ("led").Element ("connectpclab").Value;  	if (tmp != "0") {  		connectpc.IsChecked = true;  		connectpc.Content = "Có kết nối với laptop/PC " + doc.Element ("led").Element ("connectpclab").Value + " cái";  	}  	string ground = doc.Element ("led").Element ("ground").Value;  	if (ground == "2") {  		cbouthouse.IsChecked = true;  		cbinhouse.IsChecked = false;  	}  	else {  		cbouthouse.IsChecked = false;  		cbinhouse.IsChecked = true;  	}  	string groundtype = doc.Element ("led").Element ("groundtype").Value;  	if (groundtype == "1") {  		txttype.Text = "Có bạt che";  	}  	else {  		txttype.Text = "Không có bạt che";  	}  	try {  		txtgroundheight1.Text = doc.Element ("led").Element ("groundheight1").Value;  		txtgroundheight2.Text = doc.Element ("led").Element ("groundheight2").Value;  		txtgroundheight3.Text = doc.Element ("led").Element ("groundheight3").Value;  		txtgroundheight4.Text = doc.Element ("led").Element ("groundheight4").Value;  		txtgroundheight5.Text = doc.Element ("led").Element ("groundheight5").Value;  		txtdescription.Text = doc.Element ("led").Element ("description").Value;  		string avis = doc.Element ("led").Element ("avi").Value;  		string mpegs = doc.Element ("led").Element ("mpeg").Value;  		string flvs = doc.Element ("led").Element ("flv").Value;  		string ppts = doc.Element ("led").Element ("ppt").Value;  		string jpegs = doc.Element ("led").Element ("jpeg").Value;  		string dvds = doc.Element ("led").Element ("dvd").Value;  		if (avis == "0") {  			cbavi.IsChecked = false;  		}  		else {  			cbavi.IsChecked = true;  		}  		if (mpegs == "0") {  			cbmpeg.IsChecked = false;  		}  		else {  			cbmpeg.IsChecked = true;  		}  		if (flvs == "0") {  			cbflv.IsChecked = false;  		}  		else {  			cbflv.IsChecked = true;  		}  		if (ppts == "0") {  			cbppt.IsChecked = false;  		}  		else {  			cbppt.IsChecked = true;  		}  		if (jpegs == "0") {  			cbjpeg.IsChecked = false;  		}  		else {  			cbjpeg.IsChecked = true;  		}  		if (dvds == "0") {  			cbdvd.IsChecked = false;  		}  		else {  			cbdvd.IsChecked = true;  		}  	}  	catch (Exception ex) {  	}  	try {  		string cameras = doc.Element ("led").Element ("camera").Value;  		string audios = doc.Element ("led").Element ("audio").Value;  		string connects = doc.Element ("led").Element ("connect").Value;  		if (cameras == "0") {  			cbcamera.IsChecked = false;  		}  		else {  			cbcamera.IsChecked = true;  		}  		if (cameras == "2") {  			cbcamera.Content = "kết nối Camera HD";  		}  		else {  			cbcamera.Content = "kết nối Camera";  		}  		if (connects == "0") {  			cbconnect.IsChecked = false;  		}  		else {  			cbconnect.IsChecked = true;  		}  		if (connects == "2") {  			cbconnect.Content = "Có truyền hình trực tiếp HD";  		}  		else {  			cbconnect.Content = "Có truyền hình trực tiếp";  		}  	}  	catch (Exception ex) {  	}  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: try {  	string totalLed = ((float.Parse (doc.Element ("led").Element ("heightled").Value) * float.Parse (doc.Element ("led").Element ("widthled").Value)).ToString ());  	if (totalLed.Length >= 6) {  		totalLed = totalLed.Substring (0' 6);  	}  }  catch (Exception ex) {  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: try {  	string totalLed = ((float.Parse (doc.Element ("led").Element ("heightled").Value) * float.Parse (doc.Element ("led").Element ("widthled").Value)).ToString ());  	if (totalLed.Length >= 6) {  		totalLed = totalLed.Substring (0' 6);  	}  }  catch (Exception ex) {  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: if (totalLed.Length >= 6) {  	totalLed = totalLed.Substring (0' 6);  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: if (totalLed.Length >= 6) {  	totalLed = totalLed.Substring (0' 6);  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,xmlClient_DownloadStringCompleted,The following statement contains a magic number: totalLed = totalLed.Substring (0' 6);  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: for (int row = 0; row < height; row++) {  	for (int column = 0; column < width; column++) {  		int pixel = bitmap.Pixels [width * row + column];  		raster [0] [column' row] = (byte)(pixel >> 16);  		raster [1] [column' row] = (byte)(pixel >> 8);  		raster [2] [column' row] = (byte)pixel;  	}  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: for (int row = 0; row < height; row++) {  	for (int column = 0; column < width; column++) {  		int pixel = bitmap.Pixels [width * row + column];  		raster [0] [column' row] = (byte)(pixel >> 16);  		raster [1] [column' row] = (byte)(pixel >> 8);  		raster [2] [column' row] = (byte)pixel;  	}  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: for (int row = 0; row < height; row++) {  	for (int column = 0; column < width; column++) {  		int pixel = bitmap.Pixels [width * row + column];  		raster [0] [column' row] = (byte)(pixel >> 16);  		raster [1] [column' row] = (byte)(pixel >> 8);  		raster [2] [column' row] = (byte)pixel;  	}  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: for (int column = 0; column < width; column++) {  	int pixel = bitmap.Pixels [width * row + column];  	raster [0] [column' row] = (byte)(pixel >> 16);  	raster [1] [column' row] = (byte)(pixel >> 8);  	raster [2] [column' row] = (byte)pixel;  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: for (int column = 0; column < width; column++) {  	int pixel = bitmap.Pixels [width * row + column];  	raster [0] [column' row] = (byte)(pixel >> 16);  	raster [1] [column' row] = (byte)(pixel >> 8);  	raster [2] [column' row] = (byte)pixel;  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: for (int column = 0; column < width; column++) {  	int pixel = bitmap.Pixels [width * row + column];  	raster [0] [column' row] = (byte)(pixel >> 16);  	raster [1] [column' row] = (byte)(pixel >> 8);  	raster [2] [column' row] = (byte)pixel;  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: raster [0] [column' row] = (byte)(pixel >> 16);  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: raster [1] [column' row] = (byte)(pixel >> 8);  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,ReadRasterInformation,The following statement contains a magic number: raster [2] [column' row] = (byte)pixel;  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,SaveToPDF,The following statement contains a magic number: if (d.ShowDialog () == true) {  	// Create a new PDF document  	PdfDocument document = new PdfDocument ();  	// Create an empty page  	PdfPage page = document.AddPage ();  	//page.Contents.CreateSingleContent().Stream.UnfilteredValue;  	// Get an XGraphics object for drawing  	XGraphics gfx = XGraphics.FromPdfPage (page);  	XPdfFontOptions options = new XPdfFontOptions (PdfFontEncoding.Unicode' PdfFontEmbedding.Always);  	MemoryStream stream = GetImageStream (bitmap);  	XImage pdfImg = XImage.FromStream (stream);  	gfx.DrawImage (pdfImg' 10' 0);  	document.Save (d.OpenFile ());  }  
Magic Number,SilverlightApplication11,MainPage,C:\repos\iceriver102_Window\silverlight export image and pdf ver2\silverlight\SilverlightApplication11\MainPage.xaml.cs,SaveToPDF,The following statement contains a magic number: gfx.DrawImage (pdfImg' 10' 0);  
