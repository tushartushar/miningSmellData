Implementation smell,Namespace,Class,File,Method,Description
Long Method,Alta_Media_Manager.Alta_net,alta_class_net,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\alta_class_net.cs,OnRecievedData,The method has 119 lines of code.
Long Method,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The method has 142 lines of code.
Complex Method,Alta_Media_Manager.Alta_net,alta_class_net,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\alta_class_net.cs,OnRecievedData,Cyclomatic complexity of the method is 27
Complex Method,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,AdminControl,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,userControl,Cyclomatic complexity of the method is 10
Complex Method,Alta_Media_Manager.Alta_view.Class,alta_class_media,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_media.cs,LoadMediaType,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Class,alta_class_playlist,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_playlist.cs,LoadDetails,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Class,alta_class_playlist,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_playlist.cs,getListTerminal,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Class,alta_class_schedules,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_schedules.cs,loadDetails,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,Cyclomatic complexity of the method is 15
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,Cyclomatic complexity of the method is 15
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,Cyclomatic complexity of the method is 17
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,Cyclomatic complexity of the method is 17
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchMedia,Cyclomatic complexity of the method is 17
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getScheduleDetails,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getMedia,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUserType,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylistofMedia,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchPlaylist,Cyclomatic complexity of the method is 15
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,Cyclomatic complexity of the method is 14
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,Cyclomatic complexity of the method is 12
Complex Method,Alta_Media_Player,Login,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Login.xaml.cs,submitData,Cyclomatic complexity of the method is 13
Complex Method,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMyselfInfo,Cyclomatic complexity of the method is 9
Complex Method,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMySchedule,Cyclomatic complexity of the method is 10
Complex Method,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,Cyclomatic complexity of the method is 28
Complex Method,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,KeyPressControl,Cyclomatic complexity of the method is 13
Complex Method,Alta_Media_Manager.Class,CommonUtilities,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\CommonUtilities.cs,checkAdminColtrol,Cyclomatic complexity of the method is 9
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,The method has 5 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,The method has 6 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,The method has 7 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,The method has 5 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchMedia,The method has 8 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchPlaylist,The method has 7 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,The method has 6 parameters.
Long Parameter List,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,The method has 5 parameters.
Long Statement,Alta_Media_Manager.Alta_view.Class,alta_class_media,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_media.cs,LoadMediaType,The length of the statement  "			string insert_query = "SELECT `media_type_id`' `media_type_name`' `media_type_content` FROM `am_media_type` WHERE `media_type_id`=@media_type_id"; " is 146.
Long Statement,Alta_Media_Manager.Alta_view.Class,alta_class_playlist,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_playlist.cs,LoadDetails,The length of the statement  "			string insert_query = "SELECT `detail_plan_id`' `plan_id`' `media_id`' `time_play`' `time_create`'`time_end` FROM `am_plan_details` WHERE `plan_id`=@plan_id"; " is 158.
Long Statement,Alta_Media_Manager.Alta_view.Class,alta_class_playlist,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_playlist.cs,getListTerminal,The length of the statement  "			string insert_query = "SELECT A.`termiral_id`' A.`termiral_name`' A.`termiral_ip`' A.`termiral_content`' A.`termiral_status` FROM `am_termiral` A'`am_schedules_details` B WHERE B.`plan_id`=@plan_id and A.`termiral_id`=B.`termiral_id`"; " is 235.
Long Statement,Alta_Media_Manager.Alta_view.Class,alta_class_schedules,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_schedules.cs,loadDetails,The length of the statement  "			string _query = "SELECT `schedules_details_id`' `schedules_id`' `plan_id`' `user_id`' `termiral_id`' `time_play`'`time_end` FROM `am_schedules_details` WHERE  `schedules_id`=@schedule_id and  DATE_FORMAT( time_play' '%Y-%m-%d' )<=DATE_FORMAT( @time_play''%Y-%m-%d') and DATE_FORMAT( time_end' '%Y-%m-%d' )>=DATE_FORMAT( @time_play''%Y-%m-%d')"; " is 344.
Long Statement,Alta_Media_Manager.Alta_view.Class,alta_class_ftp,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_ftp.cs,RenameFileName,The length of the statement  "		var reqFTP = (FtpWebRequest)FtpWebRequest.Create (new Uri ("ftp://" + CommonUtilities.config.Ftp_Server + currentFilename)); " is 124.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,The length of the statement  "	string _query = "SELECT `plan_id`' `plan_name`' `plan_date_begin`' `plan_date_end`' `plan_status`' `user_id`' `plan_time_create`' `plan_content` FROM `am_plan`"; " is 161.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,The length of the statement  "	string _query = "SELECT `plan_id`' `plan_name`' `plan_date_begin`' `plan_date_end`' `plan_status`' `user_id`' `plan_time_create`' `plan_content` FROM `am_plan`"; " is 161.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,The length of the statement  "	string _query = "SELECT `media_id`' `media_name`' `media_url`' `media_content`' `media_type_id`' `media_date`' `media_status`' `user_id` FROM `am_media`"; " is 154.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,The length of the statement  "	string _query = "SELECT `media_id`' `media_name`' `media_url`' `media_content`' `media_type_id`' `media_date`' `media_status`' `user_id` FROM `am_media` WHERE 1"; " is 162.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchMedia,The length of the statement  "	String sql = "SELECT `media_id`' `media_name`' `media_url`' `media_content`' `media_type_id`' `media_date`' `media_status`' `user_id` FROM `am_media`"; " is 151.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getScheduleDetails,The length of the statement  "			string _query = "SELECT `schedules_details_id`' `schedules_id`' `plan_id`' `user_id`' `termiral_id`' `time_play` FROM `am_schedules_details` WHERE schedules_details_id=@id"; " is 173.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,The length of the statement  "			string _query = "SELECT `user_id`' `username`' `user_pass`' `full_name`' `user_type_id`' `user_status` FROM `am_user` WHERE `user_id`=@user_id"; " is 144.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getMedia,The length of the statement  "			string insert_query = "SELECT `media_id`' `media_name`' `media_url`' `media_content`' `media_type_id`' `media_date`' `media_status`' `user_id` FROM `am_media` WHERE `media_id`=@media_id"; " is 187.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUserType,The length of the statement  "			string insert_query = "SELECT `user_type_id`' `name_type`' `content` FROM `am_user_type` WHERE `user_type_id`=@type_user"; " is 122.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylistofMedia,The length of the statement  "			string insert_query = "SELECT A.* FROM `am_plan` A'am_plan_details B WHERE A.plan_id=B.plan_id and B.media_id=@media_id"; " is 121.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchPlaylist,The length of the statement  "	String sql = "SELECT `plan_id`' `plan_name`' `plan_date_begin`' `plan_date_end`' `plan_status`' `user_id`' `plan_time_create`' `plan_content` FROM `am_plan`"; " is 158.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,The length of the statement  "	String sql = "SELECT A.`termiral_id`' A.`termiral_name`' A.`termiral_ip`' A.`termiral_content`' A.`termiral_status` FROM `am_termiral` A' `am_schedules_details` B "; " is 165.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,The length of the statement  "			string _query = "SELECT A.`user_id`' A.`username`' A.`user_pass`' A.`full_name`' A.`user_type_id`' A.`user_status` FROM `am_user` A' `am_schedules_details`B WHERE B.termiral_id=@id and B.user_id=A.user_id"; " is 206.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,The length of the statement  "			string _query = "SELECT A.`user_id`' A.`username`' A.`user_pass`' A.`full_name`' A.`user_type_id`' A.`user_status` FROM `am_user` A' `am_schedules_details` B"; " is 159.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUser,The length of the statement  "			_query += " WHERE B.termiral_id=@id and B.user_id=A.user_id and (DATE_FORMAT(B.time_play''%Y-%m-%d')<=DATE_FORMAT(@time''%Y-%m-%d') and DATE_FORMAT(B.time_end''%Y-%m-%d')>=DATE_FORMAT(@time''%Y-%m-%d'))"; " is 204.
Long Statement,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,The length of the statement  "	String sql = "SELECT `termiral_id`' `termiral_name`' `termiral_ip`' `termiral_content`' `termiral_status` FROM `am_termiral` "; " is 127.
Long Statement,Alta_Media_Player,Login,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Login.xaml.cs,submitData,The length of the statement  "			string query = "SELECT `termiral_id`' `termiral_name`' `termiral_ip`' `termiral_content`' `termiral_status`' `termiral_pass` FROM `am_termiral` "; " is 146.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMyselfInfo,The length of the statement  "			string _query = "SELECT `termiral_id`' `termiral_name`' `termiral_ip`' `termiral_content`' `termiral_status` FROM `am_termiral` WHERE  `termiral_id`=@id_termiral"; " is 163.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMySchedule,The length of the statement  "				string _query = "SELECT `schedules_id`' `user_id`' `termiral_id`' `schedules_date_begin`' `schedules_date_end`' `schedules_content` FROM `am_schedules` "; " is 154.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMySchedule,The length of the statement  "				_query += "WHERE termiral_id=@id_termiral AND DATE_FORMAT( schedules_date_begin'  '%Y-%m-%d' ) <= DATE_FORMAT( NOW( ) '  '%Y-%m-%d' ) AND DATE_FORMAT( schedules_date_end'  '%Y-%m-%d' ) >= DATE_FORMAT( NOW( ) '  '%Y-%m-%d' ) "; " is 226.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,Changed_State_Event,The length of the statement  "	//    btn_play.Background = new ImageBrush(new BitmapImage(new Uri("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_pause.png"))); " is 156.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,Changed_State_Event,The length of the statement  "	//    btn_play.Background = new ImageBrush(new BitmapImage(new Uri("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_play.png"))); " is 155.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,WindowCHange_State_btn_Click,The length of the statement  "		btn_full_screen.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_full_screen.png"))); " is 166.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,WindowCHange_State_btn_Click,The length of the statement  "		btn_full_screen.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_return_from_full_screen.png"))); " is 178.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,OpenMedia,The length of the statement  "	btn_play.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_pause.png"))); " is 153.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,MediaOnParsedChanged,The length of the statement  "	alta_txt_curTime.Text = string.Format ("{0:00}:{1:00}:{2:00}"' myVlcControl.Media.Duration.Hours' myVlcControl.Media.Duration.Minutes' myVlcControl.Media.Duration.Seconds); " is 172.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,btn_Click_Mute,The length of the statement  "		btn_mute.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_volume_on.png"))); " is 157.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,btn_Click_Mute,The length of the statement  "		btn_mute.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_volume_muted.png"))); " is 160.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,btn_Play_Event,The length of the statement  "			btn_play.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_play.png"))); " is 152.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,btn_Play_Event,The length of the statement  "			btn_play.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_pause.png"))); " is 153.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,btn_Click_Stop,The length of the statement  "	btn_play.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_play.png"))); " is 152.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,Volume_Change_Event,The length of the statement  "		btn_mute.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_volume_muted.png"))); " is 160.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,Volume_Change_Event,The length of the statement  "		btn_mute.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_volume_on.png"))); " is 157.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,playMedia,The length of the statement  "	btn_play.Background = new ImageBrush (new BitmapImage (new Uri ("pack://application:'''/Alta_Media_Player;component/Asset/Themes/ic_action_pause.png"))); " is 153.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The length of the statement  "	if (this.Schedule != null && this.Schedule.alta_details_schedule != null && this.Schedule.alta_details_schedule.Count > 0) { " is 124.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The length of the statement  "			// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep"); " is 160.
Long Statement,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The length of the statement  "	demoTxt.Text = Tcp_Server.ipHostStream + " | " + CommonUtilities.userColtrol.getNoOnce (CommonUtilities.keySerect) + " | " + CommonUtilities.keySerect; " is 151.
Long Statement,Alta_Media_Manager.Class,alta_media_in_player,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\alta_media_in_player.cs,Equals,The length of the statement  "	if (obj != null && this.ID == obj.ID && this.Url == obj.Url && this.TimeBeginPlay == obj.TimeBeginPlay && this.TimeEndPlay == obj.TimeEndPlay) " is 142.
Long Statement,Alta_Media_Manager.Class,CommonUtilities,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\CommonUtilities.cs,checkAdminColtrol,The length of the statement  "			string _query = "SELECT  `user_id` '  `username` '  `user_pass` '  `full_name` '  `user_type_id` '  `user_status` FROM  `am_user` "; " is 132.
Long Statement,Alta_Media_Manager.Class,CommonUtilities,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\CommonUtilities.cs,checkAdminColtrol,The length of the statement  "			_query += "WHERE  `user_type_id` =1 AND  `user_status` =1 and MD5(CONCAT('ALTA_''username'user_pass'@key_serect))=@noonce"; " is 123.
Long Statement,Alta_Media_Manager.Class,Configuration,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\Configuration.cs,EncodeTo64,The length of the statement  "	string encodedData = bytes.Length + ":" + Convert.ToBase64String (bytes' 0' bytes.Length' Base64FormattingOptions.None); " is 120.
Long Statement,Alta_Media_Manager.Class,Configuration,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\Configuration.cs,getXPOConnectString,The length of the statement  "	return @"XpoProvider=MySql;server=" + MySql_server + ";user id=" + MySql_user + "; password=" + MySql_pass + "; database=" + MySql_database + ";persist security info=true;CharSet=utf8;"; " is 186.
Complex Conditional,Alta_Media_Manager.Class,alta_media_in_player,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\alta_media_in_player.cs,Equals,The conditional expression  "obj != null && this.ID == obj.ID && this.Url == obj.Url && this.TimeBeginPlay == obj.TimeBeginPlay && this.TimeEndPlay == obj.TimeEndPlay"  is complex.
Empty Catch Block,Alta_Media_Manager.Alta_net,SocketControlClient,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\alta_class_net.cs,GetRecievedData,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,AdminControl,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,stopAdminControl,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,StopConnect,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,userControl,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Class,alta_class_media,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_media.cs,LoadMediaType,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Class,alta_class_playlist,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_playlist.cs,LoadDetails,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Class,alta_class_playlist,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_playlist.cs,getListTerminal,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Class,alta_class_ftp,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_ftp.cs,deleteFile,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Class,alta_class_ftp,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_ftp.cs,DeleteFolder,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getCount,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylist,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListMedia,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchMedia,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,del_Media_Item,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,delete_playlist,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getScheduleDetails,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getMedia,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getUserType,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListPlaylistofMedia,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,checkMedia,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,changeStatusPlaylist,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,SearchPlaylist,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Alta_view.Mysql_helpper,mysql_alta_helpper,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Mysql_helpper\mysql_alta_helpper.cs,getListTerminal,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,Login,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Login.xaml.cs,submitData,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMyselfInfo,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMySchedule,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,myVlcControl_Paused,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,HideControl,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,VisibleControl,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,Changed_State_Event,The method has an empty catch block.
Empty Catch Block,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,KeyPressControl,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Class,CommonUtilities,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\CommonUtilities.cs,checkAdminColtrol,The method has an empty catch block.
Empty Catch Block,Alta_Media_Manager.Class,Configuration,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Class\Configuration.cs,LoadXML,The method has an empty catch block.
Magic Number,Alta_Media_Manager.Alta_net,alta_class_net,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\alta_class_net.cs,alta_class_net,The following statement contains a magic number: listener.Bind (new IPEndPoint (aryLocalAddr [0]' 399));  
Magic Number,Alta_Media_Manager.Alta_net,alta_class_net,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\alta_class_net.cs,alta_class_net,The following statement contains a magic number: listener.Listen (10);  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,AdminControl,The following statement contains a magic number: try {  	socket = AdminTCP.AcceptSocket ();  	byte[] clientData = new byte[1024];  	int byteData = socket.Receive (clientData' clientData.Length' SocketFlags.None);  	returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  	if (returnData == "Play")  		dataControl = _controlVLC._CONTROL_PLAY;  	else if (returnData == "Pause")  		dataControl = _controlVLC._CONTROL_PAUSE;  	else if (returnData == "Stop")  		dataControl = _controlVLC._CONTROL_STOP;  	else if (returnData == "Open")  		dataControl = _controlVLC._CONTROL_WAIT;  	else if (dataControl == _controlVLC._CONTROL_WAIT && returnData != "") {  		pathMedia = returnData;  		dataControl = _controlVLC._CONTROL_OPEN;  	}  	else if (returnData != "" && dataControl == _controlVLC._CONTROL_FREE) {  		StreamSever = returnData;  		dataControl = _controlVLC._CONTROL_STREAM;  	}  	else if (dataControl != _controlVLC._CONTROL_WAIT) {  	}  	socket.Close ();  }  catch (Exception) {  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,AdminControlThread,The following statement contains a magic number: while (true) {  	AdminControl ();  	Thread.Sleep (80);  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,AdminControlThread,The following statement contains a magic number: Thread.Sleep (80);  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,ReceviceDataRequest,The following statement contains a magic number: while (true) {  	DataRequest ();  	Thread.Sleep (100);  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,ReceviceDataRequest,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnectThread,The following statement contains a magic number: while (true) {  	listenConnect ();  	Thread.Sleep (80);  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnectThread,The following statement contains a magic number: Thread.Sleep (80);  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnect,The following statement contains a magic number: if (requestControl != _controlVLC._CONTROL_Connect) {  	try {  		socketRequest = requestTCP.AcceptSocket ();  		byte[] clientData = new byte[1024];  		int byteData = socketRequest.Receive (clientData' clientData.Length' SocketFlags.None);  		string returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  		if (returnData.IndexOf ("Connect_") >= 0) {  			IpEndPointUser = (IPEndPoint)socketRequest.RemoteEndPoint;  			requestControl = _controlVLC._CONTROL_Connect;  			string[] data = returnData.Split ('_');  			user = data [1];  			pass = data [2];  		}  		if (requestControl != _controlVLC._CONTROL_Connect)  			socketRequest.Close ();  	}  	catch (Exception ex) {  		#if DEBUG  		MessageBox.Show (ex.Message);  		#endif  	}  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnect,The following statement contains a magic number: if (requestControl != _controlVLC._CONTROL_Connect) {  	try {  		socketRequest = requestTCP.AcceptSocket ();  		byte[] clientData = new byte[1024];  		int byteData = socketRequest.Receive (clientData' clientData.Length' SocketFlags.None);  		string returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  		if (returnData.IndexOf ("Connect_") >= 0) {  			IpEndPointUser = (IPEndPoint)socketRequest.RemoteEndPoint;  			requestControl = _controlVLC._CONTROL_Connect;  			string[] data = returnData.Split ('_');  			user = data [1];  			pass = data [2];  		}  		if (requestControl != _controlVLC._CONTROL_Connect)  			socketRequest.Close ();  	}  	catch (Exception ex) {  		#if DEBUG  		MessageBox.Show (ex.Message);  		#endif  	}  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnect,The following statement contains a magic number: try {  	socketRequest = requestTCP.AcceptSocket ();  	byte[] clientData = new byte[1024];  	int byteData = socketRequest.Receive (clientData' clientData.Length' SocketFlags.None);  	string returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  	if (returnData.IndexOf ("Connect_") >= 0) {  		IpEndPointUser = (IPEndPoint)socketRequest.RemoteEndPoint;  		requestControl = _controlVLC._CONTROL_Connect;  		string[] data = returnData.Split ('_');  		user = data [1];  		pass = data [2];  	}  	if (requestControl != _controlVLC._CONTROL_Connect)  		socketRequest.Close ();  }  catch (Exception ex) {  	#if DEBUG  	MessageBox.Show (ex.Message);  	#endif  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnect,The following statement contains a magic number: try {  	socketRequest = requestTCP.AcceptSocket ();  	byte[] clientData = new byte[1024];  	int byteData = socketRequest.Receive (clientData' clientData.Length' SocketFlags.None);  	string returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  	if (returnData.IndexOf ("Connect_") >= 0) {  		IpEndPointUser = (IPEndPoint)socketRequest.RemoteEndPoint;  		requestControl = _controlVLC._CONTROL_Connect;  		string[] data = returnData.Split ('_');  		user = data [1];  		pass = data [2];  	}  	if (requestControl != _controlVLC._CONTROL_Connect)  		socketRequest.Close ();  }  catch (Exception ex) {  	#if DEBUG  	MessageBox.Show (ex.Message);  	#endif  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnect,The following statement contains a magic number: if (returnData.IndexOf ("Connect_") >= 0) {  	IpEndPointUser = (IPEndPoint)socketRequest.RemoteEndPoint;  	requestControl = _controlVLC._CONTROL_Connect;  	string[] data = returnData.Split ('_');  	user = data [1];  	pass = data [2];  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,listenConnect,The following statement contains a magic number: pass = data [2];  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,userControlThread,The following statement contains a magic number: while (true) {  	userControl ();  	Thread.Sleep (80);  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,userControlThread,The following statement contains a magic number: Thread.Sleep (80);  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,userControl,The following statement contains a magic number: try {  	socketUser = UserTCP.AcceptSocket ();  	IPEndPoint thisIp = (IPEndPoint)socketUser.RemoteEndPoint;  	if (IpUser == thisIp.Address.ToString ()) {  		byte[] clientData = new byte[1024];  		int byteData = socketUser.Receive (clientData' clientData.Length' SocketFlags.None);  		string returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  		if (returnData == "Play")  			userControlFlag = _controlVLC._CONTROL_PLAY;  		else if (returnData == "Pause")  			userControlFlag = _controlVLC._CONTROL_PAUSE;  		else if (returnData == "Stop")  			userControlFlag = _controlVLC._CONTROL_STOP;  		else if (returnData == "Back")  			userControlFlag = _controlVLC._CONTROL_BACK;  		else if (returnData == "Next")  			userControlFlag = _controlVLC._CONTROL_NEXT;  		else if (returnData == "connect") {  		}  		else if (dataControl != _controlVLC._CONTROL_WAIT) {  		}  	}  	socketUser.Close ();  }  catch (Exception) {  }  
Magic Number,Alta_Media_Manager.Alta_net,TCPListen,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_net\TCPListen.cs,userControl,The following statement contains a magic number: if (IpUser == thisIp.Address.ToString ()) {  	byte[] clientData = new byte[1024];  	int byteData = socketUser.Receive (clientData' clientData.Length' SocketFlags.None);  	string returnData = System.Text.Encoding.ASCII.GetString (clientData' 0' byteData);  	if (returnData == "Play")  		userControlFlag = _controlVLC._CONTROL_PLAY;  	else if (returnData == "Pause")  		userControlFlag = _controlVLC._CONTROL_PAUSE;  	else if (returnData == "Stop")  		userControlFlag = _controlVLC._CONTROL_STOP;  	else if (returnData == "Back")  		userControlFlag = _controlVLC._CONTROL_BACK;  	else if (returnData == "Next")  		userControlFlag = _controlVLC._CONTROL_NEXT;  	else if (returnData == "connect") {  	}  	else if (dataControl != _controlVLC._CONTROL_WAIT) {  	}  }  
Magic Number,Alta_Media_Manager.Alta_view.Class,alta_class_ftp,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_ftp.cs,downLoadFile,The following statement contains a magic number: if (!File.Exists (downLoadPath + @"\" + fileName)) {  	try {  		// Get the object used to communicate with the server.  		var reqFTP = (FtpWebRequest)FtpWebRequest.Create (new Uri (CommonUtilities.config.Ftp_Server + fptPath));  		reqFTP.Method = WebRequestMethods.Ftp.DownloadFile;  		// This example assumes the FTP site uses anonymous logon.  		reqFTP.Credentials = new NetworkCredential (CommonUtilities.config.Ftp_user' CommonUtilities.config.Ftp_pass);  		FtpWebResponse response = (FtpWebResponse)reqFTP.GetResponse ();  		Stream responseStream = response.GetResponseStream ();  		outputStream = new FileStream (downLoadPath + @"\" + fileName' FileMode.Create);  		long cl = response.ContentLength;  		int bufferSize = 2048;  		byte[] buffer = new byte[bufferSize];  		int readCount = responseStream.Read (buffer' 0' bufferSize);  		while (readCount > 0) {  			outputStream.Write (buffer' 0' readCount);  			readCount = responseStream.Read (buffer' 0' bufferSize);  		}  		outputStream.Close ();  		response.Close ();  	}  	catch (Exception ex) {  		MessageBox.Show (ex.Message);  	}  	finally {  		// reqFTP.Abort();  	}  }  
Magic Number,Alta_Media_Manager.Alta_view.Class,alta_class_ftp,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\Alta_view\Class\alta_class_ftp.cs,downLoadFile,The following statement contains a magic number: try {  	// Get the object used to communicate with the server.  	var reqFTP = (FtpWebRequest)FtpWebRequest.Create (new Uri (CommonUtilities.config.Ftp_Server + fptPath));  	reqFTP.Method = WebRequestMethods.Ftp.DownloadFile;  	// This example assumes the FTP site uses anonymous logon.  	reqFTP.Credentials = new NetworkCredential (CommonUtilities.config.Ftp_user' CommonUtilities.config.Ftp_pass);  	FtpWebResponse response = (FtpWebResponse)reqFTP.GetResponse ();  	Stream responseStream = response.GetResponseStream ();  	outputStream = new FileStream (downLoadPath + @"\" + fileName' FileMode.Create);  	long cl = response.ContentLength;  	int bufferSize = 2048;  	byte[] buffer = new byte[bufferSize];  	int readCount = responseStream.Read (buffer' 0' bufferSize);  	while (readCount > 0) {  		outputStream.Write (buffer' 0' readCount);  		readCount = responseStream.Read (buffer' 0' bufferSize);  	}  	outputStream.Close ();  	response.Close ();  }  catch (Exception ex) {  	MessageBox.Show (ex.Message);  }  finally {  	// reqFTP.Abort();  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,VlcControlOnPositionChanged,The following statement contains a magic number: barTimeSeek.Value = (int)(e.Data * 100);  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,HideControl,The following statement contains a magic number: if (WindowState == WindowState.Maximized) {  	if (time > 5) {  		localThread = new Thread (localThreadRun);  		localThread.IsBackground = true;  		localThread.Start ();  	}  	else {  		DoubleAnimation daHideControl = new DoubleAnimation (1' 0' TimeSpan.FromSeconds (2));  		clock = daHideControl.CreateClock ();  		daHideControl.EasingFunction = new PowerEase () {  			EasingMode = EasingMode.EaseOut  		};  		clock.Completed += (o' s) =>  {  			Title_Layout.Visibility = Visibility.Hidden;  			ControlPlayer_Layout.Visibility = Visibility.Hidden;  			try {  				if (localThread != null && localThread.IsAlive)  					localThread.Abort ();  			}  			catch (Exception) {  			}  		};  		Title_Layout.ApplyAnimationClock (OpacityProperty' clock);  		ControlPlayer_Layout.ApplyAnimationClock (OpacityProperty' clock);  	}  }  else {  	this.VisibleControl ();  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,HideControl,The following statement contains a magic number: if (WindowState == WindowState.Maximized) {  	if (time > 5) {  		localThread = new Thread (localThreadRun);  		localThread.IsBackground = true;  		localThread.Start ();  	}  	else {  		DoubleAnimation daHideControl = new DoubleAnimation (1' 0' TimeSpan.FromSeconds (2));  		clock = daHideControl.CreateClock ();  		daHideControl.EasingFunction = new PowerEase () {  			EasingMode = EasingMode.EaseOut  		};  		clock.Completed += (o' s) =>  {  			Title_Layout.Visibility = Visibility.Hidden;  			ControlPlayer_Layout.Visibility = Visibility.Hidden;  			try {  				if (localThread != null && localThread.IsAlive)  					localThread.Abort ();  			}  			catch (Exception) {  			}  		};  		Title_Layout.ApplyAnimationClock (OpacityProperty' clock);  		ControlPlayer_Layout.ApplyAnimationClock (OpacityProperty' clock);  	}  }  else {  	this.VisibleControl ();  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,HideControl,The following statement contains a magic number: if (time > 5) {  	localThread = new Thread (localThreadRun);  	localThread.IsBackground = true;  	localThread.Start ();  }  else {  	DoubleAnimation daHideControl = new DoubleAnimation (1' 0' TimeSpan.FromSeconds (2));  	clock = daHideControl.CreateClock ();  	daHideControl.EasingFunction = new PowerEase () {  		EasingMode = EasingMode.EaseOut  	};  	clock.Completed += (o' s) =>  {  		Title_Layout.Visibility = Visibility.Hidden;  		ControlPlayer_Layout.Visibility = Visibility.Hidden;  		try {  			if (localThread != null && localThread.IsAlive)  				localThread.Abort ();  		}  		catch (Exception) {  		}  	};  	Title_Layout.ApplyAnimationClock (OpacityProperty' clock);  	ControlPlayer_Layout.ApplyAnimationClock (OpacityProperty' clock);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,HideControl,The following statement contains a magic number: if (time > 5) {  	localThread = new Thread (localThreadRun);  	localThread.IsBackground = true;  	localThread.Start ();  }  else {  	DoubleAnimation daHideControl = new DoubleAnimation (1' 0' TimeSpan.FromSeconds (2));  	clock = daHideControl.CreateClock ();  	daHideControl.EasingFunction = new PowerEase () {  		EasingMode = EasingMode.EaseOut  	};  	clock.Completed += (o' s) =>  {  		Title_Layout.Visibility = Visibility.Hidden;  		ControlPlayer_Layout.Visibility = Visibility.Hidden;  		try {  			if (localThread != null && localThread.IsAlive)  				localThread.Abort ();  		}  		catch (Exception) {  		}  	};  	Title_Layout.ApplyAnimationClock (OpacityProperty' clock);  	ControlPlayer_Layout.ApplyAnimationClock (OpacityProperty' clock);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,localThreadRun,The following statement contains a magic number: while (true) {  	Thread.Sleep (10000);  	if (clock != null)  		clock.Controller.Begin ();  	localThread.Abort ();  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,localThreadRun,The following statement contains a magic number: Thread.Sleep (10000);  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,Changed_State_Event,The following statement contains a magic number: HideControl (15);  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,ProgressBarChange,The following statement contains a magic number: pos = (e.GetPosition (barTimeSeek).X / barTimeSeek.ActualWidth) * 100;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,ProgressBarChange,The following statement contains a magic number: if (pos >= barTimeSeek.Minimum && pos <= barTimeSeek.Maximum) {  	barTimeSeek.Value = (int)pos;  	if (myPositionChanging) {  		myVlcControl.Position = (float)pos / 100;  	}  	// var duration = myVlcControl.Media.Duration;  	alta_txt_curTime.Text = string.Format ("{0:00}:{1:00}:{2:00}"' time.Hours' time.Minutes' time.Seconds);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,ProgressBarChange,The following statement contains a magic number: if (myPositionChanging) {  	myVlcControl.Position = (float)pos / 100;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,ProgressBarChange,The following statement contains a magic number: myVlcControl.Position = (float)pos / 100;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,SliderMouseLeftButtonUp,The following statement contains a magic number: myVlcControl.Position = (float)barTimeSeek.Value / 100;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (playlist.Count > 0) {  	playlist.media = new List<alta_media_in_player> ();  	for (int i = 0; i < playlist.Count; i++) {  		alta_media_in_player tmp = new alta_media_in_player ();  		tmp.ftpUrl = list_media [i].alta_media.alta_url;  		if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  			tmp.type = 1;  			String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  			tmp.Url = location;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  			tmp.type = 2;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else {  			tmp.type = 3;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		DateTime time = list_media [i].alta_time_play;  		tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  		tmp.ID = list_media [i].alta_media.alta_id;  		tmp.TimeBeginPlay = list_media [i].alta_time_play;  		tmp.TimeEndPlay = list_media [i].alta_time_end;  		playlist.media.Add (tmp);  	}  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (playlist.Count > 0) {  	playlist.media = new List<alta_media_in_player> ();  	for (int i = 0; i < playlist.Count; i++) {  		alta_media_in_player tmp = new alta_media_in_player ();  		tmp.ftpUrl = list_media [i].alta_media.alta_url;  		if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  			tmp.type = 1;  			String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  			tmp.Url = location;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  			tmp.type = 2;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else {  			tmp.type = 3;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		DateTime time = list_media [i].alta_time_play;  		tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  		tmp.ID = list_media [i].alta_media.alta_id;  		tmp.TimeBeginPlay = list_media [i].alta_time_play;  		tmp.TimeEndPlay = list_media [i].alta_time_end;  		playlist.media.Add (tmp);  	}  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (playlist.Count > 0) {  	playlist.media = new List<alta_media_in_player> ();  	for (int i = 0; i < playlist.Count; i++) {  		alta_media_in_player tmp = new alta_media_in_player ();  		tmp.ftpUrl = list_media [i].alta_media.alta_url;  		if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  			tmp.type = 1;  			String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  			tmp.Url = location;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  			tmp.type = 2;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else {  			tmp.type = 3;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		DateTime time = list_media [i].alta_time_play;  		tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  		tmp.ID = list_media [i].alta_media.alta_id;  		tmp.TimeBeginPlay = list_media [i].alta_time_play;  		tmp.TimeEndPlay = list_media [i].alta_time_end;  		playlist.media.Add (tmp);  	}  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (playlist.Count > 0) {  	playlist.media = new List<alta_media_in_player> ();  	for (int i = 0; i < playlist.Count; i++) {  		alta_media_in_player tmp = new alta_media_in_player ();  		tmp.ftpUrl = list_media [i].alta_media.alta_url;  		if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  			tmp.type = 1;  			String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  			tmp.Url = location;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  			tmp.type = 2;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else {  			tmp.type = 3;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		DateTime time = list_media [i].alta_time_play;  		tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  		tmp.ID = list_media [i].alta_media.alta_id;  		tmp.TimeBeginPlay = list_media [i].alta_time_play;  		tmp.TimeEndPlay = list_media [i].alta_time_end;  		playlist.media.Add (tmp);  	}  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (playlist.Count > 0) {  	playlist.media = new List<alta_media_in_player> ();  	for (int i = 0; i < playlist.Count; i++) {  		alta_media_in_player tmp = new alta_media_in_player ();  		tmp.ftpUrl = list_media [i].alta_media.alta_url;  		if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  			tmp.type = 1;  			String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  			tmp.Url = location;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  			tmp.type = 2;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		else {  			tmp.type = 3;  			tmp.Url = list_media [i].alta_media.alta_url;  			tmp.name = list_media [i].alta_media.alta_name;  		}  		DateTime time = list_media [i].alta_time_play;  		tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  		tmp.ID = list_media [i].alta_media.alta_id;  		tmp.TimeBeginPlay = list_media [i].alta_time_play;  		tmp.TimeEndPlay = list_media [i].alta_time_end;  		playlist.media.Add (tmp);  	}  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: for (int i = 0; i < playlist.Count; i++) {  	alta_media_in_player tmp = new alta_media_in_player ();  	tmp.ftpUrl = list_media [i].alta_media.alta_url;  	if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  		tmp.type = 1;  		String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  		tmp.Url = location;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  		tmp.type = 2;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else {  		tmp.type = 3;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	DateTime time = list_media [i].alta_time_play;  	tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  	tmp.ID = list_media [i].alta_media.alta_id;  	tmp.TimeBeginPlay = list_media [i].alta_time_play;  	tmp.TimeEndPlay = list_media [i].alta_time_end;  	playlist.media.Add (tmp);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: for (int i = 0; i < playlist.Count; i++) {  	alta_media_in_player tmp = new alta_media_in_player ();  	tmp.ftpUrl = list_media [i].alta_media.alta_url;  	if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  		tmp.type = 1;  		String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  		tmp.Url = location;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  		tmp.type = 2;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else {  		tmp.type = 3;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	DateTime time = list_media [i].alta_time_play;  	tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  	tmp.ID = list_media [i].alta_media.alta_id;  	tmp.TimeBeginPlay = list_media [i].alta_time_play;  	tmp.TimeEndPlay = list_media [i].alta_time_end;  	playlist.media.Add (tmp);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: for (int i = 0; i < playlist.Count; i++) {  	alta_media_in_player tmp = new alta_media_in_player ();  	tmp.ftpUrl = list_media [i].alta_media.alta_url;  	if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  		tmp.type = 1;  		String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  		tmp.Url = location;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  		tmp.type = 2;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else {  		tmp.type = 3;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	DateTime time = list_media [i].alta_time_play;  	tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  	tmp.ID = list_media [i].alta_media.alta_id;  	tmp.TimeBeginPlay = list_media [i].alta_time_play;  	tmp.TimeEndPlay = list_media [i].alta_time_end;  	playlist.media.Add (tmp);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: for (int i = 0; i < playlist.Count; i++) {  	alta_media_in_player tmp = new alta_media_in_player ();  	tmp.ftpUrl = list_media [i].alta_media.alta_url;  	if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  		tmp.type = 1;  		String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  		tmp.Url = location;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  		tmp.type = 2;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else {  		tmp.type = 3;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	DateTime time = list_media [i].alta_time_play;  	tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  	tmp.ID = list_media [i].alta_media.alta_id;  	tmp.TimeBeginPlay = list_media [i].alta_time_play;  	tmp.TimeEndPlay = list_media [i].alta_time_end;  	playlist.media.Add (tmp);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: for (int i = 0; i < playlist.Count; i++) {  	alta_media_in_player tmp = new alta_media_in_player ();  	tmp.ftpUrl = list_media [i].alta_media.alta_url;  	if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  		tmp.type = 1;  		String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  		tmp.Url = location;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  		tmp.type = 2;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	else {  		tmp.type = 3;  		tmp.Url = list_media [i].alta_media.alta_url;  		tmp.name = list_media [i].alta_media.alta_name;  	}  	DateTime time = list_media [i].alta_time_play;  	tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  	tmp.ID = list_media [i].alta_media.alta_id;  	tmp.TimeBeginPlay = list_media [i].alta_time_play;  	tmp.TimeEndPlay = list_media [i].alta_time_end;  	playlist.media.Add (tmp);  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  	tmp.type = 1;  	String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  	tmp.Url = location;  	tmp.name = list_media [i].alta_media.alta_name;  }  else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  	tmp.type = 2;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  else {  	tmp.type = 3;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  	tmp.type = 1;  	String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  	tmp.Url = location;  	tmp.name = list_media [i].alta_media.alta_name;  }  else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  	tmp.type = 2;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  else {  	tmp.type = 3;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (list_media [i].alta_media.alta_media_type.alta_id == 1) {  	tmp.type = 1;  	String location = alta_class_ftp.downLoadFile (list_media [i].alta_media.alta_url);  	tmp.Url = location;  	tmp.name = list_media [i].alta_media.alta_name;  }  else if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  	tmp.type = 2;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  else {  	tmp.type = 3;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  	tmp.type = 2;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  else {  	tmp.type = 3;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  	tmp.type = 2;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  else {  	tmp.type = 3;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: if (list_media [i].alta_media.alta_media_type.alta_id == 2) {  	tmp.type = 2;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  else {  	tmp.type = 3;  	tmp.Url = list_media [i].alta_media.alta_url;  	tmp.name = list_media [i].alta_media.alta_name;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: tmp.type = 2;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: tmp.type = 3;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,LoadMediaToPlaylist,The following statement contains a magic number: tmp.TimePlay = time.Hour * 360 + time.Minute * 60 + time.Second;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (this.Schedule != null && this.Schedule.alta_details_schedule != null && this.Schedule.alta_details_schedule.Count > 0) {  	lb_count.Content = "count: " + countDemo;  	flag_play_local = false;  	int curPosPlay = this.mainPlaylist.cur_pos_play;  	if (!myVlcControl.IsPlaying) {  		countDemo++;  		if (countDemo == 1)  			this.mainPlaylist = LoadMediaToPlaylist (this.Schedule.alta_details_schedule [0].alta_playlist.alta_details);  		if (countDemo > 1000)  			countDemo = 0;  	}  	else {  		countDemo = 0;  	}  	if (!flagPlaying) {  		//this.mainPlaylist.cur_pos_play = 0;  		// playMedia(0);  	}  	else {  		this.mainPlaylist.cur_pos_play = curPosPlay;  	}  }  else {  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (!myVlcControl.IsPlaying) {  	countDemo++;  	if (countDemo == 1)  		this.mainPlaylist = LoadMediaToPlaylist (this.Schedule.alta_details_schedule [0].alta_playlist.alta_details);  	if (countDemo > 1000)  		countDemo = 0;  }  else {  	countDemo = 0;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (countDemo > 1000)  	countDemo = 0;  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_OFF) {  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  	this.Close ();  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ABORT_USER) {  	Tcp_Server.flag_login_user = false;  	Tcp_Server.abort_user ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ACCEPT_USER) {  	Tcp_Server.flag_login_user = true;  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ABORT_USER) {  	Tcp_Server.flag_login_user = false;  	Tcp_Server.abort_user ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ACCEPT_USER) {  	Tcp_Server.flag_login_user = true;  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ABORT_USER) {  	Tcp_Server.flag_login_user = false;  	Tcp_Server.abort_user ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ACCEPT_USER) {  	Tcp_Server.flag_login_user = true;  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.adminControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ABORT_USER) {  	Tcp_Server.flag_login_user = false;  	Tcp_Server.abort_user ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ACCEPT_USER) {  	Tcp_Server.flag_login_user = true;  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_ABORT_USER) {  	Tcp_Server.flag_login_user = false;  	Tcp_Server.abort_user ();  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_ACCEPT_USER) {  	Tcp_Server.flag_login_user = true;  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_ACCEPT_USER) {  	Tcp_Server.flag_login_user = true;  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.adminControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		// myVlcControl.Pause();  		// myVlcControl.Media.AddOption(":sout=#transcode{vcodec=h264'acodec=mpga'ab=128'channels=2'samplerate=44100}:rtp{sdp=rtsp://:8554/demo} :sout-all :sout-keep");  		// myVlcControl.Play();  	}  	Tcp_Server.adminControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.dataControl == _controlVLC._CONTROL_PLAY) {  	myVlcControl.Media.ParsedChanged += MediaOnParsedChanged;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.dataControl == _controlVLC._CONTROL_PAUSE) {  	myVlcControl.Pause ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.dataControl == _controlVLC._CONTROL_STOP) {  	myVlcControl.Stop ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_NEXT)  //{  //    this.mainPlaylist.cur_pos_play = Next(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  //else if (Tcp_Server.dataControl == _controlVLC._CONTROL_BACK)  //{  //    this.mainPlaylist.cur_pos_play = Back(mainPlaylist);  //    Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  //}  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.dataControl == _controlVLC._CONTROL_SCREEN) {  	if (myVlcControl.IsPaused || myVlcControl.IsPlaying) {  		flag_send_image = true;  		alta_media_in_player media = this.mainPlaylist.media [this.mainPlaylist.cur_pos_play];  		Tcp_Server.sendImage (media.name + "|" + media.ftpUrl);  	}  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM) {  	if (mediaClock != null) {  		mediaClock.Controller.Remove ();  		mediaClock = null;  	}  	myVlcControl.Stop ();  	if (mediaClock != null)  		mediaClock.Controller.Stop ();  	Thread.Sleep (10000);  	flag_treaming = true;  	MediaBase tmpMedia = new LocationMedia ("rtsp://" + Tcp_Server.ipHostStream + ":8554/demo");  	myVlcControl.Media = tmpMedia;  	myVlcControl.Play ();  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  else if (Tcp_Server.dataControl == _controlVLC._CONTROL_STREAM_STOP) {  	myVlcControl.Stop ();  	this.mainPlaylist.cur_pos_play = 0;  	Start ();  	flag_treaming = false;  	// playMedia(0);  	Tcp_Server.dataControl = _controlVLC._CONTROL_FREE;  }  
Magic Number,Alta_Media_Player,MainWindow,C:\repos\iceriver102_Window\Alta_Media_Player\Alta_Media_Player\MainWindow.xaml.cs,mainClock_CurrentTimeInvalidated,The following statement contains a magic number: Thread.Sleep (10000);  
