Implementation smell,Namespace,Class,File,Method,Description
Long Method,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitBinary,The method has 158 lines of code.
Complex Method,Cartographer.Compiler,ConversionPatternGenericCloser,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternGenericCloser.cs,EnsureMeetsGenericConstraints,Cyclomatic complexity of the method is 8
Complex Method,Cartographer.Compiler,ConversionPatternGenericCloser,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternGenericCloser.cs,TryAddParameters,Cyclomatic complexity of the method is 12
Complex Method,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitBinary,Cyclomatic complexity of the method is 124
Complex Method,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitNewArray,Cyclomatic complexity of the method is 8
Complex Method,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitUnary,Cyclomatic complexity of the method is 57
Complex Method,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,FormatBinder,Cyclomatic complexity of the method is 13
Long Identifier,Cartographer.Compiler,ConversionPatternRepository,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternRepository.cs,ConversionPatternRepository,The length of the parameter conversionPatternGenericCloser is 30.
Long Identifier,Cartographer,IMapper,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\IMapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Identifier,Cartographer,IMapper,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\IMapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Identifier,Cartographer.Internal,Mapper,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Internal\Mapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Identifier,Cartographer.Internal,Mapper,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Internal\Mapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Statement,Cartographer.Compiler,ConversionPatternGenericCloser,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternGenericCloser.cs,Close,The length of the statement  "		throw new ArgumentException (string.Format ("Type {0} doesn't implement {1} and therefore is invalid for this operation."' conversionPatternType' typeof(IConversionPattern<' >))); " is 179.
Long Statement,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitDebugInfo,The length of the statement  "	var s = String.Format (CultureInfo.CurrentCulture' "<DebugInfo({0}: {1}' {2}' {3}' {4})>"' node.Document.FileName' node.StartLine' node.StartColumn' node.EndLine' node.EndColumn); " is 179.
Long Statement,Cartographer.Compiler,MappingCompiler,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingCompiler.cs,InitSource,The length of the statement  "	var step = Expression.Assign (strategy.SourceExpression' Expression.Convert (Expression.Property (strategy.ContextExpression' MappingContextMeta.SourceInstance)' strategy.Source)); " is 180.
Long Statement,Cartographer.Compiler,MappingCompiler,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingCompiler.cs,InitSource,The length of the statement  "	// we don't describe source. It gets cast from the source to its actual type but that's not interesting and only adds noise to the mapping " is 138.
Long Statement,Cartographer.Compiler,MappingInfo,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,Equals,The length of the statement  "	return other.MappingSourceType == MappingSourceType && other.MappingTargetType == MappingTargetType && other.MapIntoExistingTargetInstance == MapIntoExistingTargetInstance; " is 172.
Long Statement,Cartographer.Compiler,MappingInfo,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,ToString,The length of the statement  "	return string.Format ("{0} -> {1}{2}"' MappingSourceType' MappingTargetType' MapIntoExistingTargetInstance ? "*" : string.Empty); " is 129.
Long Statement,Cartographer,MapperBuilder,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,AddCatalogsFromAssembly,The length of the statement  "	var types = assembly.GetAvailableTypes ().Where (t => t.IsClass && t.IsAbstract == false && typeof(IMappingCatalog).IsAssignableFrom (t)); " is 138.
Long Statement,Cartographer,MapperBuilder,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMapper,The length of the statement  "		Settings.InfoLog.Invoke ("MapperBuilder.BuildMapper() invoked more than once. Returning cached instance! Make sure you do not call this method multiple times."); " is 161.
Long Statement,Cartographer,MapperBuilder,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMapper,The length of the statement  "		var mapperLocal = new Mapper (Settings.MappingStrategyBuilder = Settings.MappingStrategyBuilder ?? BuildMappingStrategyBuilder ()' Settings.MappingCompiler = Settings.MappingCompiler ?? BuildMappingCompiler ()' BuildTypeMatchers (Settings.TypeMatchers)); " is 254.
Long Statement,Cartographer,MapperBuilder,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildConversionPatternRepository,The length of the statement  "	return new ConversionPatternRepository (Settings.ConversionPatternGenericCloser = Settings.ConversionPatternGenericCloser ?? BuildConversionPatternGenericCloser ()' Settings.ConversionPatternTypes); " is 198.
Long Statement,Cartographer,MapperBuilder,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMappingDescriptor,The length of the statement  "	return new MappingDescriptor (Settings.MappingDescriptorWriter = Settings.MappingDescriptorWriter ?? BuildMappingDescriptorWriter ()); " is 134.
Long Statement,Cartographer,MapperBuilder,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMappingStrategyBuilder,The length of the statement  "	return new MappingStrategyBuilder (Settings.ConversionPatternRepository = Settings.ConversionPatternRepository ?? BuildConversionPatternRepository ()' BuildMappingStrategyContributors (Settings.MappingStategyContributors)); " is 223.
Long Statement,Cartographer.Internal.Extensions,TypeExtensions,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Internal\Extensions\TypeExtensions.cs,GetInterface,The length of the statement  "		return allInterfaces.SingleOrDefault (i => string.Equals (i.Name' @interface.Name' StringComparison.OrdinalIgnoreCase) && string.Equals (i.Namespace' @interface.Namespace' StringComparison.OrdinalIgnoreCase)); " is 209.
Long Statement,Cartographer.Internal.Extensions,TypeExtensions,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Internal\Extensions\TypeExtensions.cs,GetInterface,The length of the statement  "		throw new AmbiguousMatchException (string.Format ("More than one interface matched for {0} on type {1}"' @interface' type)' e); " is 127.
Long Statement,Cartographer.Contributors,ConstructorContributor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Contributors\ConstructorContributor.cs,Apply,The length of the statement  "	strategy.ConstructorParameterMappingSteps = new OrderedKeyedCollection<ParameterInfo' MappingStep> (strategy.TargetConstructor.GetParameters ()); " is 145.
Long Statement,Cartographer.Contributors,InitTarget,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Contributors\InitTarget.cs,Apply,The length of the statement  "		strategy.InitTargetStep = new SimpleStep (strategy.Target' strategy.Target' (s' _) => Expression.Convert (Expression.Property (s.ContextExpression' MappingContextMeta.TargetInstance)' s.Target)); " is 195.
Long Statement,Cartographer.Contributors,InitTarget,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Contributors\InitTarget.cs,Apply,The length of the statement  "				throw new InvalidOperationException (String.Format ("No mapping for constructor parameter {0} has been specified. All constructor parameters need value"' mappingStep.Key)); " is 172.
Long Statement,Cartographer.Contributors,InitTarget,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Contributors\InitTarget.cs,Apply,The length of the statement  "		strategy.InitTargetStep = new SimpleStep (strategy.Target' strategy.Target' (s' _) => Expression.New (s.TargetConstructor' GetConstructorParameters (s))); " is 154.
Long Statement,Cartographer.Patterns,MatchByNameFlattenMappingPattern,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Patterns\MatchByNameFlattenMappingPattern.cs,BuildPropertyChain,The length of the statement  "		var property = currentPropertySet.FirstOrDefault (p => name.IndexOf (p.Name' currentIndex' StringComparison.OrdinalIgnoreCase) == currentIndex); " is 144.
Long Statement,Cartographer.Patterns,MatchByNameMappingPattern,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Patterns\MatchByNameMappingPattern.cs,Contribute,The length of the statement  "			var sourceProperty = properties.FirstOrDefault (p => string.Equals (p.Name' mappingStep.Key.Name' StringComparison.OrdinalIgnoreCase)); " is 135.
Magic Number,Cartographer.Compiler,MappingInfo,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var result = (MappingSourceType != null ? MappingSourceType.GetHashCode () : 0);  	result = (result * 397) ^ (MappingTargetType != null ? MappingTargetType.GetHashCode () : 0);  	result = (result * 397) ^ (MapIntoExistingTargetInstance.GetHashCode ());  	return result;  }  
Magic Number,Cartographer.Compiler,MappingInfo,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,GetHashCode,The following statement contains a magic number: unchecked {  	var result = (MappingSourceType != null ? MappingSourceType.GetHashCode () : 0);  	result = (result * 397) ^ (MappingTargetType != null ? MappingTargetType.GetHashCode () : 0);  	result = (result * 397) ^ (MapIntoExistingTargetInstance.GetHashCode ());  	return result;  }  
Magic Number,Cartographer.Compiler,MappingInfo,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (MappingTargetType != null ? MappingTargetType.GetHashCode () : 0);  
Magic Number,Cartographer.Compiler,MappingInfo,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (MapIntoExistingTargetInstance.GetHashCode ());  
Magic Number,Cartographer.Steps,ConstructorAssignChain,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Steps\ConstructorAssignChain.cs,AllowNullValueOf,The following statement contains a magic number: if (nullableProperties == null) {  	nullableProperties = new List<PropertyInfo> (4);  }  
Magic Number,Cartographer.Steps,ConstructorAssignChain,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Steps\ConstructorAssignChain.cs,AllowNullValueOf,The following statement contains a magic number: nullableProperties = new List<PropertyInfo> (4);  
Magic Number,Cartographer.Steps,AssignChain,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Steps\AssignChain.cs,AllowNullValueOf,The following statement contains a magic number: if (nullableProperties == null) {  	nullableProperties = new List<PropertyInfo> (4);  }  
Magic Number,Cartographer.Steps,AssignChain,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Steps\AssignChain.cs,AllowNullValueOf,The following statement contains a magic number: nullableProperties = new List<PropertyInfo> (4);  
Missing Default,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitNewArray,The following switch statement is missing a default case: switch (node.NodeType) {  case ExpressionType.NewArrayBounds:  	// new MyType[](expr1' expr2)  	Append ("new " + node.Type);  	VisitExpressions ('('' node.Expressions' ')');  	break;  case ExpressionType.NewArrayInit:  	// new [] {expr1' expr2}   	Append ("new [] ");  	VisitExpressions ('{'' node.Expressions' '}');  	break;  }  
Missing Default,Cartographer.Compiler,DescriptionVisitor,F:\newReposMay17\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitTypeBinary,The following switch statement is missing a default case: switch (node.NodeType) {  case ExpressionType.TypeIs:  	Append (" Is ");  	break;  case ExpressionType.TypeEqual:  	Append (" TypeEqual ");  	break;  }  
