Implementation smell,Namespace,Class,File,Method,Description
Long Method,Cartographer.Compiler,DescriptionVisitor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitBinary,The method has 176 lines of code.
Complex Method,Cartographer.Compiler,ConversionPatternGenericCloser,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternGenericCloser.cs,EnsureMeetsGenericConstraints,Cyclomatic complexity of the method is 8
Complex Method,Cartographer.Compiler,ConversionPatternGenericCloser,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternGenericCloser.cs,TryAddParameters,Cyclomatic complexity of the method is 12
Complex Method,Cartographer.Compiler,DescriptionVisitor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitBinary,Cyclomatic complexity of the method is 46
Complex Method,Cartographer.Compiler,DescriptionVisitor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitUnary,Cyclomatic complexity of the method is 16
Complex Method,Cartographer.Compiler,DescriptionVisitor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,FormatBinder,Cyclomatic complexity of the method is 13
Long Identifier,Cartographer.Compiler,ConversionPatternRepository,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternRepository.cs,ConversionPatternRepository,The length of the parameter conversionPatternGenericCloser is 30.
Long Identifier,Cartographer.Compiler,ConversionPatternRepository,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternRepository.cs,,The length of the parameter conversionPatternGenericCloser is 30.
Long Identifier,Cartographer,IMapper,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\IMapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Identifier,Cartographer,IMapper,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\IMapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Identifier,Cartographer.Internal,Mapper,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Internal\Mapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Identifier,Cartographer.Internal,Mapper,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Internal\Mapper.cs,ConvertWithArguments,The length of the parameter inlineArgumentsAsAnonymousType is 30.
Long Statement,Cartographer.Compiler,ConversionPatternGenericCloser,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\ConversionPatternGenericCloser.cs,Close,The length of the statement  "				throw new ArgumentException(string.Format("Type {0} doesn't implement {1} and therefore is invalid for this operation."' conversionPatternType' typeof (IConversionPattern<'>))); " is 177.
Long Statement,Cartographer.Compiler,MappingCompiler,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\MappingCompiler.cs,InitSource,The length of the statement  "			var step = Expression.Assign(strategy.SourceExpression' Expression.Convert(Expression.Property(strategy.ContextExpression' MappingContextMeta.SourceInstance)' strategy.Source)); " is 177.
Long Statement,Cartographer.Compiler,MappingCompiler,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\MappingCompiler.cs,InitSource,The length of the statement  "			// we don't describe source. It gets cast from the source to its actual type but that's not interesting and only adds noise to the mapping " is 138.
Long Statement,Cartographer.Compiler,MappingInfo,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,ToString,The length of the statement  "			return string.Format("{0} -> {1}{2}"' MappingSourceType' MappingTargetType' MapIntoExistingTargetInstance ? "*" : string.Empty); " is 128.
Long Statement,Cartographer,MapperBuilder,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMapper,The length of the statement  "				Settings.InfoLog.Invoke("MapperBuilder.BuildMapper() invoked more than once. Returning cached instance! Make sure you do not call this method multiple times."); " is 160.
Long Statement,Cartographer,MapperBuilder,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMapper,The length of the statement  "				var mapperLocal = new Mapper(Settings.MappingStrategyBuilder = Settings.MappingStrategyBuilder ?? BuildMappingStrategyBuilder()' " is 128.
Long Statement,Cartographer,MapperBuilder,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildConversionPatternRepository,The length of the statement  "			return new ConversionPatternRepository(Settings.ConversionPatternGenericCloser = Settings.ConversionPatternGenericCloser ?? BuildConversionPatternGenericCloser()' " is 162.
Long Statement,Cartographer,MapperBuilder,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMappingDescriptor,The length of the statement  "			return new MappingDescriptor(Settings.MappingDescriptorWriter = Settings.MappingDescriptorWriter ?? BuildMappingDescriptorWriter()); " is 132.
Long Statement,Cartographer,MapperBuilder,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,BuildMappingStrategyBuilder,The length of the statement  "			return new MappingStrategyBuilder(Settings.ConversionPatternRepository = Settings.ConversionPatternRepository ?? BuildConversionPatternRepository()' " is 148.
Long Statement,Cartographer,MapperBuilderSettings,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\MapperBuilder.cs,AddConversionPatternType,The length of the statement  "					throw new InvalidOperationException(string.Format("Type {0} is not a valid conversion pattern type. Type must implement {1}."' conversionPatternType' typeof (IConversionPattern<'>))); " is 183.
Long Statement,Cartographer.Internal.Extensions,TypeExtensions,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Internal\Extensions\TypeExtensions.cs,GetInterface,The length of the statement  "				throw new AmbiguousMatchException(string.Format("More than one interface matched for {0} on type {1}"' @interface' type)' e); " is 125.
Long Statement,Cartographer.Contributors,ConstructorContributor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Contributors\ConstructorContributor.cs,Apply,The length of the statement  "			strategy.ConstructorParameterMappingSteps = new OrderedKeyedCollection<ParameterInfo' MappingStep>(strategy.TargetConstructor.GetParameters()); " is 143.
Long Statement,Cartographer.Contributors,InitTarget,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Contributors\InitTarget.cs,Apply,The length of the statement  "				strategy.InitTargetStep = new SimpleStep(strategy.Target' strategy.Target' (s' _) => Expression.Convert(Expression.Property(s.ContextExpression' MappingContextMeta.TargetInstance)' s.Target)); " is 192.
Long Statement,Cartographer.Contributors,InitTarget,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Contributors\InitTarget.cs,Apply,The length of the statement  "						throw new InvalidOperationException(String.Format("No mapping for constructor parameter {0} has been specified. All constructor parameters need value"' mappingStep.Key)); " is 170.
Long Statement,Cartographer.Contributors,InitTarget,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Contributors\InitTarget.cs,Apply,The length of the statement  "				strategy.InitTargetStep = new SimpleStep(strategy.Target' strategy.Target' (s' _) => Expression.New(s.TargetConstructor' GetConstructorParameters(s))); " is 151.
Long Statement,Cartographer.Patterns,MatchByNameFlattenMappingPattern,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Patterns\MatchByNameFlattenMappingPattern.cs,BuildPropertyChain,The length of the statement  "				var property = currentPropertySet.FirstOrDefault(p => name.IndexOf(p.Name' currentIndex' StringComparison.OrdinalIgnoreCase) == currentIndex); " is 142.
Long Statement,Cartographer.Patterns,MatchByNameMappingPattern,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Patterns\MatchByNameMappingPattern.cs,Contribute,The length of the statement  "					var sourceProperty = properties.FirstOrDefault(p => string.Equals(p.Name' mappingStep.Key.Name' StringComparison.OrdinalIgnoreCase)); " is 133.
Magic Number,Cartographer.Compiler,MappingInfo,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (MappingTargetType != null ? MappingTargetType.GetHashCode() : 0);
Magic Number,Cartographer.Compiler,MappingInfo,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\MappingInfo.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (MapIntoExistingTargetInstance.GetHashCode());
Magic Number,Cartographer.Patterns,MatchByNameFlattenMappingPattern,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Patterns\MatchByNameFlattenMappingPattern.cs,BuildPropertyChain,The following statement contains a magic number: var properties = new List<PropertyInfo>(4);
Magic Number,Cartographer.Steps,ConstructorAssignChain,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Steps\ConstructorAssignChain.cs,AllowNullValueOf,The following statement contains a magic number: nullableProperties = new List<PropertyInfo>(4);
Magic Number,Cartographer.Steps,DelegatingConversionStep,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Steps\DelegatingConversionStep.cs,BuildConversionExpression,The following statement contains a magic number: var visitor = new DelegatingConversionVisitor(strategy' parameters[0]' parameters[1]' parameters[2]);
Magic Number,Cartographer.Steps,AssignChain,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Steps\AssignChain.cs,AllowNullValueOf,The following statement contains a magic number: nullableProperties = new List<PropertyInfo>(4);
Missing Default,Cartographer.Compiler,DescriptionVisitor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitNewArray,The following switch statement is missing a default case: switch (node.NodeType)  			{  				case ExpressionType.NewArrayBounds:  					// new MyType[](expr1' expr2)  					Append("new " + node.Type);  					VisitExpressions('('' node.Expressions' ')');  					break;  				case ExpressionType.NewArrayInit:  					// new [] {expr1' expr2}   					Append("new [] ");  					VisitExpressions('{'' node.Expressions' '}');  					break;  			}
Missing Default,Cartographer.Compiler,DescriptionVisitor,D:\research\architectureSmells\repos\kkozmic_Cartographer\src\Cartographer\Compiler\DescriptionVisitor.cs,VisitTypeBinary,The following switch statement is missing a default case: switch (node.NodeType)  			{  				case ExpressionType.TypeIs:  					Append(" Is ");  					break;  				case ExpressionType.TypeEqual:  					Append(" TypeEqual ");  					break;  			}
