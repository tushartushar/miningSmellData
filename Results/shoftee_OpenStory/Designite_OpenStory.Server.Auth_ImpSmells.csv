Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OpenStory.Server.Auth,AuthClient,C:\repos\shoftee_OpenStory\Server\OpenStory.Server.Auth\AuthClient.cs,AuthClient,The method has 5 parameters. Parameters: authenticator' nexus' serverSession' packetFactory' logger
Long Statement,OpenStory.Server.Auth,AuthClient,C:\repos\shoftee_OpenStory\Server\OpenStory.Server.Auth\AuthClient.cs,AuthResponse,The length of the statement  "                    // 0x40' 0x20 (and probably 0x10' 0x8' 0x4' 0x2' and 0x1) don't appear to confer any particular benefits' restrictions' or functionality " is 136.
Magic Number,OpenStory.Server.Auth,AuthClient,C:\repos\shoftee_OpenStory\Server\OpenStory.Server.Auth\AuthClient.cs,HandlePinValidation,The following statement contains a magic number: reader.Skip(5);
Magic Number,OpenStory.Server.Auth,AuthClient,C:\repos\shoftee_OpenStory\Server\OpenStory.Server.Auth\AuthClient.cs,AuthResponse,The following statement contains a magic number: using (var builder = this.PacketFactory.CreatePacket("Authentication"))              {                  builder.WriteInt32(result);                    builder.WriteInt16(0x0000);                    if (result == AuthenticationResult.Success)                  {                      builder.WriteInt32(account.AccountId);                        if (this.State == AuthClientState.SetGender)                      {                          builder.WriteByte(AuthOperationType.GenderSelect);                      }                      else if (this.State == AuthClientState.SetPin)                      {                          builder.WriteByte(AuthOperationType.PinSelect);                      }                      else                      {                          builder.WriteByte(account.Gender);                      }                        // Enables commands like /c' /ch' /m' /h (etc.)' but disables trading                      builder.WriteBoolean(account.IsGameMaster);                        // Seems like 0x80 is a "MWLB" account - I doubt it... it disables attacking and allows GM fly                      // 0x40' 0x20 (and probably 0x10' 0x8' 0x4' 0x2' and 0x1) don't appear to confer any particular benefits' restrictions' or functionality                      // (Although I didn't test client GM commands or anything of the sort)                      builder.WriteByte(account.IsGameMaster ? 0x80 : 0x00);                        builder.WriteBoolean(account.IsGameMaster || account.IsGameMasterHelper);                        builder.WriteLengthString(account.UserName);                        builder.WriteByte(2);                        // TODO: quiet ban support?                      //builder.WriteByte(account.QuietBanReason);                      builder.WriteByte(0);                      //builder.WriteTimestamp(account.QuietBanTime);                      builder.WriteInt64(0);                        // TODO: Creation time                      builder.WriteTimestamp(account.CreationTime);                        builder.WriteInt32(0);                  }                    return builder.ToByteArray();              }
Missing Default,OpenStory.Server.Auth,AuthClient,C:\repos\shoftee_OpenStory\Server\OpenStory.Server.Auth\AuthClient.cs,ProcessPacket,The following switch statement is missing a default case: switch (args.Label)              {                  case "Authenticate":                      this.HandleAuthentication(reader);                      break;                    case "ValidatePin":                      this.HandlePinValidation(reader);                      break;                    case "AssignPin":                      this.HandlePinAssignment(reader);                      break;                    case "WorldListRequest":                  case "WorldListRefresh":                      this.HandleWorldListRequest(reader);                      break;                    case "ChannelSelect":                      this.HandleChannelSelect(reader);                      break;                    case "CharacterListRequest":                      this.HandleCharacterListRequest(reader);                      break;                    case "CharacterSelect":                      this.HandleCharacterSelect(reader);                      break;              }
Missing Default,OpenStory.Server.Auth,AuthClient,C:\repos\shoftee_OpenStory\Server\OpenStory.Server.Auth\AuthClient.cs,HandlePinValidation,The following switch statement is missing a default case: switch (action)              {                  case PinRequestType.PinNotSet:                      this.State = AuthClientState.AskPin;                        this.ServerSession.WritePacket(this.SetPinResponse());                      break;                    case PinRequestType.CheckPin:                      if (this.CheckPin(reader))                      {                          this.State = AuthClientState.LoggedIn;                            this.ServerSession.WritePacket(this.PinAcceptedResponse());                      }                      else                      {                          this.ServerSession.WritePacket(this.InvalidPinResponse());                      }                      break;                    case PinRequestType.AssignPin:                      if (this.CheckPin(reader))                      {                          this.State = AuthClientState.LoggedIn;                            this.ServerSession.WritePacket(this.SetPinResponse());                      }                      else                      {                          this.ServerSession.WritePacket(this.InvalidPinResponse());                      }                      break;              }
