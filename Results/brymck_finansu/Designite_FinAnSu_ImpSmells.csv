Implementation smell,Namespace,Class,File,Method,Description
Long Method,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The method has 247 lines of code.
Complex Method,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,Cyclomatic complexity of the method is 22
Complex Method,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,AmericanBinomial,Cyclomatic complexity of the method is 9
Complex Method,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BermudanBinomial,Cyclomatic complexity of the method is 15
Complex Method,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,ImportCSV,Cyclomatic complexity of the method is 8
Complex Method,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,FedFreq,Cyclomatic complexity of the method is 8
Complex Method,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,QuoteHistoryParse,Cyclomatic complexity of the method is 9
Complex Method,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,ShortenDate,Cyclomatic complexity of the method is 9
Complex Method,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,GetWebData,Cyclomatic complexity of the method is 9
Long Parameter List,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,DollarDur,The method has 5 parameters. Parameters: cashFlow' valDate' pmtDate' df' dc
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,American,The method has 7 parameters. Parameters: callPutFlag' S' X' T' r' b' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,AmericanBinomial,The method has 8 parameters. Parameters: callPutFlag' S' K' T' r' q' v' iter
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The method has 6 parameters. Parameters: callPutFlag' X' T' r' b' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Payoff,The method has 6 parameters. Parameters: isAsset' isLong' isCall' strikePrice' premium' assetPrice
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Black76,The method has 6 parameters. Parameters: callPutFlag' F' X' T' r' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BlackScholes,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,GBlackScholes,The method has 7 parameters. Parameters: callPutFlag' S' X' T' r' b' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,ImpliedVolatility,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' cm
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BSDelta,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Vega,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Theta,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Rho,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Gamma,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Vanna,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Charm,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Speed,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Zomma,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Color,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DvegaDtime,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Vomma,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DualDelta,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DualGamma,The method has 7 parameters. Parameters: callPutFlag' S' K' T' r' q' v
Long Parameter List,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BermudanBinomial,The method has 9 parameters. Parameters: callPutFlag' S' K' T' r' q' v' potential_exercise_times' iter
Long Parameter List,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,FRA,The method has 5 parameters. Parameters: rate1' ttm1' rate2' ttm2' basis
Long Parameter List,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,FRAFromFXLong,The method has 8 parameters. Parameters: fxSpot' fxSwapLong' fxSwapShort' fgnFra' startDays' endDays' domBasis' fgnBasis
Long Parameter List,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,FRAFromFXShort,The method has 8 parameters. Parameters: fxSpot' fxSwapLong' fxSwapShort' fgnFra' startDays' endDays' domBasis' fgnBasis
Long Parameter List,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,Swaption,The method has 8 parameters. Parameters: payRecFlag' t1' m' F' X' T' r' v
Long Parameter List,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The method has 6 parameters. Parameters: valuationDate' overnightStart' overnightValue' termStart' termEnds' termValues
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,ImportCSV,The method has 5 parameters. Parameters: url' startLine' reverse' formats' hasHeaders
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,Quote,The method has 6 parameters. Parameters: secId' source' names' liveUpdating' freq' showHeaders
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,LiveQuote,The method has 5 parameters. Parameters: secId' source' names' freq' showHeaders
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,BloombergQuote,The method has 5 parameters. Parameters: secId' names' liveUpdating' freq' showHeaders
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,GoogleQuote,The method has 5 parameters. Parameters: secId' names' liveUpdating' freq' showHeaders
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,YahooQuote,The method has 5 parameters. Parameters: secId' names' liveUpdating' freq' showHeaders
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,QuoteParams,The method has 13 parameters. Parameters: price' change' pctChange' date' time' bid' ask' openPrice' high' low' volume' marketCap' pe
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,GoogleHistory,The method has 7 parameters. Parameters: secId' dblStartDate' dblEndDate' period' names' showHeaders' dateOrder
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,YahooHistory,The method has 7 parameters. Parameters: secId' dblStartDate' dblEndDate' period' names' showHeaders' dateOrder
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,QuoteHistory,The method has 8 parameters. Parameters: secId' source' dblStartDate' dblEndDate' period' names' showHeaders' dateOrder
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,QuoteHistoryParams,The method has 7 parameters. Parameters: date' openPrice' high' low' closePrice' volume' adjClose
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,QuoteHistoryParse,The method has 6 parameters. Parameters: url' dateFormat' names' showHeaders' dateOrder' checkGlitch
Long Parameter List,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,Import,The method has 6 parameters. Parameters: url' patterns' maxLength' liveUpdating' freq' headers
Long Parameter List,FinAnSu,Miscellaneous,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Miscellaneous.cs,HumanCapital,The method has 6 parameters. Parameters: age' initEarnings' earningsGrowth' lifeExpectancy' rfr' disc
Long Parameter List,FinAnSu,QuoteSource,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\QuoteSource.cs,QuoteSource,The method has 9 parameters. Parameters: abbreviation' url' forcePrefix' forceSuffix' forceInterpret' matchPrefix' matchSuffix' quoteParams' historyParams
Long Parameter List,RTDServers,Query,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\RTD.cs,Query,The method has 5 parameters. Parameters: url' patterns' maxLength' freq' headers
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AboutForm)); " is 129.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.ProductNameLabel.Font = new System.Drawing.Font("Segoe UI"' 18F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 149.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.HomepageLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.UrlLinkLabel_LinkClicked); " is 127.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.MailLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.MailLinkLabel_LinkClicked); " is 124.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.LicenseLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.UrlLinkLabel_LinkClicked); " is 126.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.DownloadLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.UrlLinkLabel_LinkClicked); " is 127.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.ExcelDnaLicenseLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.UrlLinkLabel_LinkClicked); " is 134.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.ExcelDnaDownloadLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.UrlLinkLabel_LinkClicked); " is 135.
Long Statement,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Segoe UI"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 137.
Long Statement,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,Swaption,The length of the statement  "                return ((1 - 1 / Math.Pow(1 + F / m' t1 * m)) / F) * Math.Exp(-r * T) * (F * Statistics.CND(d1) - X * Statistics.CND(d2)); " is 122.
Long Statement,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,Swaption,The length of the statement  "                return ((1 - 1 / Math.Pow(1 + F / m' t1 * m)) / F) * Math.Exp(-r * T) * (X * Statistics.CND(-d2) - F * Statistics.CND(-d1)); " is 124.
Long Statement,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The length of the statement  "            return ((1 + overnightValue * (termStart - overnightStart) / 360) * (1 + termValue * (valuationDate - termStart) / 360) - 1) * " is 126.
Long Statement,FinAnSu,Functionality,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Functionality\Sort.cs,Sort,The length of the statement  "            Array.Sort<T[]>(data' (x' y) => comparer.Compare((ascending ? x[index] : y[index])' (ascending ? y[index] : x[index]))); " is 120.
Long Statement,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,GoogleHistory,The length of the statement  "            string url = string.Format("http://www.google.com/finance/historical?q={0}&startdate={1}&enddate={2}&histperiod={3}&output=csv"' " is 128.
Long Statement,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,YahooHistory,The length of the statement  "            string url = string.Format("http://ichart.finance.yahoo.com/table.csv?s={0}&d={1}&e={2}&f={3}&g={4}&a={5}&b={6}&c={7}&ignore=.csv"' " is 131.
Long Statement,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DownloadForm)); " is 132.
Long Statement,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The length of the statement  "            this.ProgressWorker.ProgressChanged += new System.ComponentModel.ProgressChangedEventHandler(this.ProgressWorker_ProgressChanged); " is 130.
Long Statement,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The length of the statement  "            this.ProgressWorker.RunWorkerCompleted += new System.ComponentModel.RunWorkerCompletedEventHandler(this.ProgressWorker_RunWorkerCompleted); " is 139.
Complex Conditional,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,Import,The conditional expression  "headers == null || (headers.Length == 1 && (headers[0] is ExcelMissing || headers[0] is ExcelEmpty))"  is complex.
Empty Catch Block,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,ImportCSV,The method has an empty catch block.
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ProductNameLabel.Font = new System.Drawing.Font("Segoe UI"' 18F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ProductNameLabel.Location = new System.Drawing.Point(130' 12);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ProductNameLabel.Location = new System.Drawing.Point(130' 12);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ProductNameLabel.Margin = new System.Windows.Forms.Padding(3' 0' 0' 0);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ProductNameLabel.Size = new System.Drawing.Size(109' 32);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ProductNameLabel.Size = new System.Drawing.Size(109' 32);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.VersionLabel.Location = new System.Drawing.Point(239' 27);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.VersionLabel.Location = new System.Drawing.Point(239' 27);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.VersionLabel.Margin = new System.Windows.Forms.Padding(0' 0' 3' 0);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.VersionLabel.Size = new System.Drawing.Size(46' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.VersionLabel.Size = new System.Drawing.Size(46' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.VersionLabel.TabIndex = 2;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CloseButton.Location = new System.Drawing.Point(114' 276);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CloseButton.Location = new System.Drawing.Point(114' 276);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CloseButton.Size = new System.Drawing.Size(75' 23);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CloseButton.Size = new System.Drawing.Size(75' 23);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CloseButton.TabIndex = 15;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Location = new System.Drawing.Point(12' 76);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Location = new System.Drawing.Point(12' 76);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Size = new System.Drawing.Size(179' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.Size = new System.Drawing.Size(179' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.CopyrightLabel.TabIndex = 4;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Location = new System.Drawing.Point(12' 238);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Location = new System.Drawing.Point(12' 238);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Size = new System.Drawing.Size(130' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.Size = new System.Drawing.Size(130' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.HomepageLinkLabel.TabIndex = 13;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Location = new System.Drawing.Point(12' 254);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Location = new System.Drawing.Point(12' 254);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Size = new System.Drawing.Size(147' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.Size = new System.Drawing.Size(147' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.MailLinkLabel.TabIndex = 14;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Location = new System.Drawing.Point(12' 92);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Location = new System.Drawing.Point(12' 92);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Size = new System.Drawing.Size(167' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.Size = new System.Drawing.Size(167' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLabel.TabIndex = 5;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Location = new System.Drawing.Point(12' 108);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Location = new System.Drawing.Point(12' 108);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Size = new System.Drawing.Size(279' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.Size = new System.Drawing.Size(279' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LicenseLinkLabel.TabIndex = 6;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Location = new System.Drawing.Point(12' 222);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Location = new System.Drawing.Point(12' 222);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Size = new System.Drawing.Size(50' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.Size = new System.Drawing.Size(50' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ContactLabel.TabIndex = 12;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Location = new System.Drawing.Point(12' 133);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Location = new System.Drawing.Point(12' 133);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Size = new System.Drawing.Size(97' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.Size = new System.Drawing.Size(97' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLabel.TabIndex = 7;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Location = new System.Drawing.Point(12' 165);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Location = new System.Drawing.Point(12' 165);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Size = new System.Drawing.Size(244' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.Size = new System.Drawing.Size(244' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaCopyrightLabel.TabIndex = 9;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Location = new System.Drawing.Point(133' 46);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Location = new System.Drawing.Point(133' 46);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 0);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 0);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Margin = new System.Windows.Forms.Padding(3' 6' 3' 0);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Size = new System.Drawing.Size(187' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.Size = new System.Drawing.Size(187' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.DownloadLinkLabel.TabIndex = 3;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Location = new System.Drawing.Point(12' 181);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Location = new System.Drawing.Point(12' 181);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Size = new System.Drawing.Size(177' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.Size = new System.Drawing.Size(177' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLabel.TabIndex = 10;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Location = new System.Drawing.Point(12' 197);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Location = new System.Drawing.Point(12' 197);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 6);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Size = new System.Drawing.Size(197' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.Size = new System.Drawing.Size(197' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaLicenseLinkLabel.TabIndex = 11;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Location = new System.Drawing.Point(12' 149);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Location = new System.Drawing.Point(12' 149);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Margin = new System.Windows.Forms.Padding(3' 0' 3' 3);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Size = new System.Drawing.Size(162' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.Size = new System.Drawing.Size(162' 13);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ExcelDnaDownloadLinkLabel.TabIndex = 8;
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LogoImage.Location = new System.Drawing.Point(12' 12);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LogoImage.Location = new System.Drawing.Point(12' 12);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LogoImage.Size = new System.Drawing.Size(112' 55);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.LogoImage.Size = new System.Drawing.Size(112' 55);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(332' 302);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(332' 302);
Magic Number,FinAnSu,AboutForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\AboutForm.cs,InitializeComponent,The following statement contains a magic number: this.Font = new System.Drawing.Font("Segoe UI"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0)));
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (dayOfWeek)                  {                      case 0:                      case 6:                          return false;                      default:                          break;                  }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsHoliday,The following statement contains a magic number: switch (date.Month)              {                  case 1:                      // New Year's Day                      if (day == 1 || day == 2) { return IsObservedHoliday(day' dayOfWeek' 1); }                      // Birthday of Martin Luther King' Jr.                      if (dayOfWeek == 1) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 2:                      // Washington's Birthday                      if (dayOfWeek == 1) { return (day >= 15 && day <= 21); }                      return false;                  case 5:                      // Memorial Day                      if (dayOfWeek == 1) { return (day >= 25 && day <= 31); }                      else { return false; }                  case 7:                      // Independence Day                      if (day >= 3 && day <= 5) { return IsObservedHoliday(day' dayOfWeek' 4); }                      else { return false; }                  case 9:                      // Labor Day                      if (dayOfWeek == 1) { return (day >= 1 && day <= 7); }                      else { return false; }                  case 10:                      // Columbus Day                      if (dayOfWeek == 1) { return (day >= 8 && day <= 14); }                      else { return false; }                  case 11:                      // Veterans Day                      if (day >= 10 && day <= 12) { return IsObservedHoliday(day' dayOfWeek' 11); }                      // Thanksgiving                      else if (dayOfWeek == 4) { return (day >= 22 && day <= 28); }                      else { return false; }                  case 12:                      // Christmas Day                      if (day >= 24 && day <= 26) { return IsObservedHoliday(day' dayOfWeek' 25); }                      // New Year's Day                      if (day == 31 && dayOfWeek == 5) { return true; }                      else { return false; }                  default:                      return true;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsObservedHoliday,The following statement contains a magic number: switch (day - holiday)              {                  case -1: // If 1 day before holiday' test if Friday                      return (dayOfWeek == 5);                  case 0: // If on holiday' test if weekday                      return (dayOfWeek != 0 && dayOfWeek != 6);                  case 1: // If 1 day after holiday' test if Monday                      return (dayOfWeek == 1);                  default:                      return false;              }
Magic Number,FinAnSu,Calendar,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Calendar.cs,IsObservedHoliday,The following statement contains a magic number: switch (day - holiday)              {                  case -1: // If 1 day before holiday' test if Friday                      return (dayOfWeek == 5);                  case 0: // If on holiday' test if weekday                      return (dayOfWeek != 0 && dayOfWeek != 6);                  case 1: // If 1 day after holiday' test if Monday                      return (dayOfWeek == 1);                  default:                      return false;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,DollarDur,The following statement contains a magic number: return cashFlow * (FwdToDf(dfToFwd(df' valDate' pmtDate' dc) + .0001'                  valDate' pmtDate' dc) - df);
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,dfToFwd,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return (Math.Pow(df' 91.31 / (valDate - pmtDate))                          - 1) * 360 / 91.31;                  case "30/360":                  case "30E/360":                      return (Math.Pow(df' 182.62 / (valDate - pmtDate))                          - 1) * 2;                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,dfToFwd,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return (Math.Pow(df' 91.31 / (valDate - pmtDate))                          - 1) * 360 / 91.31;                  case "30/360":                  case "30E/360":                      return (Math.Pow(df' 182.62 / (valDate - pmtDate))                          - 1) * 2;                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,dfToFwd,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return (Math.Pow(df' 91.31 / (valDate - pmtDate))                          - 1) * 360 / 91.31;                  case "30/360":                  case "30E/360":                      return (Math.Pow(df' 182.62 / (valDate - pmtDate))                          - 1) * 2;                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,dfToFwd,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return (Math.Pow(df' 91.31 / (valDate - pmtDate))                          - 1) * 360 / 91.31;                  case "30/360":                  case "30E/360":                      return (Math.Pow(df' 182.62 / (valDate - pmtDate))                          - 1) * 2;                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,dfToFwd,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return (Math.Pow(df' 91.31 / (valDate - pmtDate))                          - 1) * 360 / 91.31;                  case "30/360":                  case "30E/360":                      return (Math.Pow(df' 182.62 / (valDate - pmtDate))                          - 1) * 2;                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToDf,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return Math.Pow(1 + fwd * 91.31 / 360' (valDate - pmtDate) / 91.31);                  case "30E/360":                  case "30/360":                      return Math.Pow(1 + fwd / 2' (valDate - pmtDate) / 182.62);                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToDf,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return Math.Pow(1 + fwd * 91.31 / 360' (valDate - pmtDate) / 91.31);                  case "30E/360":                  case "30/360":                      return Math.Pow(1 + fwd / 2' (valDate - pmtDate) / 182.62);                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToDf,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return Math.Pow(1 + fwd * 91.31 / 360' (valDate - pmtDate) / 91.31);                  case "30E/360":                  case "30/360":                      return Math.Pow(1 + fwd / 2' (valDate - pmtDate) / 182.62);                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToDf,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return Math.Pow(1 + fwd * 91.31 / 360' (valDate - pmtDate) / 91.31);                  case "30E/360":                  case "30/360":                      return Math.Pow(1 + fwd / 2' (valDate - pmtDate) / 182.62);                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToDf,The following statement contains a magic number: switch (dc.ToUpper())              {                  case "ACT/360":                      return Math.Pow(1 + fwd * 91.31 / 360' (valDate - pmtDate) / 91.31);                  case "30E/360":                  case "30/360":                      return Math.Pow(1 + fwd / 2' (valDate - pmtDate) / 182.62);                  default:                      return 0;              }
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToFwd,The following statement contains a magic number: return dfToFwd(FwdToDf(fwd' 0' 365.24' fromDc)'                  0' 365.24' toDc);
Magic Number,FinAnSu,Conversion,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Conversion.cs,FwdToFwd,The following statement contains a magic number: return dfToFwd(FwdToDf(fwd' 0' 365.24' fromDc)'                  0' 365.24' toDc);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,AmericanBinomial,The following statement contains a magic number: iter = 500;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double N = 2 * b / (v * v);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double m = 2 * r / (v * v);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double qu = (-(N - 1) + s * Math.Sqrt(Math.Pow(N - 1' 2) + 4 * m)) / 2;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double qu = (-(N - 1) + s * Math.Sqrt(Math.Pow(N - 1' 2) + 4 * m)) / 2;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double qu = (-(N - 1) + s * Math.Sqrt(Math.Pow(N - 1' 2) + 4 * m)) / 2;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double h = -s * (b * T + s * 2 * v * Math.Sqrt(T)) * X / (s * (su - X));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double k = 2 * r / (v * v * (1 - Math.Exp(-r * T)));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double d1 = (Math.Log(Si / X) + (b + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double Q = (-(N - 1) + s * Math.Sqrt(Math.Pow(N - 1' 2) + 4 * k)) / 2;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double Q = (-(N - 1) + s * Math.Sqrt(Math.Pow(N - 1' 2) + 4 * k)) / 2;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double Q = (-(N - 1) + s * Math.Sqrt(Math.Pow(N - 1' 2) + 4 * k)) / 2;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: double E = 0.000001;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,CritComdtyPrice,The following statement contains a magic number: d1 = (Math.Log(Si / X) + (b + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Black76,The following statement contains a magic number: double d1 = (Math.Log(F / X) + (v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BlackScholes,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,GBlackScholes,The following statement contains a magic number: double d1 = (Math.Log(S / X) + (b + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,ImpliedVolatility,The following statement contains a magic number: const double epsilon = 0.00000001;
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,ImpliedVolatility,The following statement contains a magic number: vi = Math.Sqrt(Math.Abs(Math.Log(S / K) + r * T) * 2 / T);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BSDelta,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Vega,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Theta,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Theta,The following statement contains a magic number: return -Math.Exp(-q * T) * (S * Statistics.PDF(d1) * v) / (2 * Math.Sqrt(T)) -                      r * K * Math.Exp(-r * T) * Statistics.CND(d2) + q * S * Math.Exp(-q * T) * Statistics.CND(d1);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Rho,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Gamma,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Vanna,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Charm,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Charm,The following statement contains a magic number: return -q * Math.Exp(-q * T) * Statistics.CND(d1) + Math.Exp(-q * T) * Statistics.PDF(d1) *                      (2 * (r - q) * T - d2 * v * Math.Sqrt(T)) / (2 * T * v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Charm,The following statement contains a magic number: return -q * Math.Exp(-q * T) * Statistics.CND(d1) + Math.Exp(-q * T) * Statistics.PDF(d1) *                      (2 * (r - q) * T - d2 * v * Math.Sqrt(T)) / (2 * T * v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Speed,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Zomma,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Color,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Color,The following statement contains a magic number: return -Math.Exp(-q * T) * Statistics.PDF(d1) / (2 * S * T * v * Math.Sqrt(T)) *                  (2 * q * T + 1 + (2 * (r - q) * T - d2 * v * Math.Sqrt(T)) / (2 * T * v * Math.Sqrt(T)) * d1);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Color,The following statement contains a magic number: return -Math.Exp(-q * T) * Statistics.PDF(d1) / (2 * S * T * v * Math.Sqrt(T)) *                  (2 * q * T + 1 + (2 * (r - q) * T - d2 * v * Math.Sqrt(T)) / (2 * T * v * Math.Sqrt(T)) * d1);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Color,The following statement contains a magic number: return -Math.Exp(-q * T) * Statistics.PDF(d1) / (2 * S * T * v * Math.Sqrt(T)) *                  (2 * q * T + 1 + (2 * (r - q) * T - d2 * v * Math.Sqrt(T)) / (2 * T * v * Math.Sqrt(T)) * d1);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Color,The following statement contains a magic number: return -Math.Exp(-q * T) * Statistics.PDF(d1) / (2 * S * T * v * Math.Sqrt(T)) *                  (2 * q * T + 1 + (2 * (r - q) * T - d2 * v * Math.Sqrt(T)) / (2 * T * v * Math.Sqrt(T)) * d1);
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DvegaDtime,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DvegaDtime,The following statement contains a magic number: return S * Math.Exp(-q * T) * Statistics.PDF(d1) * Math.Sqrt(T) *                  (q + ((r - q) * d1) / (v * Math.Sqrt(T)) - (1 + d1 * d2) / (2 * T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,Vomma,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DualDelta,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,DualGamma,The following statement contains a magic number: double d1 = (Math.Log(S / K) + (r - q + v * v / 2) * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,Options,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\AmericanOptions.cs,BermudanBinomial,The following statement contains a magic number: iter = 500;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,Var,The following statement contains a magic number: v += Math.Pow(x[i] - xAvg' 2);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: const double b = 0.2316419;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: const double a1 = 0.31938153;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: const double a2 = 0.356563782;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: const double a3 = 1.781477937;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: const double a4 = 1.821255978;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: const double a5 = 1.330274429;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: dCND = 1 - 1 / Math.Sqrt(2 * Math.PI) *                  Math.Exp(-L * L / 2) *                  (a1 * K -                  a2 * K * K +                  a3 * K * K * K -                  a4 * K * K * K * K +                  a5 * K * K * K * K * K);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CND,The following statement contains a magic number: dCND = 1 - 1 / Math.Sqrt(2 * Math.PI) *                  Math.Exp(-L * L / 2) *                  (a1 * K -                  a2 * K * K +                  a3 * K * K * K -                  a4 * K * K * K * K +                  a5 * K * K * K * K * K);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,PDF,The following statement contains a magic number: return Math.Exp(-(z * z) / 2) / Math.Sqrt(2 * Math.PI);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,PDF,The following statement contains a magic number: return Math.Exp(-(z * z) / 2) / Math.Sqrt(2 * Math.PI);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,ND,The following statement contains a magic number: return Math.Exp(-x * x / 2) / Math.Sqrt(2 * Math.PI);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,ND,The following statement contains a magic number: return Math.Exp(-x * x / 2) / Math.Sqrt(2 * Math.PI);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,BND,The following statement contains a magic number: return Math.Exp(-1 / (2 * (1 - rho * rho)) * (x * x + y * y - 2 * x * y * rho)) /                  (2 * Math.PI * Math.Sqrt(1 - rho * rho));
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,BND,The following statement contains a magic number: return Math.Exp(-1 / (2 * (1 - rho * rho)) * (x * x + y * y - 2 * x * y * rho)) /                  (2 * Math.PI * Math.Sqrt(1 - rho * rho));
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,BND,The following statement contains a magic number: return Math.Exp(-1 / (2 * (1 - rho * rho)) * (x * x + y * y - 2 * x * y * rho)) /                  (2 * Math.PI * Math.Sqrt(1 - rho * rho));
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] A = new double[] { 2.50662823884' -18.61500062529' 41.39119773534' -25.44106049637 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] A = new double[] { 2.50662823884' -18.61500062529' 41.39119773534' -25.44106049637 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] A = new double[] { 2.50662823884' -18.61500062529' 41.39119773534' -25.44106049637 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] A = new double[] { 2.50662823884' -18.61500062529' 41.39119773534' -25.44106049637 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] b = new double[] { -8.4735109309' 23.08336743743' -21.06224101826' 3.13082909833 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] b = new double[] { -8.4735109309' 23.08336743743' -21.06224101826' 3.13082909833 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] b = new double[] { -8.4735109309' 23.08336743743' -21.06224101826' 3.13082909833 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] b = new double[] { -8.4735109309' 23.08336743743' -21.06224101826' 3.13082909833 };
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: double[] c = new double[]{0.337475482272615' 0.976169019091719' 0.160797971491821' 2.76438810333863E-02'                  3.8405729373609E-03' 3.951896511919E-04' 3.21767881767818E-05' 2.888167364E-07' 3.960315187E-07};
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: x = U - .5;
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: r = x * (((A[3] * r + A[2]) * r + A[1]) * r + A[0]) /                      ((((b[3] * r + b[2]) * r + b[1]) * r + b[0]) * r + 1);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: r = x * (((A[3] * r + A[2]) * r + A[1]) * r + A[0]) /                      ((((b[3] * r + b[2]) * r + b[1]) * r + b[0]) * r + 1);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: r = x * (((A[3] * r + A[2]) * r + A[1]) * r + A[0]) /                      ((((b[3] * r + b[2]) * r + b[1]) * r + b[0]) * r + 1);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: r = x * (((A[3] * r + A[2]) * r + A[1]) * r + A[0]) /                      ((((b[3] * r + b[2]) * r + b[1]) * r + b[0]) * r + 1);
Magic Number,FinAnSu,Statistics,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\Helpers.cs,CNDEV,The following statement contains a magic number: Math.Abs(x) < .92
Magic Number,FinAnSu,InterestRates,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\InterestRates.cs,Swaption,The following statement contains a magic number: double d1 = (Math.Log(F / X) + v * v / 2 * T) / (v * Math.Sqrt(T));
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Interpolate,The following statement contains a magic number: return 2;
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The following statement contains a magic number: termEnds.Length == 2 && termValues.Length == 2
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The following statement contains a magic number: termEnds.Length == 2 && termValues.Length == 2
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The following statement contains a magic number: return ((1 + overnightValue * (termStart - overnightStart) / 360) * (1 + termValue * (valuationDate - termStart) / 360) - 1) *                  360 / (valuationDate - overnightStart);
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The following statement contains a magic number: return ((1 + overnightValue * (termStart - overnightStart) / 360) * (1 + termValue * (valuationDate - termStart) / 360) - 1) *                  360 / (valuationDate - overnightStart);
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Stub,The following statement contains a magic number: return ((1 + overnightValue * (termStart - overnightStart) / 360) * (1 + termValue * (valuationDate - termStart) / 360) - 1) *                  360 / (valuationDate - overnightStart);
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Days,The following statement contains a magic number: switch (convention.Substring(0' convention.IndexOf("/")).ToLower())              {                  case "act":                      return endDate - startDate;                  case "30":                      if (startDay == 31 || (startMonth == 2 && startDay >= 28))                      {                          startDay = 30;                      }                        if (endDay == 31 || (endMonth == 2 && endDay >= 28))                      {                          if (startDay == 30)                          {                              endDay = 30;                          }                          else                          {                              endDay = 1;                              if (endMonth == 12)                              {                                  endMonth = 1;                                  endYear++;                              }                              else                              {                                  endMonth++;                              }                          }                      }                        return (endDay - startDay) + (endMonth - startMonth) * 30 + (endYear - startYear) * 360;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Years,The following statement contains a magic number: switch (convention.Substring(convention.IndexOf("/") + 1).ToLower())              {                  case "360":                      return days / 360;                  case "365":                      return days / 365;                  case "act/act":                      return 0;                  default:                      return 0;              }
Magic Number,FinAnSu,YieldCurve,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\FinMath\YieldCurve.cs,Years,The following statement contains a magic number: switch (convention.Substring(convention.IndexOf("/") + 1).ToLower())              {                  case "360":                      return days / 360;                  case "365":                      return days / 365;                  case "act/act":                      return 0;                  default:                      return 0;              }
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,ParseHex,The following statement contains a magic number: return int.Parse(hex' NumberStyles.HexNumber) * (hex.Length == 1 ? 17 : 1);
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HexToColor,The following statement contains a magic number: int colorLength = (hex.Length == 3 ? 1 : 2);
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HexToColor,The following statement contains a magic number: int colorLength = (hex.Length == 3 ? 1 : 2);
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HexToColor,The following statement contains a magic number: int blue = ParseHex(hex.Substring(2 * colorLength' colorLength));
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: int hi = (int)(Math.Floor(hue / 60)) % 6;
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: int hi = (int)(Math.Floor(hue / 60)) % 6;
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: double f = hue / 60 - Math.Floor(hue / 60);
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: double f = hue / 60 - Math.Floor(hue / 60);
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: value = value * 255;
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: switch (hi)              {                  case 0:                      return Color.FromArgb(v' t' p);                  case 1:                      return Color.FromArgb(q' v' p);                  case 2:                      return Color.FromArgb(p' v' t);                  case 3:                      return Color.FromArgb(p' q' v);                  case 4:                      return Color.FromArgb(t' p' v);                  default:                      return Color.FromArgb(v' p' q);              }
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: switch (hi)              {                  case 0:                      return Color.FromArgb(v' t' p);                  case 1:                      return Color.FromArgb(q' v' p);                  case 2:                      return Color.FromArgb(p' v' t);                  case 3:                      return Color.FromArgb(p' q' v);                  case 4:                      return Color.FromArgb(t' p' v);                  default:                      return Color.FromArgb(v' p' q);              }
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,HSVToColor,The following statement contains a magic number: switch (hi)              {                  case 0:                      return Color.FromArgb(v' t' p);                  case 1:                      return Color.FromArgb(q' v' p);                  case 2:                      return Color.FromArgb(p' v' t);                  case 3:                      return Color.FromArgb(p' q' v);                  case 4:                      return Color.FromArgb(t' p' v);                  default:                      return Color.FromArgb(v' p' q);              }
Magic Number,FinAnSu,Formats,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Formatting\Colors.cs,ColorToHSV,The following statement contains a magic number: double value = max / 255d;
Magic Number,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,H15History,The following statement contains a magic number: return ImportCSV(url' 11' true' new string[] { dateFormat' "double" }' false);
Magic Number,FinAnSu,Web,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\CSV.cs,Import,The following statement contains a magic number: freq = 15;
Magic Number,FinAnSu,PortfolioManagement,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\PortfolioManagement.cs,EffectiveSpread,The following statement contains a magic number: return ask + bid - execution * 2;
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,ProgressWorker_DoWork,The following statement contains a magic number: int iProgressPercentage = (int)(dProgressPercentage * 100);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,ProgressWorker_RunWorkerCompleted,The following statement contains a magic number: ProgressBar.Value = 100;
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,ProgressWorker_RunWorkerCompleted,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.StatusLabel.Location = new System.Drawing.Point(12' 9);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.StatusLabel.Location = new System.Drawing.Point(12' 9);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.StatusLabel.Size = new System.Drawing.Size(131' 13);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.StatusLabel.Size = new System.Drawing.Size(131' 13);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar.Location = new System.Drawing.Point(12' 25);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar.Location = new System.Drawing.Point(12' 25);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar.Size = new System.Drawing.Size(200' 23);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.ProgressBar.Size = new System.Drawing.Size(200' 23);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(224' 60);
Magic Number,FinAnSu.Controls,DownloadForm,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Controls\DownloadForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(224' 60);
Magic Number,RTDServers,ImportServer,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\RTD.cs,ServerStart,The following statement contains a magic number: _timer.Interval = 1000;
Magic Number,RTDServers,ImportServer,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\RTD.cs,ConnectData,The following statement contains a magic number: double freq = double.Parse((string)Strings.GetValue(2));
Magic Number,RTDServers,ImportServer,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\RTD.cs,ConnectData,The following statement contains a magic number: int patternsLength = int.Parse((string)Strings.GetValue(3));
Magic Number,RTDServers,ImportServer,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\RTD.cs,ConnectData,The following statement contains a magic number: i > 3 + patternsLength
Magic Number,RTDServers,ImportServer,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\RTD.cs,RefreshData,The following statement contains a magic number: object['] results = new object[2' _queries.Count];
Missing Default,FinAnSu,QuoteSourceCollection,D:\research\architectureSmells\repos\brymck_finansu\FinAnSu\Web\QuoteSource.cs,GetSourceByName,The following switch statement is missing a default case: switch (abbreviations[name])                      {                          case 'b':                              return Bloomberg;                          case 'g':                              return Google;                          case 'y':                              return yahoo;                      }
