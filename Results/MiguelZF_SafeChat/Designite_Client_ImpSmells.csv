Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SafeChat,PasswordChecker,C:\repos\MiguelZF_SafeChat\Client\PasswordChecker.cs,ValidatePassword,Cyclomatic complexity of the method is 10
Complex Method,SafeChat,PasswordChecker,C:\repos\MiguelZF_SafeChat\Client\PasswordChecker.cs,GetCharTypesCount,Cyclomatic complexity of the method is 10
Complex Method,SafeChat,SecureTextBox,C:\repos\MiguelZF_SafeChat\Client\SecureTextBox.cs,IsInputChar,Cyclomatic complexity of the method is 16
Long Statement,SafeChat,ChatForm,C:\repos\MiguelZF_SafeChat\Client\ChatForm.cs,CheckFields,The length of the statement  "	bool isValid = (txtUser.TextLength > 0 && txtPassword.SecureText.Length > 0 && txtIP.TextLength > 0 && txtPort.TextLength > 0); " is 127.
Long Statement,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,ProcessMessage,The length of the statement  "	Client.ChatForm.Invoke (new AddChatMessageDelegate (Client.ChatForm.AddChatMessage)' message.From' message.To' message.Message); " is 128.
Long Statement,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,Connect,The length of the statement  "		Client.ChatForm.Invoke (new ShowErrorMessageDelegate (Client.ChatForm.ShowErrorMessage)' "Error connecting to the Server."); " is 124.
Long Statement,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,HandleMessage,The length of the statement  "	if (msgType != typeof(MessageUserListAdd) && msgType != typeof(MessageUserListRemove) && msgType != typeof(MessageUpdateLevel)) { " is 129.
Long Statement,SafeChat,PasswordChecker,C:\repos\MiguelZF_SafeChat\Client\PasswordChecker.cs,ValidatePassword,The length of the statement  "		throw new InvalidPasswordException ("must have 3 different types of characrters' from lowercase' uppercase' digits and pontuation"); " is 132.
Long Statement,SafeChat,SecureTextBox,C:\repos\MiguelZF_SafeChat\Client\SecureTextBox.cs,IsInputKey,The length of the statement  "	//this.Parent.Text = keyData.ToString() + " " + ((int)keyData).ToString() + " allowedToDelete = " + allowedToDelete.ToString(); " is 127.
Empty Catch Block,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,Connect,The method has an empty catch block.
Empty Catch Block,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,Connect,The method has an empty catch block.
Empty Catch Block,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,Connect,The method has an empty catch block.
Empty Catch Block,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,RunSender,The method has an empty catch block.
Magic Number,SafeChat,ChatLogger,C:\repos\MiguelZF_SafeChat\Client\ChatLogger.cs,ExtendLogfilePath,The following statement contains a magic number: foreach (string f in files) {  	string file = Path.GetFileName (f);  	if (file.StartsWith (fpath))// found a file with the same name  	 {  		// try adding a suffix  		for (int n = 0; n < Int32.MaxValue; n++)  			if (File.Exists (fpath + "_" + n + ".log"))  				return "_" + n;  		Log.log.Error ("too many similar files. Use random name");  		string extpath;  		fpath += "_";  		do  			extpath = fpath + KeyGenerator.GetRandomStringBase64 (20) + ".log";  		while (File.Exists (extpath));  		return extpath.Replace (".log"' "");  	}  }  
Magic Number,SafeChat,ChatLogger,C:\repos\MiguelZF_SafeChat\Client\ChatLogger.cs,ExtendLogfilePath,The following statement contains a magic number: if (file.StartsWith (fpath))// found a file with the same name   {  	// try adding a suffix  	for (int n = 0; n < Int32.MaxValue; n++)  		if (File.Exists (fpath + "_" + n + ".log"))  			return "_" + n;  	Log.log.Error ("too many similar files. Use random name");  	string extpath;  	fpath += "_";  	do  		extpath = fpath + KeyGenerator.GetRandomStringBase64 (20) + ".log";  	while (File.Exists (extpath));  	return extpath.Replace (".log"' "");  }  
Magic Number,SafeChat,ChatLogger,C:\repos\MiguelZF_SafeChat\Client\ChatLogger.cs,ExtendLogfilePath,The following statement contains a magic number: do  	extpath = fpath + KeyGenerator.GetRandomStringBase64 (20) + ".log";  while (File.Exists (extpath));  
Magic Number,SafeChat,ChatLogger,C:\repos\MiguelZF_SafeChat\Client\ChatLogger.cs,ExtendLogfilePath,The following statement contains a magic number: extpath = fpath + KeyGenerator.GetRandomStringBase64 (20) + ".log";  
Magic Number,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,ProcessMessage,The following statement contains a magic number: Array.Copy (sessionKey' 0' key' 0' EncryptorAES.KEY_BITS / 8);  
Magic Number,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,ProcessMessage,The following statement contains a magic number: Array.Copy (sessionKey' EncryptorAES.KEY_BITS / 8' iv' 0' EncryptorAES.KEY_BITS / 8);  
Magic Number,SafeChat,ConnectionWorker,C:\repos\MiguelZF_SafeChat\Client\ConnectionWorker.cs,ProcessMessage,The following statement contains a magic number: Array.Copy (sessionKey' EncryptorAES.KEY_BITS / 8' iv' 0' EncryptorAES.KEY_BITS / 8);  
Magic Number,SafeChat,PasswordChecker,C:\repos\MiguelZF_SafeChat\Client\PasswordChecker.cs,ValidatePassword,The following statement contains a magic number: if (unsecurePassword == null || unsecurePassword.Length < 6)  	throw new InvalidPasswordException ("must have at least 6 characters");  
Magic Number,SafeChat,PasswordChecker,C:\repos\MiguelZF_SafeChat\Client\PasswordChecker.cs,ValidatePassword,The following statement contains a magic number: if (GetCharTypesCount (unsecurePassword) < 3)  	throw new InvalidPasswordException ("must have 3 different types of characrters' from lowercase' uppercase' digits and pontuation");  
Magic Number,SafeChat,PasswordChecker,C:\repos\MiguelZF_SafeChat\Client\PasswordChecker.cs,FindWordsCombined,The following statement contains a magic number: for (int i = 3; i < word.Length; i++)  	if (FindInDictionary (word.Substring (0' i))) {  		string nword = word.Substring (i);  		if (FindInDictionary (nword))  			return true;  		// last needed word  		if (FindWordsCombined (word.Substring (i)))  			return true;  	}  
Missing Default,SafeChat,SecureTextBox,C:\repos\MiguelZF_SafeChat\Client\SecureTextBox.cs,IsInputChar,The following switch statement is missing a default case: switch (keyCode) {  case (int)Keys.Back:  	if (this.SelectionLength == 0 && startPos > 0) {  		startPos--;  		_secureEntry.RemoveAt (startPos);  	}  	else if (this.SelectionLength > 0) {  		for (int i = 0; i < this.SelectionLength; i++)  			_secureEntry.RemoveAt (this.SelectionStart);  	}  	this.Text = new string ('*'' _secureEntry.Length);  	this.SelectionStart = startPos;  	_displayChar = false;  	// If we dont do this' we get a 'double' BACK keystroke effect  	break;  }  
