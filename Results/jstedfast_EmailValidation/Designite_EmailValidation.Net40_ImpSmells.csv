Implementation smell,Namespace,Class,File,Method,Description
Complex Method,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,Cyclomatic complexity of the method is 10
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,IsAtom,The following statement contains a magic number: return c < 128 ? IsLetterOrDigit (c) || AtomCharacters.IndexOf (c) != -1 : allowInternational;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,IsDomain,The following statement contains a magic number: if (c < 128) {  	if (IsLetter (c) || c == '-') {  		type |= SubDomainType.Alphabetic;  		return true;  	}  	if (IsDigit (c)) {  		type |= SubDomainType.Numeric;  		return true;  	}  	return false;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,IsDomainStart,The following statement contains a magic number: if (c < 128) {  	if (IsLetter (c)) {  		type = SubDomainType.Alphabetic;  		return true;  	}  	if (IsDigit (c)) {  		type = SubDomainType.Numeric;  		return true;  	}  	type = SubDomainType.None;  	return false;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipSubDomain,The following statement contains a magic number: return (index - startIndex) < 64 && text [index - 1] != '-';  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipQuoted,The following statement contains a magic number: while (index < text.Length) {  	if (text [index] >= 128 && !allowInternational)  		return false;  	if (text [index] == '\\') {  		escaped = !escaped;  	} else if (!escaped) {  		if (text [index] == '"')  			break;  	} else {  		escaped = false;  	}  	index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipQuoted,The following statement contains a magic number: if (text [index] >= 128 && !allowInternational)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: while (index < text.Length && groups < 4) {  	int startIndex = index;  	int value = 0;  	while (index < text.Length && text [index] >= '0' && text [index] <= '9') {  		value = (value * 10) + (text [index] - '0');  		index++;  	}  	if (index == startIndex || index - startIndex > 3 || value > 255)  		return false;  	groups++;  	if (groups < 4 && index < text.Length && text [index] == '.')  		index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: while (index < text.Length && groups < 4) {  	int startIndex = index;  	int value = 0;  	while (index < text.Length && text [index] >= '0' && text [index] <= '9') {  		value = (value * 10) + (text [index] - '0');  		index++;  	}  	if (index == startIndex || index - startIndex > 3 || value > 255)  		return false;  	groups++;  	if (groups < 4 && index < text.Length && text [index] == '.')  		index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: while (index < text.Length && groups < 4) {  	int startIndex = index;  	int value = 0;  	while (index < text.Length && text [index] >= '0' && text [index] <= '9') {  		value = (value * 10) + (text [index] - '0');  		index++;  	}  	if (index == startIndex || index - startIndex > 3 || value > 255)  		return false;  	groups++;  	if (groups < 4 && index < text.Length && text [index] == '.')  		index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: while (index < text.Length && groups < 4) {  	int startIndex = index;  	int value = 0;  	while (index < text.Length && text [index] >= '0' && text [index] <= '9') {  		value = (value * 10) + (text [index] - '0');  		index++;  	}  	if (index == startIndex || index - startIndex > 3 || value > 255)  		return false;  	groups++;  	if (groups < 4 && index < text.Length && text [index] == '.')  		index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: while (index < text.Length && groups < 4) {  	int startIndex = index;  	int value = 0;  	while (index < text.Length && text [index] >= '0' && text [index] <= '9') {  		value = (value * 10) + (text [index] - '0');  		index++;  	}  	if (index == startIndex || index - startIndex > 3 || value > 255)  		return false;  	groups++;  	if (groups < 4 && index < text.Length && text [index] == '.')  		index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: while (index < text.Length && text [index] >= '0' && text [index] <= '9') {  	value = (value * 10) + (text [index] - '0');  	index++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: value = (value * 10) + (text [index] - '0');  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: if (index == startIndex || index - startIndex > 3 || value > 255)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: if (index == startIndex || index - startIndex > 3 || value > 255)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: if (groups < 4 && index < text.Length && text [index] == '.')  	index++;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv4Literal,The following statement contains a magic number: return groups == 4;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: while (index < text.Length) {  	int startIndex = index;  	while (index < text.Length && IsHexDigit (text [index]))  		index++;  	if (index >= text.Length)  		break;  	if (index > startIndex && colons > 2 && text [index] == '.') {  		// IPv6v4  		index = startIndex;  		if (!SkipIPv4Literal (text' ref index))  			return false;  		return compact ? colons < 6 : colons == 6;  	}  	int count = index - startIndex;  	if (count > 4)  		return false;  	if (text [index] != ':')  		break;  	startIndex = index;  	while (index < text.Length && text [index] == ':')  		index++;  	count = index - startIndex;  	if (count > 2)  		return false;  	if (count == 2) {  		if (compact)  			return false;  		compact = true;  		colons += 2;  	} else {  		colons++;  	}  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (index > startIndex && colons > 2 && text [index] == '.') {  	// IPv6v4  	index = startIndex;  	if (!SkipIPv4Literal (text' ref index))  		return false;  	return compact ? colons < 6 : colons == 6;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (index > startIndex && colons > 2 && text [index] == '.') {  	// IPv6v4  	index = startIndex;  	if (!SkipIPv4Literal (text' ref index))  		return false;  	return compact ? colons < 6 : colons == 6;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (index > startIndex && colons > 2 && text [index] == '.') {  	// IPv6v4  	index = startIndex;  	if (!SkipIPv4Literal (text' ref index))  		return false;  	return compact ? colons < 6 : colons == 6;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: return compact ? colons < 6 : colons == 6;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: return compact ? colons < 6 : colons == 6;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (count > 4)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (count > 2)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (count == 2) {  	if (compact)  		return false;  	compact = true;  	colons += 2;  } else {  	colons++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (count == 2) {  	if (compact)  		return false;  	compact = true;  	colons += 2;  } else {  	colons++;  }  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: colons += 2;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: if (colons < 2)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: return compact ? colons < 7 : colons == 7;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,SkipIPv6Literal,The following statement contains a magic number: return compact ? colons < 7 : colons == 7;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,Validate,The following statement contains a magic number: if (email.Length == 0 || email.Length >= 255)  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,Validate,The following statement contains a magic number: if (index + 1 >= email.Length || index > 64 || email [index++] != '@')  	return false;  
Magic Number,EmailValidation,EmailValidator,F:\newReposMay17\jstedfast_EmailValidation\EmailValidation\EmailValidator.cs,Validate,The following statement contains a magic number: if (index + 8 >= email.Length)  	return false;  
