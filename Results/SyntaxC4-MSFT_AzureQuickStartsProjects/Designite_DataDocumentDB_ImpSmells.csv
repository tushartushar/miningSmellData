Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DataDocumentDB,Program,D:\research\architectureSmells\repos1\SyntaxC4-MSFT_AzureQuickStartsProjects\Data Services\DataDocumentDB\Program.cs,ReadOrCreateCollection,The length of the statement  "            // and then recreating it. This is the easiest way to clear out existing documents that might be left over in a collection " is 122.
Long Statement,DataDocumentDB,Program,D:\research\architectureSmells\repos1\SyntaxC4-MSFT_AzureQuickStartsProjects\Data Services\DataDocumentDB\Program.cs,CreateDocuments,The length of the statement  "                //if you want this behavior for other properties' then use the [JsonProperty] attribute to decorate your POCO properties " is 120.
Complex Conditional,DataDocumentDB,Program,D:\research\architectureSmells\repos1\SyntaxC4-MSFT_AzureQuickStartsProjects\Data Services\DataDocumentDB\Program.cs,Main,The conditional expression  "string.IsNullOrWhiteSpace(serviceEndpoint) || string.IsNullOrWhiteSpace(authKey) ||                  String.Equals(serviceEndpoint' "TODO - [YOUR ENDPOINT]"' StringComparison.OrdinalIgnoreCase) ||                  String.Equals(authKey' "TODO - [YOUR AUTHKEY]"' StringComparison.OrdinalIgnoreCase)"  is complex.
Magic Number,DataDocumentDB,Program,D:\research\architectureSmells\repos1\SyntaxC4-MSFT_AzureQuickStartsProjects\Data Services\DataDocumentDB\Program.cs,CreateDocuments,The following statement contains a magic number: var task1 = client.CreateDocumentAsync(collectionLink' new Family              {                  //even though the property is Id' when serialized to JSON it will be transformed to id (lowercase)                  //if you want this behavior for other properties' then use the [JsonProperty] attribute to decorate your POCO properties                  //and control the serialization behavior                  Id = "AndersonFamily"'                  FamilyName = "Anderson"'                  Parents = new Parent[]                  {                      new Parent{FirstName="Thomas"}'                       new Parent{FirstName="Mary Kay"}                  }'                  Children = new Child[]                   {                      new Child{FirstName="John"' Gender="male"' Grade=7}                  }'                  Pets = new Pet[]                   {                       new Pet{Name="Fluffy"' Type="Dog"}                  }              });
Magic Number,DataDocumentDB,Program,D:\research\architectureSmells\repos1\SyntaxC4-MSFT_AzureQuickStartsProjects\Data Services\DataDocumentDB\Program.cs,CreateDocuments,The following statement contains a magic number: var task2 = client.CreateDocumentAsync(collectionLink' new Family              {                  //notice' we are not setting Id here. It will be generated for us before the JSON gets sent over the wire                  FamilyName = "Wakefield"'                  Parents = new Parent[]                  {                      new Parent{FirstName="Robin"}'                       new Parent{FirstName="Ben"}                  }'                  Children = new Child[]                   {                      new Child{FirstName="Jesse"' Gender="female"' Grade=1}'                      new Child{FirstName="Lisa"' Gender="female"' Grade=8}                  }'                  Pets = new Pet[]                   {                       new Pet{Name="Goofy"' Type="Dog"}'                      new Pet{Name="Shadow"' Type="Horse"}                  }              });
