Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The method has 116 lines of code.
Long Method,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The method has 142 lines of code.
Complex Method,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,Cyclomatic complexity of the method is 22
Complex Method,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,PrefixString,Cyclomatic complexity of the method is 18
Complex Method,KSPAPIExtensions,PartUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\KSPUtils.cs,RelationTo,Cyclomatic complexity of the method is 12
Complex Method,KSPAPIExtensions,PartUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\KSPUtils.cs,RelationTest,Cyclomatic complexity of the method is 16
Complex Method,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,FindDuckMethod,Cyclomatic complexity of the method is 8
Complex Method,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,FindDuckProperty,Cyclomatic complexity of the method is 9
Complex Method,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,CanCast,Cyclomatic complexity of the method is 9
Complex Method,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,EmitCastIL,Cyclomatic complexity of the method is 8
Complex Method,DeftTech.DuckTyping,InterfaceDuckCaster,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckCaster.cs,GetProxyType,Cyclomatic complexity of the method is 9
Complex Method,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMethod,Cyclomatic complexity of the method is 11
Complex Method,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,Cyclomatic complexity of the method is 11
Complex Method,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckMethod,Cyclomatic complexity of the method is 14
Complex Method,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckProperty,Cyclomatic complexity of the method is 9
Complex Method,DeftTech.DuckTyping,TypeKey,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\TypeKey.cs,CompareTo,Cyclomatic complexity of the method is 14
Complex Method,KSPAPIExtensions.DebuggingUtils,Debugging,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\DebuggingUtils.cs,DumpTree,Cyclomatic complexity of the method is 15
Complex Method,KSPAPIExtensions.DebuggingUtils,ModulePhysicsDebugger,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\PhysicsDebugger.cs,FixedUpdate,Cyclomatic complexity of the method is 9
Complex Method,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Register,Cyclomatic complexity of the method is 9
Complex Method,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Send,Cyclomatic complexity of the method is 10
Long Parameter List,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,Setup,The method has 6 parameters. Parameters: window' part' partModule' scene' control' field
Long Parameter List,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,FormatSI,The method has 5 parameters. Parameters: pfx' value' sigFigs' exponent' unit
Long Parameter List,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,Setup,The method has 6 parameters. Parameters: window' part' partModule' scene' control' field
Long Parameter List,KSPAPIExtensions,UIPartActionResourceEditorImproved,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,Setup,The method has 5 parameters. Parameters: window' part' scene' control' resource
Long Parameter List,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,Setup,The method has 6 parameters. Parameters: window' part' partModule' scene' control' field
Long Parameter List,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementInterface,The method has 5 parameters. Parameters: proxyType' proxyMembers' duckField' constructorIL' interfaceType
Long Parameter List,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementInterface,The method has 6 parameters. Parameters: proxyType' proxyMembers' duckField' constructorIL' interfaceType' implementedInterfaces
Long Parameter List,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMember,The method has 5 parameters. Parameters: proxyType' proxyMembers' duckField' constructorIL' interfaceMember
Long Parameter List,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMethod,The method has 5 parameters. Parameters: proxyType' proxyMembers' duckField' constructorIL' interfaceMethod
Long Parameter List,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementProperty,The method has 5 parameters. Parameters: proxyType' proxyMembers' duckField' constructorIL' interfaceProperty
Long Parameter List,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The method has 5 parameters. Parameters: proxyType' proxyMembers' duckField' constructorIL' interfaceEvent
Long Identifier,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,FindDuckProperty,The length of the parameter interfacePropertyIndexParameters is 32.
Long Identifier,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMethod,The length of the parameter interfaceMethodGenericArguments is 31.
Long Identifier,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the parameter interfaceInvokeMethodParameterTypes is 35.
Long Identifier,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the parameter duckInvokeMethodParameterTypes is 30.
Long Identifier,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckMethod,The length of the parameter bestParameterCompatibilityScore is 31.
Long Identifier,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckProperty,The length of the parameter interfacePropertyIndexParameters is 32.
Long Statement,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The length of the statement  "            GameObject editGo = new GameObject("UIPartActionScaleEdit"' SystemUtils.VersionTaggedType(typeof(UIPartActionScaleEdit))); " is 122.
Long Statement,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The length of the statement  "            UIPartActionFloatRange paFlt = (UIPartActionFloatRange)UIPartActionController.Instance.fieldPrefabs.Find(cls => cls.GetType() == typeof(UIPartActionFloatRange)); " is 161.
Long Statement,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CheckConsistency,The length of the statement  "                Debug.LogWarning("[KAE Warning] UI_ScaleEdit: not enough incrementSlide values. Using only the first." + Environment.NewLine + StackTraceUtility.ExtractStackTrace()); " is 166.
Long Statement,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CheckConsistency,The length of the statement  "                    Debug.LogWarning("[KAE Warning] UI_ScaleEdit: duplicate value in intervals list" + Environment.NewLine + StackTraceUtility.ExtractStackTrace()); " is 144.
Long Statement,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CheckConsistency,The length of the statement  "                    Debug.LogWarning("[KAE Warning] UI_ScaleEdit: intervals list not sorted" + Environment.NewLine + StackTraceUtility.ExtractStackTrace()); " is 136.
Long Statement,KSPAPIExtensions,SystemUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\SystemUtils.cs,RunTypeElection,The length of the statement  "                throw new InvalidProgramException("Assembly: " + targetCls.Assembly.GetName().Name + " at location: " + targetCls.Assembly.Location + " is not in the expected assembly. Code has been copied and this will cause problems."); " is 222.
Long Statement,KSPAPIExtensions,SystemUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\SystemUtils.cs,RunTypeElection,The length of the statement  "                Debug.Log("[" + targetCls.Name + "] version " + winner.assembly.GetName().Version + " at " + winner.path + " won the election against\n" + losers); " is 147.
Long Statement,KSPAPIExtensions,SystemUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\SystemUtils.cs,RunTypeElection,The length of the statement  "                Debug.Log("[" + targetCls.Name + "] Elected unopposed version= " + winner.assembly.GetName().Version + " at " + winner.path); " is 125.
Long Statement,KSPAPIExtensions,SystemUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\SystemUtils.cs,VersionTaggedType,The length of the statement  "            Type tagged = ass.GetTypes().Where(t => t.BaseType == baseClass).Where(t => t.FullName.StartsWith(baseClass.FullName)).FirstOrDefault(); " is 136.
Long Statement,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The length of the statement  "            GameObject editGo = new GameObject("UIPartActionChooseOption"' SystemUtils.VersionTaggedType(typeof(UIPartActionChooseOption))); " is 128.
Long Statement,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The length of the statement  "            UIPartActionFloatRange paFlt = (UIPartActionFloatRange)UIPartActionController.Instance.fieldPrefabs.Find(cls => cls.GetType() == typeof(UIPartActionFloatRange)); " is 161.
Long Statement,KSPAPIExtensions,UIPartActionsExtendedRegistration,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,Register,The length of the statement  "            Debug.Log("[KAE] Registering field prefabs for version " + Assembly.GetExecutingAssembly().GetName().Version + (isLatestVersion?" (latest)":"")); " is 145.
Long Statement,KSPAPIExtensions,UIPartActionsExtendedRegistration,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,Register,The length of the statement  "            // Register prefabs. This needs to be done for every version of the assembly. (the types might be called the same' but they aren't the same) " is 140.
Long Statement,KSPAPIExtensions,UIPartActionsExtendedRegistration,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,Register,The length of the statement  "                controller.fieldPrefabs[idx] = UIPartActionLabelImproved.CreateTemplate((UIPartActionLabel)controller.fieldPrefabs[idx]); " is 121.
Long Statement,KSPAPIExtensions,UIPartActionsExtendedRegistration,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,Register,The length of the statement  "                controller.resourceItemEditorPrefab = UIPartActionResourceEditorImproved.CreateTemplate(controller.resourceItemEditorPrefab); " is 125.
Long Statement,KSPAPIExtensions,UIPartActionLabelImproved,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,UpdateItem,The length of the statement  "                    (string.IsNullOrEmpty(field.guiFormat) ? value.ToString(CultureInfo.CurrentUICulture) : value.ToStringExt(field.guiFormat)) " is 123.
Long Statement,KSPAPIExtensions,UIPartActionLabelImproved,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,UpdateItem,The length of the statement  "                    (string.IsNullOrEmpty(field.guiFormat) ? value.ToString(CultureInfo.CurrentUICulture) : value.ToStringExt(field.guiFormat)) " is 123.
Long Statement,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The length of the statement  "            GameObject editGo = new GameObject("UIPartActionFloatEdit"' SystemUtils.VersionTaggedType(typeof(UIPartActionFloatEdit))); " is 122.
Long Statement,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The length of the statement  "            UIPartActionFloatRange paFlt = (UIPartActionFloatRange)UIPartActionController.Instance.fieldPrefabs.Find(cls => cls.GetType() == typeof(UIPartActionFloatRange)); " is 161.
Long Statement,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,SliderRange,The length of the statement  "                valueLow = Mathf.Floor((newValue + FieldInfo.incrementSlide / 2f) / FieldInfo.incrementLarge) * FieldInfo.incrementLarge; " is 121.
Long Statement,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,SliderRange,The length of the statement  "                valueLow = Mathf.Floor((newValue + FieldInfo.incrementSlide / 2f) / FieldInfo.incrementSmall) * FieldInfo.incrementSmall; " is 121.
Long Statement,KSPAPIExtensions,UI_FloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,GetHashedState,The length of the statement  "            fixed (float* minValue = &this.minValue' maxValue = &this.maxValue' incrementLarge = &this.incrementLarge' incrementSmall = &this.incrementSmall' incrementSlide = &this.incrementSlide) " is 184.
Long Statement,KSPAPIExtensions,UI_FloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,GetHashedState,The length of the statement  "                return *((uint*)minValue) ^ *((uint*)maxValue) ^ *((uint*)incrementLarge) ^ *((uint*)incrementSmall) ^ *((uint*)incrementSlide); " is 128.
Long Statement,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,Start,The length of the statement  "            Debug.Log(String.Format("[CompatibilityChecker] Running checker version {0} from '{1}'"' _version' Assembly.GetExecutingAssembly().GetName().Name)); " is 148.
Long Statement,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,Start,The length of the statement  "                        Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 161.
Long Statement,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,Start,The length of the statement  "                        Debug.LogWarning(String.Format("[CompatibilityChecker] Exception while invoking IsUnityCompatible() from '{0}':\n\n{1}"' m.DeclaringType.Assembly.GetName().Name' e)); " is 166.
Long Statement,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,Start,The length of the statement  "                message += "WARNING: You are using 64-bit KSP on Windows. This version of KSP is known to cause crashes. It's highly recommended that you use either 32-bit KSP on Windows or switch to Linux."; " is 192.
Long Statement,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,Start,The length of the statement  "                message += ((message == String.Empty) ? "Some" : "\n\nAdditionally' some") + " installed mods may be incompatible with this version of Kerbal Space Program. Features may be broken or disabled. Please check for updates to the listed mods."; " is 239.
Long Statement,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,Start,The length of the statement  "                    message += String.Format("\n\nThese mods are incompatible with KSP {0}.{1}.{2}:\n\n"' Versioning.version_major' Versioning.version_minor' Versioning.Revision); " is 159.
Long Statement,DeftTech.DuckTyping,DelegateDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DelegateDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    throw new ArgumentException(m_FromDelegateType.FullName + " is not compatible with " + m_ToDelegateType.FullName + "."); " is 120.
Long Statement,DeftTech.DuckTyping,DelegateDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DelegateDuckProxyType.cs,GenerateProxyType,The length of the statement  "                string assemblyName = "DuckDelegateProxy_" + m_ToDelegateType.Name.Replace("."' "_").Replace("+"' "-") + "_" + m_FromDelegateType.Name.Replace("."' "_").Replace("+"' "-") + ".dll"; " is 180.
Long Statement,DeftTech.DuckTyping,DelegateDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DelegateDuckProxyType.cs,GenerateProxyType,The length of the statement  "                ConstructorBuilder constructor = proxyType.DefineConstructor(MethodAttributes.Private' CallingConventions.HasThis' new Type[] { m_FromDelegateType }); " is 150.
Long Statement,DeftTech.DuckTyping,DelegateDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DelegateDuckProxyType.cs,GenerateProxyType,The length of the statement  "                MethodBuilder wrapMethod = proxyType.DefineMethod("Wrap"' MethodAttributes.Public | MethodAttributes.Static' CallingConventions.Standard' typeof(Delegate)' new Type[] { typeof(Delegate) }); " is 189.
Long Statement,DeftTech.DuckTyping,DelegateDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DelegateDuckProxyType.cs,GenerateProxyType,The length of the statement  "                MethodBuilder unwrapMethod = proxyType.DefineMethod("UnwrapDuck"' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' typeof(object)' new Type[0]); " is 200.
Long Statement,DeftTech.DuckTyping,DelegateDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DelegateDuckProxyType.cs,ImplementInvokeMethod,The length of the statement  "            MethodBuilder proxyMethod = proxyType.DefineMethod("Invoke"' MethodAttributes.Public | MethodAttributes.HideBySig' CallingConventions.HasThis' variantMethod.ReturnType' GetParameterTypes(variantMethodParameters)); " is 213.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,GenerateProxyType,The length of the statement  "                AssemblyBuilder assembly = domain.DefineDynamicAssembly(new AssemblyName("DuckProxy_" + typeof(TInterface).FullName.Replace("."' "_") + "_" + m_DuckType.FullName.Replace("."' "_"))' AssemblyBuilderAccess.Run); " is 209.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,GenerateProxyType,The length of the statement  "                ConstructorBuilder constructor = proxyType.DefineConstructor(MethodAttributes.Private' CallingConventions.HasThis' new Type[] { m_DuckType }); " is 142.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,GenerateProxyType,The length of the statement  "                MethodBuilder wrapMethod = proxyType.DefineMethod("Wrap"' MethodAttributes.Public | MethodAttributes.Static' CallingConventions.Standard' typeof(TInterface)' new Type[] { typeof(object) }); " is 189.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,GenerateProxyType,The length of the statement  "                MethodBuilder unwrapMethod = proxyType.DefineMethod("UnwrapDuck"' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' typeof(object)' new Type[0]); " is 200.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementMethod,The length of the statement  "                throw new NotImplementedException("Duck type does not implement a method named \"" + interfaceMethod.Name + "\" with the same parameters and return type."); " is 156.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementMethod,The length of the statement  "            MethodBuilder proxyMethod = proxyType.DefineMethod(interfaceMethod.Name' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' interfaceMethod.ReturnType' GetParameterTypes(interfaceMethodParameters)); " is 252.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementMethod,The length of the statement  "                DuckTyping.EmitCastIL(proxyMethodIL' duckMethodParameters[i].ParameterType' interfaceMethodParameters[i].ParameterType); " is 120.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementProperty,The length of the statement  "                throw new NotImplementedException("Duck type does not implement a property named \"" + interfaceProperty.Name + "\" with the same property type and index parameters."); " is 168.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementProperty,The length of the statement  "            PropertyBuilder proxyProperty = proxyType.DefineProperty(interfaceProperty.Name' PropertyAttributes.None' interfaceProperty.PropertyType' GetParameterTypes(interfaceProperty.GetIndexParameters())); " is 197.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementEvent,The length of the statement  "                throw new NotImplementedException("Duck type does not implement an event named \"" + interfaceEvent.Name + "\" with the same event handler type."); " is 147.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,ImplementEvent,The length of the statement  "            EventBuilder proxyEvent = proxyType.DefineEvent(interfaceEvent.Name' EventAttributes.None' interfaceEvent.EventHandlerType); " is 124.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,FindDuckProperty,The length of the statement  "                            && (!interfaceProperty.CanRead || property.GetGetMethod().IsPublic) && (!interfaceProperty.CanWrite || property.GetSetMethod().IsPublic)) " is 137.
Long Statement,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,FindDuckProperty,The length of the statement  "                                    if (!DuckTyping.AreTypesCompatible(interfacePropertyIndexParameters[i].ParameterType' indexParameters[i].ParameterType)) " is 120.
Long Statement,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,Cast,The length of the statement  "                if (!casted) throw new InvalidCastException("A conversion from " + originalDuckType.FullName + " to " + toType.FullName + " does not exist."); " is 142.
Long Statement,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,StaticCast,The length of the statement  "            if (proxy == null) throw new InvalidCastException("A conversion from static type " + staticType.FullName + " to an object of " + toType.FullName + " does not exist."); " is 167.
Long Statement,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,AreTypesCompatible,The length of the statement  "                if ((toType == toTypes[i] && fromType == fromTypes[i]) || (bidirectionalContext && toType == fromTypes[i] && fromType == toTypes[i])) " is 133.
Long Statement,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,EmitCastIL,The length of the statement  "                    throw new NotImplementedException("EmitCastIL method does not know how to handle the type conversion.  This exception indicates an inconsistency in the program; the AreTypesCompatible method accounts for a possible type conversion that has not been implemented in the EmitCastIL method."); " is 289.
Long Statement,DeftTech.DuckTyping,EnumStringDuckCaster,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\EnumStringDuckCaster.cs,ShouldCast,The length of the statement  "            return ((toType.IsSubclassOf(typeof(Enum)) && fromType == typeof(string)) || (toType == typeof(string) && fromType.IsSubclassOf(typeof(Enum)))); " is 144.
Long Statement,DeftTech.DuckTyping,GenericParameterDuckCaster,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\GenericParameterDuckCaster.cs,Cast,The length of the statement  "            throw new InvalidOperationException("Cast should never be called since an object cannot exist of a type that is a generic parameter."); " is 135.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                string assemblyName = "DuckInterfaceProxy_" + m_InterfaceType.Name.Replace("."' "_").Replace("+"' "-") + "_" + m_DuckType.Name.Replace("."' "_").Replace("+"' "-") + ".dll"; " is 172.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    constructor = proxyType.DefineConstructor(MethodAttributes.Private' CallingConventions.HasThis' new Type[] { m_DuckType }); " is 123.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    wrapMethod = proxyType.DefineMethod("Wrap"' MethodAttributes.Public | MethodAttributes.Static' CallingConventions.Standard' typeof(object)' new Type[] { typeof(object) }); " is 171.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    MethodBuilder unwrapMethod = proxyType.DefineMethod("UnwrapDuck"' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' typeof(object)' new Type[0]); " is 200.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    MethodBuilder equalsMethod = proxyType.DefineMethod("Equals"' MethodAttributes.Public | MethodAttributes.Virtual' CallingConventions.HasThis' typeof(bool)' new Type[] { typeof(object) }); " is 187.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    MethodBuilder getHashCodeMethod = proxyType.DefineMethod("GetHashCode"' MethodAttributes.Public | MethodAttributes.Virtual' CallingConventions.HasThis' typeof(int)' new Type[0]); " is 178.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    MethodBuilder toStringMethod = proxyType.DefineMethod("ToString"' MethodAttributes.Public | MethodAttributes.Virtual' CallingConventions.HasThis' typeof(string)' new Type[0]); " is 175.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,GenerateProxyType,The length of the statement  "                    MethodBuilder unwrapMethod = proxyType.DefineMethod("UnwrapDuck"' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' typeof(object)' new Type[0]); " is 200.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMethod,The length of the statement  "                throw new NotImplementedException("Duck type does not implement a method named \"" + interfaceMethod.Name + "\" with compatible parameters and return type."); " is 158.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMethod,The length of the statement  "                MethodBuilder proxyMethod = proxyType.DefineMethod(interfaceMethod.Name' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' interfaceMethod.ReturnType' GetParameterTypes(interfaceMethodParameters)); " is 252.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementMethod,The length of the statement  "                    DuckTyping.EmitCastIL(proxyMethodIL' duckMethodParameters[i].ParameterType' interfaceMethodParameters[i].ParameterType); " is 120.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementProperty,The length of the statement  "                throw new NotImplementedException("Duck type does not implement a property named \"" + interfaceProperty.Name + "\" with the same property type and index parameters."); " is 168.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementProperty,The length of the statement  "            PropertyBuilder proxyProperty = proxyType.DefineProperty(interfaceProperty.Name' PropertyAttributes.None' interfaceProperty.PropertyType' GetParameterTypes(interfaceProperty.GetIndexParameters())); " is 197.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "                throw new NotImplementedException("Duck type does not implement an event named \"" + interfaceEvent.Name + "\" with the same event handler type."); " is 147.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "            EventBuilder proxyEvent = proxyType.DefineEvent(interfaceEvent.Name' EventAttributes.None' interfaceEvent.EventHandlerType); " is 124.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "            MethodBuilder addMethod = proxyType.DefineMethod("add_" + interfaceEvent.Name' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' typeof(void)' new Type[] { interfaceEventHandlerType }); " is 240.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "            MethodBuilder removeMethod = proxyType.DefineMethod("remove_" + interfaceEvent.Name' MethodAttributes.Public | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' typeof(void)' new Type[] { interfaceEventHandlerType }); " is 246.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "                FieldBuilder eventHandlerField = proxyType.DefineField(interfaceEvent.Name' interfaceEventHandlerType' FieldAttributes.Private); " is 128.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "                addMethodIL.Emit(OpCodes.Call' typeof(Delegate).GetMethod("Combine"' new Type[] { typeof(Delegate)' typeof(Delegate) })); " is 121.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "                removeMethodIL.Emit(OpCodes.Call' typeof(Delegate).GetMethod("Remove"' new Type[] { typeof(Delegate)' typeof(Delegate) })); " is 123.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,ImplementEvent,The length of the statement  "                MethodBuilder proxyInvokeMethod = proxyType.DefineMethod("Invoke" + interfaceEvent.Name' MethodAttributes.Private | MethodAttributes.Virtual | MethodAttributes.Final' CallingConventions.HasThis' duckInvokeMethod.ReturnType' duckInvokeMethodParameterTypes); " is 256.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckMethod,The length of the statement  "                                        parameterCompatibilityScore += DuckTyping.GetTypeCompatibilityScore(parameters[i].ParameterType' interfaceMethodParameters[i].ParameterType); " is 141.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckProperty,The length of the statement  "                            && (!interfaceProperty.CanRead || property.GetGetMethod().IsPublic) && (!interfaceProperty.CanWrite || property.GetSetMethod().IsPublic)) " is 137.
Long Statement,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckProperty,The length of the statement  "                                    if (!DuckTyping.AreTypesCompatible(interfacePropertyIndexParameters[i].ParameterType' indexParameters[i].ParameterType)) " is 120.
Long Statement,DeftTech.DuckTyping,TypeKey,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\TypeKey.cs,CompareTo,The length of the statement  "                                if ((result = new TypeKey(type1.DeclaringMethod.DeclaringType).CompareTo(new TypeKey(type2.DeclaringMethod.DeclaringType))) == 0) " is 129.
Long Statement,KSPAPIExtensions.DebuggingUtils,Debugging,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\DebuggingUtils.cs,DumpTree,The length of the statement  "                sb.AppendLine(space + "+ activeSelf=" + t.gameObject.activeSelf + " activeInHeirachy=" + t.gameObject.activeInHierarchy); " is 121.
Long Statement,KSPAPIExtensions.DebuggingUtils,Debugging,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\DebuggingUtils.cs,DumpTree,The length of the statement  "                    sb.AppendLine(space + "++ mesh:" + ((filter.sharedMesh == null) ? "*null*" : (filter.sharedMesh.name + " verts:" + filter.sharedMesh.vertexCount))); " is 148.
Long Statement,KSPAPIExtensions.DebuggingUtils,Debugging,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\DebuggingUtils.cs,DumpTree,The length of the statement  "                    sb.AppendLine(space + "++ mesh:" + ((collider.sharedMesh == null) ? "*null*" : (collider.sharedMesh.name + " verts:" + collider.sharedMesh.vertexCount))); " is 154.
Long Statement,KSPAPIExtensions.DebuggingUtils,Debugging,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\DebuggingUtils.cs,DumpNotEqualFields,The length of the statement  "                sb.AppendLine("Different fields: " + field.FieldType.Name + " " + field.Name + (Equals(thisValue' thatValue) ? "(compute equal)" : (" " + thisValue + " != " + thatValue))); " is 172.
Long Statement,KSPAPIExtensions.DebuggingUtils,ModulePhysicsDebugger,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\PhysicsDebugger.cs,FixedUpdate,The length of the statement  "                        sb.AppendLine(p.name + " inertia tensor=" + p.rigidbody.inertiaTensor.ToString("F5") + " rotation=" + p.rigidbody.inertiaTensorRotation.ToStringAngleAxis("F5")); " is 161.
Long Statement,KSPAPIExtensions.DebuggingUtils,ModulePhysicsDebugger,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\PhysicsDebugger.cs,FixedUpdate,The length of the statement  "                            sb.AppendLine(p.name + " joint type=" + j.GetType() + " position=" + j.anchor.ToString("F5") + " force=" + j.breakForce + " torque=" + j.breakTorque); " is 150.
Long Statement,KSPAPIExtensions.PartMessage,CurrentEventInfoImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,ToString,The length of the statement  "            return string.Format("CurrentEventInfoImpl(Message:{0}' Source:{1}' SourcePart:{2}' Arguments.Length={3})"' Message' Source' SourcePart' (Arguments == null) ? -1 : Arguments.Length); " is 182.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Register,The length of the statement  "            foreach (MethodInfo meth in objType.GetMethods(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly)) " is 145.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Register,The length of the statement  "                    Debug.LogError("Exception when attempting to register listener: " + (meth.DeclaringType != null ? meth.DeclaringType.AssemblyQualifiedName : "" ) + "." + meth.Name); " is 165.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Register,The length of the statement  "            foreach (EventInfo evt in objType.GetEvents(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly)) " is 142.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Register,The length of the statement  "                    Debug.LogError("Exception when attempting to register event: " + (evt.DeclaringType != null ? evt.DeclaringType.AssemblyQualifiedName : "" ) + "." + evt.Name); " is 159.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Register,The length of the statement  "                Debug.LogWarning(string.Format("[PartMessageService] Event: {0} in class: {1} declares an event with a part message' but does not have the PartMessageEvent attribute. Will ignore"' evt.Name' objType.FullName)); " is 210.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,AddListener,The length of the statement  "                Debug.LogError(string.Format("PartMessageListener method {0}.{1} does not support the delegate type {2} as declared in the attribute"' meth.DeclaringType' meth.Name' attr.DelegateType.FullName)); " is 195.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Send,The length of the statement  "                            Debug.LogError(string.Format("Invoking {0}.{1} to handle DelegateType {2} resulted in an exception."' target.GetType()' node.Value.method' CurrentEventInfo.Message)); " is 166.
Long Statement,KSPAPIExtensions.PartMessage,ServiceImpl,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,AsPart,The length of the statement  "            if(src.GetType().GetInterfaces().Any(t => t.FullName == typeof (IPartMessagePartProxy).FullName || t.FullName == "KSPAPIExtensions.PartMessagePartProxy")) " is 154.
Long Statement,KSPAPIExtensions.PartMessage,PartMessageServiceInitializer,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Awake,The length of the statement  "                Debug.Log("[PartMessageService] Multiple copies of current version. Using the first copy. Version: " + currentAssembly.GetName().Version); " is 138.
Complex Conditional,DeftTech.DuckTyping,DuckProxyType<TInterface>,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckProxyType.cs,FindDuckProperty,The conditional expression  "(property.CanRead || !interfaceProperty.CanRead) && (property.CanWrite || !interfaceProperty.CanWrite)                              && (!interfaceProperty.CanRead || property.GetGetMethod().IsPublic) && (!interfaceProperty.CanWrite || property.GetSetMethod().IsPublic)"  is complex.
Complex Conditional,DeftTech.DuckTyping,DuckTyping,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\DuckTyping.cs,AreTypesCompatible,The conditional expression  "(toType == toTypes[i] && fromType == fromTypes[i]) || (bidirectionalContext && toType == fromTypes[i] && fromType == toTypes[i])"  is complex.
Complex Conditional,DeftTech.DuckTyping,InterfaceDuckProxyType,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\DuckTyping\InterfaceDuckProxyType.cs,FindDuckProperty,The conditional expression  "(property.CanRead || !interfaceProperty.CanRead) && (property.CanWrite || !interfaceProperty.CanWrite)                              && (!interfaceProperty.CanRead || property.GetGetMethod().IsPublic) && (!interfaceProperty.CanWrite || property.GetSetMethod().IsPublic)"  is complex.
Empty Catch Block,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,TryParseVector3,The method has an empty catch block.
Empty Catch Block,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,TryParseVector3,The method has an empty catch block.
Empty Catch Block,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,TryParseVector3d,The method has an empty catch block.
Empty Catch Block,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,TryParseVector3d,The method has an empty catch block.
Empty Catch Block,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,TryParseColor,The method has an empty catch block.
Empty Catch Block,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,TryParseColor,The method has an empty catch block.
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: sliderGo.transform.localScale = new Vector3(0.65f' 1' 1);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: fieldNameGo.transform.localPosition = new Vector3(40' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: fieldNameGo.transform.localPosition = new Vector3(40' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: fieldValueGo.transform.localPosition = new Vector3(110' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: fieldValueGo.transform.localPosition = new Vector3(110' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localPosition = new Vector3(11.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localPosition = new Vector3(11.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownLabelGo.transform.localPosition = new Vector3(5.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownLabelGo.transform.localPosition = new Vector3(5.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localPosition = new Vector3(187.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localPosition = new Vector3(187.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpLabelGo.transform.localPosition = new Vector3(181.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpLabelGo.transform.localPosition = new Vector3(181.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,Setup,The following statement contains a magic number: value = GetFieldValue() + 0.1f;
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,buttons_ValueChanged,The following statement contains a magic number: newValue = FieldInfo.intervals[intervalNo+2];
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,buttons_ValueChanged,The following statement contains a magic number: intervalNo < FieldInfo.intervals.Length - 2
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,UpdateFieldInfo,The following statement contains a magic number: slider.transform.localScale = new Vector3(0.81f' 1' 1);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,UpdateFieldInfo,The following statement contains a magic number: fieldName.transform.localPosition = new Vector3(24' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,UpdateFieldInfo,The following statement contains a magic number: fieldName.transform.localPosition = new Vector3(24' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CheckConsistency,The following statement contains a magic number: FieldInfo.intervals.Length < 2
Magic Number,KSPAPIExtensions,UIPartActionScaleEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionScaleEdit.cs,CheckConsistency,The following statement contains a magic number: i < FieldInfo.intervals.Length-2
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,TryParseExt,The following statement contains a magic number: switch (last)              {                  case 'k': exponent = 1e3; break;                  case 'M': exponent = 1e6; break;                  case 'G': exponent = 1e9; break;                  case 'T': exponent = 1e12; break;                  case 'P': exponent = 1e15; break;                  case 'E': exponent = 1e18; break;                  case 'Z': exponent = 1e21; break;                  case 'Y': exponent = 1e24; break;                  case 'm':                       exponent = 1e-3; break;                  case '\x3bc':                   case '\xb5':                  case 'u':                      exponent = 1e-6; break;                  case 'c':                      if (!str.EndsWith("mic"))                      {                          value = 0;                          return false;                      }                      newLen = str.Length - 3;                      exponent = 1e-6;                      break;                  case 'n': exponent = 1e-9; break;                  case 'p': exponent = 1e-12; break;                  case 'f': exponent = 1e-15; break;                  case 'a': exponent = 1e-18; break;                  case 'z': exponent = 1e-21; break;                  case 'y': exponent = 1e-24; break;                  default:                      value = 0;                      return false;              }
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,RoundSigFigs,The following statement contains a magic number: float div = Mathf.Pow(10' exponent);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,RoundSigFigs,The following statement contains a magic number: double div = Mathf.Pow(10' exponent);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetSIPrefix,The following statement contains a magic number: exp <= 3 && exp >= -1
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetSIPrefix,The following statement contains a magic number: return (SIPrefix)((exp-2) / 3 * 3);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetSIPrefix,The following statement contains a magic number: return (SIPrefix)((exp-2) / 3 * 3);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetSIPrefix,The following statement contains a magic number: return (SIPrefix)((exp-2) / 3 * 3);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetSIPrefix,The following statement contains a magic number: return (SIPrefix)(exp / 3 * 3);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetSIPrefix,The following statement contains a magic number: return (SIPrefix)(exp / 3 * 3);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,Round,The following statement contains a magic number: float div = Mathf.Pow(10' (int)pfx - digits + exponent);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,Round,The following statement contains a magic number: double div = Math.Pow(10' (int)pfx - digits + exponent);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetFormatter,The following statement contains a magic number: double div = Math.Pow(10' (int)pfx - exponent);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,GetFormatter,The following statement contains a magic number: double mult = Math.Pow(10' exp - sigFigs + 1);
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,FormatMass,The following statement contains a magic number: return mass < 1.0f ?                   mass.ToStringSI(sigFigs' exponent + 6' "g") :                   mass.ToStringSI(sigFigs' exponent' "t");
Magic Number,KSPAPIExtensions,MathUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\MathUtils.cs,FormatMass,The following statement contains a magic number: return mass < 1.0f ?                   mass.ToStringSI(sigFigs' exponent+6' "g") :                   mass.ToStringSI(sigFigs' exponent' "t");
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseVector3,The following statement contains a magic number: splits.Length != 3
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseVector3,The following statement contains a magic number: return new Vector3(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2]));
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseVector3d,The following statement contains a magic number: splits.Length != 3
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseVector3d,The following statement contains a magic number: return new Vector3d(double.Parse(splits[0])' double.Parse(splits[1])' double.Parse(splits[2]));
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseColor,The following statement contains a magic number: switch (splits.Length)                  {                      case 3:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2]));                      case 4:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2])' float.Parse(splits[3]));                      default:                          throw new FormatException("Unable to parse string as Color");                  }
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseColor,The following statement contains a magic number: switch (splits.Length)                  {                      case 3:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2]));                      case 4:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2])' float.Parse(splits[3]));                      default:                          throw new FormatException("Unable to parse string as Color");                  }
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseColor,The following statement contains a magic number: switch (splits.Length)                  {                      case 3:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2]));                      case 4:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2])' float.Parse(splits[3]));                      default:                          throw new FormatException("Unable to parse string as Color");                  }
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseColor,The following statement contains a magic number: switch (splits.Length)                  {                      case 3:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2]));                      case 4:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2])' float.Parse(splits[3]));                      default:                          throw new FormatException("Unable to parse string as Color");                  }
Magic Number,KSPAPIExtensions,ParseUtils,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\ParseUtils.cs,ParseColor,The following statement contains a magic number: switch (splits.Length)                  {                      case 3:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2]));                      case 4:                          return new Color(float.Parse(splits[0])' float.Parse(splits[1])' float.Parse(splits[2])' float.Parse(splits[3]));                      default:                          throw new FormatException("Unable to parse string as Color");                  }
Magic Number,KSPAPIExtensions,UncheckedMesh,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\UnityUtils.cs,UncheckedMesh,The following statement contains a magic number: triangles = new int[nTri * 3];
Magic Number,KSPAPIExtensions,UncheckedMesh,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\UnityUtils.cs,DumpMesh,The following statement contains a magic number: sb                      .Append(triangles[i]).Append(''')                      .Append(triangles[i + 1]).Append(''')                      .Append(triangles[i + 2]).AppendLine();
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: sliderGo.transform.localScale = new Vector3(0.81f' 1' 1);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: fieldNameGo.transform.localPosition = new Vector3(24' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: fieldNameGo.transform.localPosition = new Vector3(24' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incDownGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incDownGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incDownGo.transform.localPosition = new Vector3(11.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incDownGo.transform.localPosition = new Vector3(11.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incDownLabelGo.transform.localPosition = new Vector3(5.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incDownLabelGo.transform.localPosition = new Vector3(5.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incUpGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incUpGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incUpGo.transform.localPosition = new Vector3(187.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incUpGo.transform.localPosition = new Vector3(187.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incUpLabelGo.transform.localPosition = new Vector3(181.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionChooseOption,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionChooseOption.cs,CreateTemplate,The following statement contains a magic number: incUpLabelGo.transform.localPosition = new Vector3(181.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionResourceEditorImproved,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,UpdateItem,The following statement contains a magic number: Func<double' string> Formatter = prefix.GetFormatter(resource.maxAmount' sigFigs: 4);
Magic Number,KSPAPIExtensions,UIPartActionResourceEditorImproved,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionsExtended.cs,OnSliderChanged,The following statement contains a magic number: resource.amount = prefix.Round(slider.Value * resource.maxAmount' digits:4);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: sliderGo.transform.localScale = new Vector3(0.65f' 1' 1);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: fieldNameGo.transform.localPosition = new Vector3(40' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: fieldNameGo.transform.localPosition = new Vector3(40' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: fieldValueGo.transform.localPosition = new Vector3(110' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: fieldValueGo.transform.localPosition = new Vector3(110' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localPosition = new Vector3(11.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownGo.transform.localPosition = new Vector3(11.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownLabelGo.transform.localPosition = new Vector3(5.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeDownLabelGo.transform.localPosition = new Vector3(5.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallDownGo.transform.localScale = new Vector3(0.35f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallDownGo.transform.localScale = new Vector3(0.35f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallDownGo.transform.localPosition = new Vector3(29' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallDownGo.transform.localPosition = new Vector3(29' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallDownLabelGo.transform.localPosition = new Vector3(25.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallDownLabelGo.transform.localPosition = new Vector3(25.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallUpGo.transform.localScale = new Vector3(0.35f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallUpGo.transform.localScale = new Vector3(0.35f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallUpGo.transform.localPosition = new Vector3(170' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallUpGo.transform.localPosition = new Vector3(170' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallUpLabelGo.transform.localPosition = new Vector3(167.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incSmallUpLabelGo.transform.localPosition = new Vector3(167.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localScale = new Vector3(0.45f' 1.1f' 1f);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localPosition = new Vector3(187.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpGo.transform.localPosition = new Vector3(187.5f' -9' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpLabelGo.transform.localPosition = new Vector3(181.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,CreateTemplate,The following statement contains a magic number: incLargeUpLabelGo.transform.localPosition = new Vector3(181.5f' -7' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,Setup,The following statement contains a magic number: value = GetFieldValue() + 0.1f;
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,buttons_ValueChanged,The following statement contains a magic number: newValue = value - excess + increment * 2;
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,buttons_ValueChanged,The following statement contains a magic number: increment - excess < FieldInfo.incrementSlide / 2
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,SliderRange,The following statement contains a magic number: valueLow = Mathf.Floor((newValue + FieldInfo.incrementSlide / 2f) / FieldInfo.incrementLarge) * FieldInfo.incrementLarge;
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,UpdateFieldInfo,The following statement contains a magic number: fieldName.transform.localPosition = new Vector3(6' -8' 0);
Magic Number,KSPAPIExtensions,UIPartActionFloatEdit,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Tweakables\UIPartActionFloatEdit.cs,UpdateFieldInfo,The following statement contains a magic number: fieldName.transform.localPosition = new Vector3(6' -8' 0);
Magic Number,KSPAPIExtensions,CompatibilityChecker,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\zzVersionChecker.cs,IsWin64,The following statement contains a magic number: return (IntPtr.Size == 8) && (Environment.OSVersion.Platform == PlatformID.Win32NT);
Magic Number,KSPAPIExtensions.DebuggingUtils,Debugging,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\DebuggingUtils.cs,DumpMesh,The following statement contains a magic number: sb                      .Append(mesh.triangles[i]).Append(''')                      .Append(mesh.triangles[i + 1]).Append(''')                      .Append(mesh.triangles[i + 2]).AppendLine();
Magic Number,KSPAPIExtensions.DebuggingUtils,ModulePhysicsDebugger,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\Utils\PhysicsDebugger.cs,FixedUpdate,The following statement contains a magic number: HighLogic.LoadedSceneIsFlight && (Time.time - lastFixedUpdate) > 10
Magic Number,KSPAPIExtensions.PartMessage,MessageEnumerator,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,MoveNext,The following statement contains a magic number: switch (pos)                  {                      case -1:                          current = top;                          pos = 0;                          break;                      case 1:                          return false;                      case 0:                          PartMessageDelegate evt = (PartMessageDelegate)current.GetCustomAttributes(typeof(PartMessageDelegate)' true)[0];                          current = evt.Parent;                          break;                      case 2:                          throw new InvalidOperationException("Enumerator disposed");                  }
Magic Number,KSPAPIExtensions.PartMessage,MessageEnumerator,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,Dispose,The following statement contains a magic number: pos = 2;
Missing Default,KSPAPIExtensions.PartMessage,MessageEnumerator,D:\research\architectureSmells\repos1\Swamp-Ig_KSPAPIExtensions\Source\PartMessage\zzImplementation.cs,MoveNext,The following switch statement is missing a default case: switch (pos)                  {                      case -1:                          current = top;                          pos = 0;                          break;                      case 1:                          return false;                      case 0:                          PartMessageDelegate evt = (PartMessageDelegate)current.GetCustomAttributes(typeof(PartMessageDelegate)' true)[0];                          current = evt.Parent;                          break;                      case 2:                          throw new InvalidOperationException("Enumerator disposed");                  }
